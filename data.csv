category,subcategory,api_name,communication,method,url_name,api_id,function_name,description,args,returns,example_usage,response,example_question,url_main,url_chk
domestic_futureoption,기본시세,선물옵션 시세호가,REST,GET,/uapi/domestic-futureoption/v1/quotations/inquire-asking-price,v1_국내선물-007,inquire_asking_price,선물옵션 시세호가 API입니다.,"fid_cond_mrkt_div_code (str): [필수] FID 조건 시장 분류 코드 (ex. F: 지수선물, JF: 주식선물)
fid_input_iscd (str): [필수] FID 입력 종목코드 (ex. 101W09)
env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터, output2 데이터)","     df1, df2 = inquire_asking_price(""F"", ""101W09"", ""real"")
     print(df1)
     print(df2)","{
    'hts_kor_isnm': 'HTS 한글 종목명',
    'futs_prpr': '선물 현재가',
    'prdy_vrss_sign': '전일 대비 부호',
    'futs_prdy_vrss': '선물 전일 대비',
    'futs_prdy_ctrt': '선물 전일 대비율',
    'acml_vol': '누적 거래량',
    'futs_prdy_clpr': '선물 전일 종가',
    'futs_shrn_iscd': '선물 단축 종목코드',
    'futs_askp1': '선물 매도호가1',
    'futs_askp2': '선물 매도호가2',
    'futs_askp3': '선물 매도호가3',
    'futs_askp4': '선물 매도호가4',
    'futs_askp5': '선물 매도호가5',
    'futs_bidp1': '선물 매수호가1',
    'futs_bidp2': '선물 매수호가2',
    'futs_bidp3': '선물 매수호가3',
    'futs_bidp4': '선물 매수호가4',
    'futs_bidp5': '선물 매수호가5',
    'askp_rsqn1': '매도호가 잔량1',
    'askp_rsqn2': '매도호가 잔량2',
    'askp_rsqn3': '매도호가 잔량3',
    'askp_rsqn4': '매도호가 잔량4',
    'askp_rsqn5': '매도호가 잔량5',
    'bidp_rsqn1': '매수호가 잔량1',
    'bidp_rsqn2': '매수호가 잔량2',
    'bidp_rsqn3': '매수호가 잔량3',
    'bidp_rsqn4': '매수호가 잔량4',
    'bidp_rsqn5': '매수호가 잔량5',
    'askp_csnu1': '매도호가 건수1',
    'askp_csnu2': '매도호가 건수2',
    'askp_csnu3': '매도호가 건수3',
    'askp_csnu4': '매도호가 건수4',
    'askp_csnu5': '매도호가 건수5',
    'bidp_csnu1': '매수호가 건수1',
    'bidp_csnu2': '매수호가 건수2',
    'bidp_csnu3': '매수호가 건수3',
    'bidp_csnu4': '매수호가 건수4',
    'bidp_csnu5': '매수호가 건수5',
    'total_askp_rsqn': '총 매도호가 잔량',
    'total_bidp_rsqn': '총 매수호가 잔량',
    'total_askp_csnu': '총 매도호가 건수',
    'total_bidp_csnu': '총 매수호가 건수',
    'aspr_acpt_hour': '호가 접수 시간'
}","[""선물 호가창 보여줘."", ""지수선물 현재 호가 상황 알려줘."", ""코스피200 선물 9월물의 총 매도호가 잔량과 총 매수호가 잔량 알려줘."", ""지금 바로 시장가로 사면 얼마에 체결될지 예상가 좀 알려줘."", ""HTS 한글 종목명과 선물 현재가 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_asking_price/inquire_asking_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_asking_price/chk_inquire_asking_price.py
domestic_futureoption,기본시세,선물옵션 분봉조회,REST,GET,/uapi/domestic-futureoption/v1/quotations/inquire-time-fuopchartprice,v1_국내선물-012,inquire_time_fuopchartprice,"선물옵션 분봉조회 API입니다. 실전계좌의 경우, 한 번의 호출에 최대 102건까지 확인 가능하며, FID_INPUT_DATE_1(입력날짜), FID_INPUT_HOUR_1(입력시간)을 이용하여 다음 조회 가능합니다.","fid_cond_mrkt_div_code (str): [필수] FID 조건 시장 분류 코드 (ex. F: 지수선물, O: 지수옵션)
fid_input_iscd (str): [필수] FID 입력 종목코드 (ex. 101T12)
fid_hour_cls_code (str): [필수] FID 시간 구분 코드 (ex. 30: 30초, 60: 1분)
fid_pw_data_incu_yn (str): [필수] FID 과거 데이터 포함 여부 (ex. Y:과거, N: 당일)
fid_fake_tick_incu_yn (str): [필수] FID 허봉 포함 여부 (ex. N)
fid_input_date_1 (str): [필수] FID 입력 날짜1 (ex. 20230901)
fid_input_hour_1 (str): [필수] FID 입력 시간1 (ex. 100000)","Tuple[pd.DataFrame, pd.DataFrame]: 선물옵션 분봉 데이터 (output1, output2)","     df1, df2 = inquire_time_fuopchartprice(""F"", ""101T12"", ""60"", ""Y"", ""N"", ""20230901"", ""100000"")
     print(df1)
     print(df2)","{
    'futs_prdy_vrss': '선물 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'futs_prdy_ctrt': '선물 전일 대비율',
    'futs_prdy_clpr': '선물 전일 종가',
    'prdy_nmix': '전일 지수',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'futs_prpr': '선물 현재가',
    'futs_shrn_iscd': '선물 단축 종목코드',
    'prdy_vol': '전일 거래량',
    'futs_mxpr': '선물 상한가',
    'futs_llam': '선물 하한가',
    'futs_oprc': '선물 시가2',
    'futs_hgpr': '선물 최고가',
    'futs_lwpr': '선물 최저가',
    'futs_prdy_oprc': '선물 전일 시가',
    'futs_prdy_hgpr': '선물 전일 최고가',
    'futs_prdy_lwpr': '선물 전일 최저가',
    'futs_askp': '선물 매도호가',
    'futs_bidp': '선물 매수호가',
    'basis': '베이시스',
    'kospi200_nmix': 'KOSPI200 지수',
    'kospi200_prdy_vrss': 'KOSPI200 전일 대비',
    'kospi200_prdy_ctrt': 'KOSPI200 전일 대비율',
    'kospi200_prdy_vrss_sign': 'KOSPI200 전일 대비 부호',
    'hts_otst_stpl_qty': 'HTS 미결제 약정 수량',
    'otst_stpl_qty_icdc': '미결제 약정 수량 증감',
    'tday_rltv': '당일 체결강도',
    'hts_thpr': 'HTS 이론가',
    'dprt': '괴리율',
    'stck_bsop_date': '주식 영업 일자',
    'stck_cntg_hour': '주식 체결 시간',
    'futs_prpr': '선물 현재가',
    'futs_oprc': '선물 시가2',
    'futs_hgpr': '선물 최고가',
    'futs_lwpr': '선물 최저가',
    'cntg_vol': '체결 거래량',
    'acml_tr_pbmn': '누적 거래 대금'
}","[""선물 1분봉 차트 데이터 줘."", ""오늘 지수옵션 분봉 흐름 보여줘."", ""30초봉으로 조회해서 오늘 오전장 선물 최고가랑 최저가 알려줘."", ""코스피200 선물 9월물의 오늘 누적 거래 대금 알려줘."", ""오늘의 KOSPI200 지수 분봉 데이터 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_time_fuopchartprice/inquire_time_fuopchartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_time_fuopchartprice/chk_inquire_time_fuopchartprice.py
domestic_futureoption,기본시세,선물옵션 시세,REST,GET,/uapi/domestic-futureoption/v1/quotations/inquire-price,v1_국내선물-006,inquire_price,선물옵션 시세 API입니다. ※ 종목코드 마스터파일 정제코드는 한국투자증권 Github 참고: https://github.com/koreainvestment/open-trading-api/tree/main/stocks_info,"fid_cond_mrkt_div_code (str): [필수] FID 조건 시장 분류 코드 (ex. F: 지수선물, O: 지수옵션)
fid_input_iscd (str): [필수] FID 입력 종목코드 (ex. 101W09)
env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)","Tuple[pd.DataFrame, pd.DataFrame, pd.DataFrame]: 선물옵션 시세 데이터 (output1, output2, output3)","     result1, result2, result3 = inquire_price(
         fid_cond_mrkt_div_code=""F"",
         fid_input_iscd=""101W09"",
         env_dv=""real""
     )
     print(result1)","{
    'hts_kor_isnm': 'HTS 한글 종목명',
    'futs_prpr': '선물 현재가',
    'futs_prdy_vrss': '선물 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'futs_prdy_clpr': '선물 전일 종가',
    'futs_prdy_ctrt': '선물 전일 대비율',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'hts_otst_stpl_qty': 'HTS 미결제 약정 수량',
    'otst_stpl_qty_icdc': '미결제 약정 수량 증감',
    'futs_oprc': '선물 시가2',
    'futs_hgpr': '선물 최고가',
    'futs_lwpr': '선물 최저가',
    'futs_mxpr': '선물 상한가',
    'futs_llam': '선물 하한가',
    'basis': '베이시스',
    'futs_sdpr': '선물 기준가',
    'hts_thpr': 'HTS 이론가',
    'dprt': '괴리율',
    'crbr_aply_mxpr': '서킷브레이커 적용 상한가',
    'crbr_aply_llam': '서킷브레이커 적용 하한가',
    'futs_last_tr_date': '선물 최종 거래 일자',
    'hts_rmnn_dynu': 'HTS 잔존 일수',
    'futs_lstn_medm_hgpr': '선물 상장 중 최고가',
    'futs_lstn_medm_lwpr': '선물 상장 중 최저가',
    'delta_val': '델타 값',
    'gama': '감마',
    'theta': '세타',
    'vega': '베가',
    'rho': '로우',
    'hist_vltl': '역사적 변동성',
    'hts_ints_vltl': 'HTS 내재 변동성',
    'mrkt_basis': '시장 베이시스',
    'acpr': '행사가',
    'bstp_cls_code': '업종 구분 코드',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'bstp_nmix_prpr': '업종 지수 현재가',
    'prdy_vrss_sign': '전일 대비 부호',
    'bstp_nmix_prdy_vrss': '업종 지수 전일 대비',
    'bstp_nmix_prdy_ctrt': '업종 지수 전일 대비율'
}","[""코스피200 선물 현재가 알려줘."", ""삼성전자 주식선물 시세 좀 알려줘."", ""모의투자 환경으로 코스피200 선물 시세 조회해줘."", ""코스피200 선물의 오늘 상한가, 하한가, 그리고 HTS 이론가 알려줘."", ""이 옵션의 델타 값, 감마, 세타 값 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_price/inquire_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_price/chk_inquire_price.py
domestic_futureoption,기본시세,선물옵션기간별시세(일/주/월/년),REST,GET,/uapi/domestic-futureoption/v1/quotations/inquire-daily-fuopchartprice,v1_국내선물-008,inquire_daily_fuopchartprice,"(지수)선물옵션 기간별시세 데이터(일/주/월/년) 조회 (최대 100건 조회) 실전계좌의 경우, 한 번의 호출에 최대 100건까지 확인 가능하며, 이후의 값은 연속조회를 통해 확인하실 수 있습니다. 모의계좌의 경우, 한 번의 호출에 최대 100건까지 확인 가능하며, 이후의 값은 연속조회를 통해 확인하실 수 있습니다.","fid_cond_mrkt_div_code (str): [필수] FID 조건 시장 분류 코드 (ex. F: 지수선물, O: 지수옵션)
fid_input_iscd (str): [필수] 종목코드 (ex. 101W09)
fid_input_date_1 (str): [필수] 조회 시작일자 (ex. 20220301)
fid_input_date_2 (str): [필수] 조회 종료일자 (ex. 20220810)
fid_period_div_code (str): [필수] 기간분류코드 (ex. D: 일봉, W: 주봉)
env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)","Tuple[pd.DataFrame, pd.DataFrame]: (기본정보, 차트데이터) 튜플","     output1, output2 = inquire_daily_fuopchartprice(
         fid_cond_mrkt_div_code=""F"",
         fid_input_iscd=""101W09"",
         fid_input_date_1=""20250301"",
         fid_input_date_2=""20250810"",
         fid_period_div_code=""D"",
         env_dv=""real""
     )
     print(output1)
     print(output2)","{
    'futs_prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'futs_prdy_ctrt': '선물 전일 대비율',
    'futs_prdy_clpr': '선물 전일 종가',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'futs_prpr': '현재가',
    'futs_shrn_iscd': '단축 종목코드',
    'prdy_vol': '전일 거래량',
    'futs_mxpr': '상한가',
    'futs_llam': '하한가',
    'futs_oprc': '시가',
    'futs_hgpr': '최고가',
    'futs_lwpr': '최저가',
    'futs_prdy_oprc': '전일 시가',
    'futs_prdy_hgpr': '전일 최고가',
    'futs_prdy_lwpr': '전일 최저가',
    'futs_askp': '매도호가',
    'futs_bidp': '매수호가',
    'basis': '베이시스',
    'kospi200_nmix': 'KOSPI200 지수',
    'kospi200_prdy_vrss': 'KOSPI200 전일 대비',
    'kospi200_prdy_ctrt': 'KOSPI200 전일 대비율',
    'kospi200_prdy_vrss_sign': '전일 대비 부호',
    'hts_otst_stpl_qty': 'HTS 미결제 약정 수량',
    'otst_stpl_qty_icdc': '미결제 약정 수량 증감',
    'tday_rltv': '당일 체결강도',
    'hts_thpr': 'HTS 이론가',
    'dprt': '괴리율',
    'stck_bsop_date': '영업 일자',
    'futs_prpr': '현재가',
    'futs_oprc': '시가',
    'futs_hgpr': '최고가',
    'futs_lwpr': '최저가',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'mod_yn': '변경 여부'
}","[""지수선물 일봉 데이터 조회해줘."", ""주간 단위로 옵션 가격 추이 좀 보여줘."", ""월봉으로 작년 한 해 동안 코스피200 선물의 최고가와 최저가 알려줘."", ""코스피200 선물의 HTS 미결제 약정 수량 증감 추이 보여줘."", ""올해 1월부터 지금까지의 일봉 데이터와 누적 거래량 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_daily_fuopchartprice/inquire_daily_fuopchartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_daily_fuopchartprice/chk_inquire_daily_fuopchartprice.py
domestic_futureoption,기본시세,선물옵션 일중예상체결추이,REST,GET,/uapi/domestic-futureoption/v1/quotations/exp-price-trend,국내선물-018,exp_price_trend,선물옵션 일중예상체결추이 API입니다. 한국투자 HTS(eFriend Plus) > [0548] 선물옵션 예상체결추이 화면의 기능을 API로 개발한 사항입니다.,"fid_input_iscd (str): [필수] 입력 종목코드 (ex. 101V06)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. F)","Tuple[pd.DataFrame, pd.DataFrame]: (output1, output2) 데이터프레임 튜플","     df1, df2 = exp_price_trend(fid_input_iscd=""101W09"", fid_cond_mrkt_div_code=""F"")
     print(df1)
     print(df2)","{
    'hts_kor_isnm': '영업 시간',
    'futs_antc_cnpr': '업종 지수 현재가',
    'antc_cntg_vrss_sign': '업종 지수 전일 대비',
    'futs_antc_cntg_vrss': '전일 대비 부호',
    'antc_cntg_prdy_ctrt': '업종 지수 전일 대비율',
    'futs_sdpr': '누적 거래 대금',
    'stck_cntg_hour': '주식체결시간',
    'futs_antc_cnpr': '선물예상체결가',
    'antc_cntg_vrss_sign': '예상체결대비부호',
    'futs_antc_cntg_vrss': '선물예상체결대비',
    'antc_cntg_prdy_ctrt': '예상체결전일대비율'
}","[""오늘 지수선물 예상 체결가 보여줘."", ""장 시작 전 동시호가 상황 알려줘."", ""코스닥150 선물 예상체결가 추이 보여줘."", ""지금 주문하면 얼마에 체결될지 선물예상체결가 알려줘."", ""예상 체결가의 전일대비 등락률도 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/exp_price_trend/exp_price_trend.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/exp_price_trend/chk_exp_price_trend.py
domestic_futureoption,기본시세,국내선물 기초자산 시세,REST,GET,/uapi/domestic-futureoption/v1/quotations/display-board-top,국내선물-021,display_board_top,"국내선물 기초자산 시세 API입니다. 한국투자 HTS(eFriend Plus) > [0503] 선물옵션 종합시세(Ⅰ) 화면의 ""상단 바"" 기능을 API로 개발한 사항입니다.","fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. F)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 101V06)
fid_cond_mrkt_div_code1 (str): 조건 시장 분류 코드
fid_cond_scr_div_code (str): 조건 화면 분류 코드
fid_mtrt_cnt (str): 만기 수
fid_cond_mrkt_cls_code (str): 조건 시장 구분 코드","Tuple[pd.DataFrame, pd.DataFrame]: (output1, output2) 데이터프레임 튜플","     output1, output2 = display_board_top(fid_cond_mrkt_div_code=""F"", fid_input_iscd=""101W09"")
     print(output1)
     print(output2)","{
    'unas_prpr': '기초자산 현재가',
    'unas_prdy_vrss': '기초자산 전일 대비',
    'unas_prdy_vrss_sign': '기초자산 전일 대비 부호',
    'unas_prdy_ctrt': '기초자산 전일 대비율',
    'unas_acml_vol': '기초자산 누적 거래량',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'futs_prpr': '선물 현재가',
    'futs_prdy_vrss': '선물 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'futs_prdy_ctrt': '선물 전일 대비율',
    'hts_rmnn_dynu': 'HTS 잔존 일수'
}","[""코스피200 기초자산 현재 시세 알려줘."", ""선물이랑 기초자산 가격을 같이 보고 싶어."", ""코스피200 9월물 선물의 기초자산 정보 조회해줘."", ""지금 선물 만기까지 잔존일수 알려줘."", ""기초자산의 전일 대비율 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/display_board_top/display_board_top.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/display_board_top/chk_display_board_top.py
domestic_futureoption,주문/계좌,선물옵션 잔고현황,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-balance,v1_국내선물-004,inquire_balance,"선물옵션 잔고현황 API입니다. 한 번의 호출에 최대 20건까지 확인 가능하며, 이후의 값은 연속조회를 통해 확인하실 수 있습니다.","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 03)
mgna_dvsn (str): [필수] 증거금 구분 (ex. 01:게시,02:유지)
excc_stat_cd (str): [필수] 정산상태코드 (ex. 1:정산,2:본정산)
FK200 (str): 연속조회검색조건200
NK200 (str): 연속조회키200
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀 깊이 (자동 관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: (output1, output2) 선물옵션 잔고현황 데이터","     df1, df2 = inquire_balance(env_dv=""real"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, mgna_dvsn=""01"", excc_stat_cd=""1"")
     print(df1)
     print(df2)","{
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'shtn_pdno': '단축상품번호',
    'prdt_name': '상품명',
    'sll_buy_dvsn_name': '매도매수구분명',
    'cblc_qty': '잔고수량',
    'excc_unpr': '정산단가',
    'ccld_avg_unpr1': '체결평균단가1',
    'idx_clpr': '지수종가',
    'pchs_amt': '매입금액',
    'evlu_amt': '평가금액',
    'evlu_pfls_amt': '평가손익금액',
    'trad_pfls_amt': '매매손익금액',
    'lqd_psbl_qty': '청산가능수량',
    'dnca_cash': '예수금현금',
    'frcr_dncl_amt': '외화예수금액',
    'dnca_sbst': '예수금대용',
    'tot_dncl_amt': '총예수금액',
    'tot_ccld_amt': '총체결금액',
    'cash_mgna': '현금증거금',
    'sbst_mgna': '대용증거금',
    'mgna_tota': '증거금총액',
    'opt_dfpa': '옵션차금',
    'thdt_dfpa': '당일차금',
    'rnwl_dfpa': '갱신차금',
    'fee': '수수료',
    'nxdy_dnca': '익일예수금',
    'nxdy_dncl_amt': '익일예수금액',
    'prsm_dpast': '추정예탁자산',
    'prsm_dpast_amt': '추정예탁자산금액',
    'pprt_ord_psbl_cash': '적정주문가능현금',
    'add_mgna_cash': '추가증거금현금',
    'add_mgna_tota': '추가증거금총액',
    'futr_trad_pfls_amt': '선물매매손익금액',
    'opt_trad_pfls_amt': '옵션매매손익금액',
    'futr_evlu_pfls_amt': '선물평가손익금액',
    'opt_evlu_pfls_amt': '옵션평가손익금액',
    'trad_pfls_amt_smtl': '매매손익금액합계',
    'evlu_pfls_amt_smtl': '평가손익금액합계',
    'wdrw_psbl_tot_amt': '인출가능총금액',
    'ord_psbl_cash': '주문가능현금',
    'ord_psbl_sbst': '주문가능대용',
    'ord_psbl_tota': '주문가능총액',
    'pchs_amt_smtl': '매입금액합계',
    'evlu_amt_smtl': '평가금액합계'
}","[""내 선물옵션 계좌 잔고 보여줘."", ""내 계좌에 있는 종목들의 평가손익금액 알려줘."", ""내 계좌의 총평가손익금액과 인출가능총금액 확인해줘."", ""지금 청산가능수량이 얼마나 돼?"", ""내 계좌의 주문가능총액 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_balance/inquire_balance.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_balance/chk_inquire_balance.py
domestic_futureoption,주문/계좌,(야간)선물옵션 잔고현황,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-ngt-balance,국내선물-010,inquire_ngt_balance,(야간)선물옵션 잔고현황 API입니다.,"cano (str): [필수] 종합계좌번호 (ex. 계좌번호 체계(8-2)의 앞 8자리)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 계좌번호 체계(8-2)의 뒤 2자리)
mgna_dvsn (str): [필수] 증거금구분 (ex. 01:개시, 02:유지)
excc_stat_cd (str): [필수] 정산상태코드 (ex. 1:정산, 2:본정산)
acnt_pwd (str): 계좌비밀번호
FK200 (str): 연속조회검색조건200
NK200 (str): 연속조회키200
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터, output2 데이터)","     df1, df2 = inquire_ngt_balance(""12345678"", ""01"", ""01"", ""1"")
     print(df1, df2)","{
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'shtn_pdno': '단축상품번호',
    'prdt_name': '상품명',
    'sll_buy_dvsn_name': '매도매수구분명',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'trad_dvsn_name': '매매구분명',
    'cblc_qty': '잔고수량',
    'excc_unpr': '정산단가',
    'ccld_avg_unpr1': '체결평균단가1',
    'idx_clpr': '지수종가',
    'pchs_amt': '매입금액',
    'evlu_amt': '평가금액',
    'evlu_pfls_amt': '평가손익금액',
    'trad_pfls_amt': '매매손익금액',
    'lqd_psbl_qty': '청산가능수량',
    'dnca_cash': '예수금현금',
    'frcr_dncl_amt': '외화예수금액',
    'dnca_sbst': '예수금대용',
    'tot_dncl_amt': '총예수금액',
    'cash_mgna': '현금증거금',
    'sbst_mgna': '대용증거금',
    'mgna_tota': '증거금총액',
    'opt_dfpa': '옵션차금',
    'thdt_dfpa': '당일차금',
    'rnwl_dfpa': '갱신차금',
    'fee': '수수료',
    'nxdy_dnca': '익일예수금',
    'nxdy_dncl_amt': '익일예수금액',
    'prsm_dpast': '추정예탁자산',
    'pprt_ord_psbl_cash': '적정주문가능현금',
    'add_mgna_cash': '추가증거금현금',
    'add_mgna_tota': '추가증거금총액',
    'futr_trad_pfls_amt': '선물매매손익금액',
    'opt_trad_pfls_amt': '옵션매매손익금액',
    'futr_evlu_pfls_amt': '선물평가손익금액',
    'opt_evlu_pfls_amt': '옵션평가손익금액',
    'trad_pfls_amt_smtl': '매매손익금액합계',
    'evlu_pfls_amt_smtl': '평가손익금액합계',
    'wdrw_psbl_tot_amt': '인출가능총금액',
    'ord_psbl_cash': '주문가능현금',
    'ord_psbl_sbst': '주문가능대용',
    'ord_psbl_tota': '주문가능총액',
    'mmga_tot_amt': '유지증거금총금액',
    'mmga_cash_amt': '유지증거금현금금액',
    'mtnc_rt': '유지비율',
    'isfc_amt': '부족금액',
    'pchs_amt_smtl': '매입금액합계',
    'evlu_amt_smtl': '평가금액합계'
}","[""내 야간 선물옵션 잔고 현황 알려줘."", ""야간장 마감 후 내 계좌 평가금액 알려줘."", ""내 계좌의 야간 선물옵션 포지션의 유지비율 보여줘."", ""야간에 거래한 선물옵션의 매매손익금액합계 알려줘."", ""내 야간 선물옵션 계좌의 주문가능총액은 얼마인지 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_ngt_balance/inquire_ngt_balance.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_ngt_balance/chk_inquire_ngt_balance.py
domestic_futureoption,주문/계좌,선물옵션 주문체결내역조회,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-ccnl,v1_국내선물-003,inquire_ccnl,"선물옵션 주문체결내역조회 API입니다. 한 번의 호출에 최대 100건까지 확인 가능하며, 이후의 값은 연속조회를 통해 확인하실 수 있습니다.","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 03)
strt_ord_dt (str): [필수] 시작주문일자 (ex. 주문내역 조회 시작 일자, YYYYMMDD)
end_ord_dt (str): [필수] 종료주문일자 (ex. 주문내역 조회 마지막 일자, YYYYMMDD)
sll_buy_dvsn_cd (str): [필수] 매도매수구분코드 (ex. 00:전체, 01:매도, 02:매수)
ccld_nccs_dvsn (str): [필수] 체결미체결구분 (ex. 00:전체, 01:체결, 02:미체결)
sort_sqn (str): [필수] 정렬순서 (ex. AS:정순, DS:역순)
pdno (str, optional): 상품번호. Defaults to """".
strt_odno (str, optional): 시작주문번호. Defaults to """".
mket_id_cd (str, optional): 시장ID코드. Defaults to """".
FK200 (str, optional): 연속조회검색조건200. Defaults to """".
NK200 (str, optional): 연속조회키200. Defaults to """".
tr_cont (str, optional): 연속거래여부. Defaults to """".
dataframe1 (Optional[pd.DataFrame], optional): 누적 데이터프레임1. Defaults to None.
dataframe2 (Optional[pd.DataFrame], optional): 누적 데이터프레임2. Defaults to None.
depth (int, optional): 내부 재귀깊이 (자동관리). Defaults to 0.
max_depth (int, optional): 최대 재귀 횟수 제한. Defaults to 10.","Tuple[pd.DataFrame, pd.DataFrame]: 주문체결내역 데이터 (output1, output2)","     df1, df2 = inquire_ccnl(env_dv=""real"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, strt_ord_dt=""20220730"", end_ord_dt=""20220830"", sll_buy_dvsn_cd=""00"", ccld_nccs_dvsn=""00"", sort_sqn=""DS"")
     print(df1)
     print(df2)","{
    'ord_gno_brno': '주문채번지점번호',
    'cano': '종합계좌번호',
    'csac_name': '종합계좌명',
    'acnt_prdt_cd': '계좌상품코드',
    'ord_dt': '주문일자',
    'odno': '주문번호',
    'orgn_odno': '원주문번호',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'trad_dvsn_name': '매매구분명',
    'nmpr_type_cd': '호가유형코드',
    'nmpr_type_name': '호가유형명',
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'prdt_type_cd': '상품유형코드',
    'ord_qty': '주문수량',
    'ord_idx': '주문지수',
    'qty': '잔량',
    'ord_tmd': '주문시각',
    'tot_ccld_qty': '총체결수량',
    'avg_idx': '평균지수',
    'tot_ccld_amt': '총체결금액',
    'rjct_qty': '거부수량',
    'ingr_trad_rjct_rson_cd': '장내매매거부사유코드',
    'ingr_trad_rjct_rson_name': '장내매매거부사유명',
    'ord_stfno': '주문직원번호',
    'sprd_item_yn': '스프레드종목여부',
    'ord_ip_addr': '주문IP주소',
    'tot_ord_qty': '총주문수량',
    'tot_ccld_amt_smtl': '총체결금액합계',
    'tot_ccld_qty_smtl': '총체결수량합계',
    'fee_smtl': '수수료합계',
    'ctac_tlno': '연락전화번호'
}","[""오늘 내 선물옵션 체결 내역 좀 보여줘."", ""지난주 선물옵션 매매 기록 조회해줘."", ""내 계좌에 미체결 주문 있는지 확인해줘."", ""어제 판 선물 평균지수 알려줘."", ""내 주문 내역에서 총 체결 수수료 합계 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_ccnl/inquire_ccnl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_ccnl/chk_inquire_ccnl.py
domestic_futureoption,주문/계좌,(야간)선물옵션 주문체결 내역조회,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-ngt-ccnl,국내선물-009,inquire_ngt_ccnl,(야간)선물옵션 주문체결 내역조회 API입니다.,"cano (str): [필수] 종합계좌번호 (ex. 계좌번호 체계(8-2)의 앞 8자리)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 계좌번호 체계(8-2)의 뒤 2자리)
strt_ord_dt (str): [필수] 시작주문일자
end_ord_dt (str): [필수] 종료주문일자 (ex. 조회하려는 마지막 일자 다음일자로 조회 (ex. 20221011 까지의 내역을 조회하고자 할 경우, 20221012로 종료주문일자 설정))
sll_buy_dvsn_cd (str): [필수] 매도매수구분코드 (ex. 공란:default, 00:전체, 01:매도, 02:매수)
ccld_nccs_dvsn (str): [필수] 체결미체결구분 (ex. 00:전체, 01:체결, 02:미체결)
sort_sqn (str): 정렬순서 (ex. 공란:default(DS:정순, 그외:역순))
strt_odno (str): 시작주문번호 (ex. 공란:default)
pdno (str): 상품번호 (ex. 공란:default)
mket_id_cd (str): 시장ID코드 (ex. 공란:default)
fuop_dvsn_cd (str): 선물옵션구분코드 (ex. 공란:전체, 01:선물, 02:옵션)
scrn_dvsn (str): 화면구분 (ex. 02(Default))
FK200 (str): 연속조회검색조건200 (ex. 공란:최초 조회시, 이전 조회 Output CTX_AREA_FK200값:다음페이지 조회시(2번째부터))
NK200 (str): 연속조회키200 (ex. 공란:최초 조회시, 이전 조회 Output CTX_AREA_NK200값:다음페이지 조회시(2번째부터))
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터, output2 데이터)","     df1, df2 = inquire_ngt_ccnl(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, strt_ord_dt=""20231201"", end_ord_dt=""20231214"", sll_buy_dvsn_cd=""00"", ccld_nccs_dvsn=""00"")
     print(df1)
     print(df2)","{
    'ord_gno_brno': '주문채번지점번호',
    'cano': '종합계좌번호',
    'csac_name': '종합계좌명',
    'acnt_prdt_cd': '계좌상품코드',
    'ord_dt': '주문일자',
    'odno': '주문번호',
    'orgn_odno': '원주문번호',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'trad_dvsn_name': '매매구분명',
    'nmpr_type_name': '호가유형명',
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'prdt_type_cd': '상품유형코드',
    'ord_qty': '주문수량',
    'ord_idx4': '주문지수',
    'qty': '잔량',
    'ord_tmd': '주문시각',
    'tot_ccld_qty': '총체결수량',
    'avg_idx': '평균지수',
    'tot_ccld_amt': '총체결금액',
    'rjct_qty': '거부수량',
    'ingr_trad_rjct_rson_cd': '장내매매거부사유코드',
    'ingr_trad_rjct_rson_name': '장내매매거부사유명',
    'ord_stfno': '주문직원번호',
    'sprd_item_yn': '스프레드종목여부',
    'ord_ip_addr': '주문IP주소',
    'tot_ord_qty': '총주문수량',
    'tot_ccld_qty': '총체결수량',
    'tot_ccld_qty_SMTL': '총체결수량',
    'tot_ccld_amt': '총체결금액',
    'tot_ccld_amt_SMTL': '총체결금액',
    'fee': '수수료',
    'ctac_tlno': '연락전화번호'
}","[""내 야간 선물옵션 주문 체결 내역 조회해줘."", ""어젯밤에 주문한 옵션 체결됐는지 확인해줘."", ""지난주 야간장 선물 거래 내역 전체 보여줘."", ""야간에 매도한 주문의 평균지수 알려줘."", ""야간 선물옵션 주문 내역에서 총체결금액 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_ngt_ccnl/inquire_ngt_ccnl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_ngt_ccnl/chk_inquire_ngt_ccnl.py
domestic_futureoption,주문/계좌,선물옵션 주문,REST,POST,/uapi/domestic-futureoption/v1/trading/order,v1_국내선물-001,order,"[국내선물옵션] 주문/계좌 > 선물옵션 주문[v1_국내선물-001] 선물옵션 주문 API입니다. * 선물옵션 운영시간 외 API 호출 시 애러가 발생하오니 운영시간을 확인해주세요. ※ POST API의 경우 BODY값의 key값들을 대문자로 작성하셔야 합니다. (EX. ""CANO"" : ""12345678"", ""ACNT_PRDT_CD"": ""01"",...) ※ 종목코드 마스터파일 파이썬 정제코드는 한국투자증권 Github 참고 부탁드립니다. https://github.com/koreainvestment/open-trading-api/tree/main/stocks_info","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
ord_dv (str): [필수] 매도매수구분 (ex. day:주간, night:야간)
ord_prcs_dvsn_cd (str): [필수] 주문처리구분코드 (ex. 02:주문전송)
cano (str): [필수] 종합계좌번호 (ex. 계좌번호 체계(8-2)의 앞 8자리)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 계좌번호 체계(8-2)의 뒤 2자리)
sll_buy_dvsn_cd (str): [필수] 매도매수구분코드 (ex. 01:매도, 02:매수)
shtn_pdno (str): [필수] 단축상품번호 (ex. 종목번호, 선물 6자리 (예: 101W09), 옵션 9자리 (예: 201S03370))
ord_qty (str): [필수] 주문수량
unit_price (str): [필수] 주문가격1 (ex. 시장가나 최유리 지정가인 경우 0으로 입력)
nmpr_type_cd (str): [필수] 호가유형코드 (ex. 01:지정가, 02:시장가, 03:조건부, 04:최유리)
krx_nmpr_cndt_cd (str): [필수] 한국거래소호가조건코드 (ex. 0:없음, 3:IOC, 4:FOK)
ord_dvsn_cd (str): [필수] 주문구분코드 (ex. 01:지정가, 02:시장가, 03:조건부, 04:최유리, 10:지정가(IOC), 11:지정가(FOK), 12:시장가(IOC), 13:시장가(FOK), 14:최유리(IOC), 15:최유리(FOK))
ctac_tlno (str): 연락전화번호 (ex. 고객의 연락 가능한 전화번호)
fuop_item_dvsn_cd (str): 선물옵션종목구분코드 (ex. 공란(Default))",pd.DataFrame: 선물옵션 주문 결과 데이터,"     df = order(env_dv=""real"", ord_dv=""day"", ord_prcs_dvsn_cd=""02"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, sll_buy_dvsn_cd=""02"", shtn_pdno=""101W09"", ord_qty=""1"", unit_price=""0"", nmpr_type_cd=""02"", krx_nmpr_cndt_cd=""0"", ord_dvsn_cd=""02"")
     print(df)","{
    'KRX_FWDG_ORD_ORGNO': '한국거래소전송주문조직번호',
    'ODNO': '주문번호',
    'ORD_TMD': '주문시각'
}","[""코스피200 선물 1계약 매수 주문 넣어줘."", ""옵션 시장가로 매도 주문 넣어줘."", ""지정가 IOC 주문으로 코스피200 선물 1계약 매수해줘."", ""지금 바로 선물 1계약 매수할게."", ""주문 넣고 주문번호 바로 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/order/order.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/order/chk_order.py
domestic_futureoption,주문/계좌,선물옵션 주문가능,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-psbl-order,v1_국내선물-005,inquire_psbl_order,선물옵션 주문가능 API입니다. 주문가능 내역과 수량을 확인하실 수 있습니다.,"env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 03)
pdno (str): [필수] 상품번호 (ex. 선물 6자리, 옵션 9자리)
sll_buy_dvsn_cd (str): [필수] 매도매수구분코드 (ex. 01:매도,02:매수)
unit_price (str): [필수] 주문가격1
ord_dvsn_cd (str): [필수] 주문구분코드",pd.DataFrame: 선물옵션 주문가능 데이터,"     df = inquire_psbl_order(env_dv=""real"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod,
                                        pdno=""101W09"", sll_buy_dvsn_cd=""02"", unit_price=""1"", ord_dvsn_cd=""01"")
     print(df)","{
    'tot_psbl_qty': '총가능수량',
    'lqd_psbl_qty1': '청산가능수량1',
    'ord_psbl_qty': '주문가능수량',
    'bass_idx': '기준지수'
}","[""선물 지금 몇 계약까지 살 수 있는지 총가능수량 알려줘."", ""옵션 매도 가능한 최대 수량 알려줘."", ""코스피200 선물 1계약 매수하는데 필요한 주문가능현금 알려줘."", ""내가 가진 돈으로 이 옵션을 최대한 몇 개나 살 수 있는지 주문가능수량 알려줘."", ""청산가능수량과 주문가능수량을 둘 다 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_psbl_order/inquire_psbl_order.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_psbl_order/chk_inquire_psbl_order.py
domestic_futureoption,주문/계좌,선물옵션 기준일체결내역,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-ccnl-bstime,v1_국내선물-016,inquire_ccnl_bstime,선물옵션 기준일체결내역 API입니다.,"cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 03)
ord_dt (str): [필수] 주문일자 (ex. 20250101)
fuop_tr_strt_tmd (str): [필수] 선물옵션거래시작시각 (ex. HHMMSS)
fuop_tr_end_tmd (str): [필수] 선물옵션거래종료시각 (ex. HHMMSS)
FK200 (str): 연속조회검색조건200
NK200 (str): 연속조회키200
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: 선물옵션 기준일체결내역 데이터 (output1, output2)","     df1, df2 = inquire_ccnl_bstime(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, ord_dt=""20230920"", fuop_tr_strt_tmd=""000000"", fuop_tr_end_tmd=""240000"")
     print(df1)
     print(df2)","{
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'odno': '주문번호',
    'tr_type_name': '거래유형명',
    'last_sttldt': '최종결제일',
    'ccld_idx': '체결지수',
    'ccld_qty': '체결량',
    'trad_amt': '매매금액',
    'fee': '수수료',
    'ccld_btwn': '체결시간',
    'tot_ccld_qty_smtl': '총체결수량합계',
    'tot_ccld_amt_smtl': '총체결금액합계',
    'fee_adjt': '수수료조정',
    'fee_smtl': '수수료합계'
}","[""오늘 내 선물옵션 체결내역 시간순으로 보여줘."", ""오전 9시부터 10시까지 내 체결 내역만 조회해줘."", ""내 계좌 오늘 거래한 내역 전부 보여줘."", ""오늘 내가 거래한 총 수수료가 얼마야?"", ""체결 내역에서 상품명도 같이 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_ccnl_bstime/inquire_ccnl_bstime.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_ccnl_bstime/chk_inquire_ccnl_bstime.py
domestic_futureoption,주문/계좌,선물옵션 정정취소주문,REST,POST,/uapi/domestic-futureoption/v1/trading/order-rvsecncl,v1_국내선물-002,order_rvsecncl,"선물옵션 주문 건에 대하여 정정 및 취소하는 API입니다. 단, 이미 체결된 건은 정정 및 취소가 불가합니다. ※ POST API의 경우 BODY값의 key값들을 대문자로 작성하셔야 합니다. (EX. ""CANO"" : ""12345678"", ""ACNT_PRDT_CD"": ""01"",...)","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
day_dv (str): [필수] 주야간구분 (ex. day:주간, night:야간)
ord_prcs_dvsn_cd (str): [필수] 주문처리구분코드 (ex. 02)
cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드
rvse_cncl_dvsn_cd (str): [필수] 정정취소구분코드 (ex. 01:정정, 02:취소)
orgn_odno (str): [필수] 원주문번호
ord_qty (str): [필수] 주문수량 (ex. 0:전량, 그 외는 수량)
unit_price (str): [필수] 주문가격1 (ex 0:시장가/최유리, 그 외 가격)
nmpr_type_cd (str): [필수] 호가유형코드 (ex. 01:지정가, 02:시장가, 03:조건부, 04:최유리)
krx_nmpr_cndt_cd (str): [필수] 한국거래소호가조건코드 (ex. 0:취소/없음, 3:IOC, 4:FOK)
rmn_qty_yn (str): [필수] 잔여수량여부 (ex. Y:전량, N:일부)
ord_dvsn_cd (str): [필수] 주문구분코드
fuop_item_dvsn_cd (str): 선물옵션종목구분코드",pd.DataFrame: 선물옵션 정정취소주문 결과 데이터,"     df = order_rvsecncl(
         env_dv=""real"", day_dv=""day"", ord_prcs_dvsn_cd=""02"",
         cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, rvse_cncl_dvsn_cd=""02"",
         orgn_odno=""0000004018"", ord_qty=""0"", unit_price=""0"",
         nmpr_type_cd=""02"", krx_nmpr_cndt_cd=""0"", rmn_qty_yn=""Y"",
         ord_dvsn_cd=""01""
     )
     print(df)","{
    'ACNT_NAME': '계좌명',
    'TRAD_DVSN_NAME': '매매구분명',
    'ITEM_NAME': '종목명',
    'ORD_TMD': '주문시각',
    'ORD_GNO_BRNO': '주문채번지점번호',
    'ORGN_ODNO': '원주문번호',
    'ODNO': '주문번호'
}","[""방금 넣은 선물 주문 취소해줘."", ""주문 가격을 정정하고 싶어."", ""원주문번호 0000004018 전부 취소해줘."", ""매수 주문 수량을 1계약에서 2계약으로 늘려줘."", ""주문 정정하고 새로 받은 주문번호 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/order_rvsecncl/order_rvsecncl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/order_rvsecncl/chk_order_rvsecncl.py
domestic_futureoption,주문/계좌,선물옵션 잔고평가손익내역,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-balance-valuation-pl,v1_국내선물-015,inquire_balance_valuation_pl,"시장별 투자자매매동향(일별) API입니다. 한국투자 HTS(eFriend Plus) > [0404] 시장별 일별동향 화면의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","cano (str): [필수] 종합계좌번호 (ex. 계좌번호 체계(8-2)의 앞 8자리)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 계좌번호 체계(8-2)의 뒤 2자리)
mgna_dvsn (str): [필수] 증거금구분 (ex. 01:개시, 02:유지)
excc_stat_cd (str): [필수] 정산상태코드 (ex. 1:정산, 2:본정산)
FK200 (str): 연속조회검색조건200 (ex. 연속조회검색조건200)
NK200 (str): 연속조회키200 (ex. 연속조회키200)
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터프레임, output2 데이터프레임)","     df1, df2 = inquire_balance_valuation_pl(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, mgna_dvsn=""01"", excc_stat_cd=""1"")
     print(df1)
     print(df2)","{
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'shtn_pdno': '단축상품번호',
    'prdt_name': '상품명',
    'sll_buy_dvsn_name': '매도매수구분명',
    'cblc_qty1': '잔고수량1',
    'excc_unpr': '정산단가',
    'ccld_avg_unpr1': '체결평균단가1',
    'idx_clpr': '지수종가',
    'pchs_amt': '매입금액',
    'evlu_amt': '평가금액',
    'evlu_pfls_amt': '평가손익금액',
    'trad_pfls_amt': '매매손익금액',
    'lqd_psbl_qty': '청산가능수량',
    'dnca_cash': '예수금현금',
    'frcr_dncl_amt': '외화예수금액',
    'dnca_sbst': '예수금대용',
    'tot_dncl_amt': '총예수금액',
    'tot_ccld_amt': '총체결금액',
    'cash_mgna': '현금증거금',
    'sbst_mgna': '대용증거금',
    'mgna_tota': '증거금총액',
    'opt_dfpa': '옵션차금',
    'thdt_dfpa': '당일차금',
    'rnwl_dfpa': '갱신차금',
    'fee': '수수료',
    'nxdy_dnca': '익일예수금',
    'nxdy_dncl_amt': '익일예수금액',
    'prsm_dpast': '추정예탁자산',
    'prsm_dpast_amt': '추정예탁자산금액',
    'pprt_ord_psbl_cash': '적정주문가능현금',
    'add_mgna_cash': '추가증거금현금',
    'add_mgna_tota': '추가증거금총액',
    'futr_trad_pfls_amt': '선물매매손익금액',
    'opt_trad_pfls_amt': '옵션매매손익금액',
    'futr_evlu_pfls_amt': '선물평가손익금액',
    'opt_evlu_pfls_amt': '옵션평가손익금액',
    'trad_pfls_amt_smtl': '매매손익금액합계',
    'evlu_pfls_amt_smtl': '평가손익금액합계',
    'wdrw_psbl_tot_amt': '인출가능총금액',
    'ord_psbl_cash': '주문가능현금',
    'ord_psbl_sbst': '주문가능대용',
    'ord_psbl_tota': '주문가능총액'
}","[""내 선물옵션 계좌의 평가손익 상세 내역 보여줘."", ""내 계좌 종목별로 평가손익이랑 매매손익을 나눠서 알려줘."", ""내 계좌의 총 평가손익이랑 인출가능금액 확인해줘."", ""현재 내 계좌의 선물평가손익금액이랑 옵션평가손익금액 각각 알려줘."", ""내 계좌 잔고의 주문가능대용금 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_balance_valuation_pl/inquire_balance_valuation_pl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_balance_valuation_pl/chk_inquire_balance_valuation_pl.py
domestic_futureoption,주문/계좌,선물옵션 총자산현황,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-deposit,v1_국내선물-014,inquire_deposit,선물옵션 총자산현황 API 입니다.,"cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 03)",pd.DataFrame: 선물옵션 총자산현황 데이터,"     df = inquire_deposit(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod)
     print(df)","{
    'dnca_tota': '예수금총액',
    'bfdy_chck_amt': '전일수표금액',
    'thdt_chck_amt': '당일수표금액',
    'rlth_uwdl_dpos_amt': '실물인수도예치금액',
    'brkg_mgna_cash': '위탁증거금현금',
    'wdrw_psbl_tot_amt': '인출가능총금액',
    'ord_psbl_cash': '주문가능현금',
    'ord_psbl_tota': '주문가능총액',
    'dnca_sbst': '예수금대용',
    'scts_sbst_amt': '유가증권대용금액',
    'frcr_evlu_amt': '외화평가금액',
    'brkg_mgna_sbst': '위탁증거금대용',
    'sbst_rlse_psbl_amt': '대용해제가능금액',
    'mtnc_rt': '유지비율',
    'add_mgna_tota': '추가증거금총액',
    'add_mgna_cash': '추가증거금현금',
    'rcva': '미수금',
    'futr_trad_pfls': '선물매매손익',
    'opt_trad_pfls_amt': '옵션매매손익금액',
    'trad_pfls_smtl': '매매손익합계',
    'futr_evlu_pfls_amt': '선물평가손익금액',
    'opt_evlu_pfls_amt': '옵션평가손익금액',
    'evlu_pfls_smtl': '평가손익합계',
    'excc_dfpa': '정산차금',
    'opt_dfpa': '옵션차금',
    'brkg_fee': '위탁수수료',
    'nxdy_dnca': '익일예수금',
    'prsm_dpast_amt': '추정예탁자산금액',
    'cash_mntn_amt': '현금유지금액',
    'hack_acdt_acnt_move_amt': '해킹사고계좌이전금액'
}","[""내 선물옵션 계좌 총 자산 현황 알려줘."", ""내 계좌에 있는 예수금이랑 위탁증거금 총액이 얼마야?"", ""내 계좌의 총 자산 내역 보여줘."", ""지금 당장 인출 가능한 금액이 얼마야?"", ""내 계좌의 추정예탁자산금액은 얼마로 잡혀있어?""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_deposit/inquire_deposit.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_deposit/chk_inquire_deposit.py
domestic_futureoption,주문/계좌,선물옵션 잔고정산손익내역,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-balance-settlement-pl,v1_국내선물-013,inquire_balance_settlement_pl,선물옵션 잔고정산손익내역 API입니다.,"cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 03)
inqr_dt (str): [필수] 조회일자
FK200 (str): 연속조회검색조건200
NK200 (str): 연속조회키200
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터, output2 데이터)","     df1, df2 = inquire_balance_settlement_pl(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, inqr_dt=""20230906"")
     print(df1)
     print(df2)","{
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'trad_dvsn_name': '매매구분명',
    'bfdy_cblc_qty': '전일잔고수량',
    'new_qty': '신규수량',
    'mnpl_rpch_qty': '전매환매수량',
    'cblc_qty': '잔고수량',
    'cblc_amt': '잔고금액',
    'trad_pfls_amt': '매매손익금액',
    'evlu_amt': '평가금액',
    'evlu_pfls_amt': '평가손익금액',
    'nxdy_dnca': '익일예수금',
    'mmga_cash': '유지증거금현금',
    'brkg_mgna_cash': '위탁증거금현금',
    'opt_buy_chgs': '옵션매수대금',
    'opt_lqd_evlu_amt': '옵션청산평가금액',
    'dnca_sbst': '예수금대용',
    'mmga_tota': '유지증거금총액',
    'brkg_mgna_tota': '위탁증거금총액',
    'opt_sll_chgs': '옵션매도대금',
    'fee': '수수료',
    'thdt_dfpa': '당일차금',
    'rnwl_dfpa': '갱신차금',
    'dnca_cash': '예수금현금'
}","[""오늘 날짜로 내 선물옵션 계좌 정산 손익 내역 알려줘."", ""어제 기준 내 계좌의 잔고 평가손익이 어떻게 돼?"", ""내 계좌 9월 6일자 정산 내역 보여줘."", ""어제 하루 동안 매매손익금액이 얼마야?"", ""잔고 정산 내역에서 당일차금이랑 갱신차금 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_balance_settlement_pl/inquire_balance_settlement_pl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_balance_settlement_pl/chk_inquire_balance_settlement_pl.py
domestic_futureoption,주문/계좌,(야간)선물옵션 주문가능 조회,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-psbl-ngt-order,국내선물-011,inquire_psbl_ngt_order,(야간)선물옵션 주문가능 조회 API입니다.,"cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드
pdno (str): [필수] 상품번호
prdt_type_cd (str): [필수] 상품유형코드 (ex. 301:선물옵션)
sll_buy_dvsn_cd (str): [필수] 매도매수구분코드 (ex. 01:매도, 02:매수)
unit_price (str): [필수] 주문가격1
ord_dvsn_cd (str): [필수] 주문구분코드 (ex. 01:지정가, 02:시장가, 03:조건부, 04:최유리, 10:지정가(IOC), 11:지정가(FOK), 12:시장가(IOC), 13:시장가(FOK), 14:최유리(IOC), 15:최유리(FOK))",pd.DataFrame: (야간)선물옵션 주문가능 데이터,"     df = inquire_psbl_ngt_order(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, pdno=""101W09"", prdt_type_cd=""301"", sll_buy_dvsn_cd=""02"", unit_price=""322"", ord_dvsn_cd=""01"")
     print(df)","{
    'max_ord_psbl_qty': '최대주문가능수량',
    'tot_psbl_qty': '최대주문가능수량',
    'lqd_psbl_qty': '청산가능수량',
    'lqd_psbl_qty_1': '청산가능수량',
    'ord_psbl_qty': '주문가능수량',
    'bass_idx': '기준지수'
}","[""야간에 선물 주문 가능한 수량 알려줘."", ""야간 옵션 매도하려면 최대 몇 계약까지 가능해?"", ""코스피200 선물 9월물, 야간에 지정가로 몇 개까지 살 수 있는지 최대주문가능수량 알려줘."", ""지금 가진 돈으로 야간에 이 선물을 최대로 살 수 있는 수량이 몇 개야?"", ""야간 주문 가능 수량 조회할 때 청산가능수량도 알려줘?""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_psbl_ngt_order/inquire_psbl_ngt_order.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_psbl_ngt_order/chk_inquire_psbl_ngt_order.py
domestic_futureoption,주문/계좌,선물옵션기간약정수수료일별,REST,GET,/uapi/domestic-futureoption/v1/trading/inquire-daily-amount-fee,v1_국내선물-017,inquire_daily_amount_fee,선물옵션기간약정수수료일별 API입니다.,"cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 03)
inqr_strt_day (str): [필수] 조회시작일 (ex. 20240401)
inqr_end_day (str): [필수] 조회종료일 (ex. 20240625)
FK200 (str): 연속조회검색조건200
NK200 (str): 연속조회키200
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: 선물옵션기간약정수수료일별 데이터 (output1, output2)","     df1, df2 = inquire_daily_amount_fee(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, inqr_strt_day=""20240401"", inqr_end_day=""20240625"")
     print(df1)
     print(df2)","{
    'ord_dt': '주문일자',
    'pdno': '상품번호',
    'item_name': '종목명',
    'sll_agrm_amt': '매도약정금액',
    'sll_fee': '매도수수료',
    'buy_agrm_amt': '매수약정금액',
    'buy_fee': '매수수수료',
    'tot_fee_smtl': '총수수료합계',
    'trad_pfls': '매매손익',
    'futr_agrm': '선물약정',
    'futr_agrm_amt': '선물약정금액',
    'futr_agrm_amt_smtl': '선물약정금액합계',
    'futr_sll_fee_smtl': '선물매도수수료합계',
    'futr_buy_fee_smtl': '선물매수수수료합계',
    'futr_fee_smtl': '선물수수료합계',
    'opt_agrm': '옵션약정',
    'opt_agrm_amt': '옵션약정금액',
    'opt_agrm_amt_smtl': '옵션약정금액합계',
    'opt_sll_fee_smtl': '옵션매도수수료합계',
    'opt_buy_fee_smtl': '옵션매수수수료합계',
    'opt_fee_smtl': '옵션수수료합계',
    'prdt_futr_agrm': '상품선물약정',
    'prdt_fuop': '상품선물옵션',
    'prdt_futr_evlu_amt': '상품선물평가금액',
    'futr_fee': '선물수수료',
    'opt_fee': '옵션수수료',
    'fee': '수수료',
    'sll_agrm_amt': '매도약정금액',
    'buy_agrm_amt': '매수약정금액',
    'agrm_amt_smtl': '약정금액합계',
    'sll_fee': '매도수수료',
    'buy_fee': '매수수수료',
    'fee_smtl': '수수료합계',
    'trad_pfls_smtl': '매매손익합계'
}","[""이번 달 내 선물옵션 거래 수수료 총액 알려줘."", ""이번 달 동안의 내 매매 손익이랑 수수료 내역 보여줘."", ""내 계좌 4월 1일부터 6월 25일까지의 약정수수료 내역 조회해줘."", ""지난달 선물 거래로 얼마 벌었고 총수수료합계는 얼마 냈어?"", ""기간 약정수수료 내역에서 선물수수료랑 옵션수수료 따로 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_daily_amount_fee/inquire_daily_amount_fee.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/inquire_daily_amount_fee/chk_inquire_daily_amount_fee.py
domestic_futureoption,주문/계좌,(야간)선물옵션 증거금 상세,REST,GET,/uapi/domestic-futureoption/v1/trading/ngt-margin-detail,국내선물-024,ngt_margin_detail,"(야간)선물옵션 증거금상세 API입니다. 한국투자 HTS(eFriend Force) > [2537] 야간선물옵션 증거금상세 화면 의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 03)
mgna_dvsn_cd (str): [필수] 증거금 구분코드 (ex. 01:위탁, 02:유지)","Tuple[pd.DataFrame, pd.DataFrame, pd.DataFrame]: (output1, output2, output3) 데이터프레임","     df1, df2, df3 = ngt_margin_detail(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, mgna_dvsn_cd=""01"")
     print(df1)","{
    'futr_new_mgn_amt': '선물신규증거금액',
    'futr_sprd_ord_mgna': '선물스프레드주문증거금',
    'opt_sll_new_mgn_amt': '옵션매도신규증거금액',
    'opt_buy_new_mgn_amt': '옵션매수신규증거금액',
    'new_mgn_amt': '신규증거금액',
    'opt_pric_mgna': '옵션가격증거금',
    'fuop_pric_altr_mgna': '선물옵션가격변동증거금',
    'futr_sprd_mgna': '선물스프레드증거금',
    'uwdl_mgna': '인수도증거금',
    'ctrt_per_min_mgna': '계약당최소증거금',
    'tot_risk_mgna': '총위험증거금',
    'netrisk_brkg_mgna': '순위험위탁증거금',
    'opt_sll_chgs': '옵션매도대금',
    'opt_buy_chgs': '옵션매수대금',
    'futr_loss_amt': '선물손실금액',
    'futr_prft_amt': '선물이익금액',
    'thdt_ccld_net_loss_amt': '당일체결순손실금액',
    'brkg_mgna': '위탁증거금',
    'futr_new_mgn_amt': '선물신규증거금액',
    'futr_sprd_ord_mgna': '선물스프레드주문증거금',
    'opt_sll_new_mgn_amt': '옵션매도신규증거금액',
    'opt_buy_new_mgn_amt': '옵션매수신규증거금액',
    'new_mgn_amt': '신규증거금액',
    'opt_pric_mgna': '옵션가격증거금',
    'fuop_pric_altr_mgna': '선물옵션가격변동증거금',
    'futr_sprd_mgna': '선물스프레드증거금',
    'uwdl_mgna': '인수도증거금',
    'ctrt_per_min_mgna': '계약당최소증거금',
    'tot_risk_mgna': '총위험증거금',
    'netrisk_brkg_mgna': '순위험위탁증거금',
    'opt_sll_chgs': '옵션매도대금',
    'opt_buy_chgs': '옵션매수대금',
    'futr_loss_amt': '선물손실금액',
    'futr_prft_amt': '선물이익금액',
    'thdt_ccld_net_loss_amt': '당일체결순손실금액',
    'brkg_mgna': '위탁증거금',
    'dnca_cash': '예수금현금',
    'dnca_sbst': '예수금대용',
    'dnca_tota': '예수금총액',
    'wdrw_psbl_cash_amt': '인출가능현금금액',
    'wdrw_psbl_sbsa': '인출가능대용금액',
    'wdrw_psbl_tot_amt': '인출가능총금액',
    'ord_psbl_cash_amt': '주문가능현금금액',
    'ord_psbl_sbsa': '주문가능대용금액',
    'ord_psbl_tot_amt': '주문가능총금액',
    'brkg_mgna_cash_amt': '위탁증거금현금금액',
    'brkg_mgna_sbst': '위탁증거금대용',
    'brkg_mgna_tot_amt': '위탁증거금총금액',
    'add_mgna_cash_amt': '추가증거금현금금액',
    'add_mgna_sbsa': '추가증거금대용금액',
    'add_mgna_tot_amt': '추가증거금총금액',
    'bfdy_sbst_sll_sbst_amt': '전일대용매도대용금액',
    'thdt_sbst_sll_sbst_amt': '당일대용매도대용금액',
    'bfdy_sbst_sll_ccld_amt': '전일대용매도체결금액',
    'thdt_sbst_sll_ccld_amt': '당일대용매도체결금액',
    'opt_dfpa': '옵션차금',
    'excc_dfpa': '정산차금',
    'fee_amt': '수수료금액',
    'nxdy_dncl_amt': '익일예수금액',
    'prsm_dpast_amt': '추정예탁자산금액',
    'opt_buy_exus_acnt_yn': '옵션매수전용계좌여부',
    'base_dpsa_gdat_grad_cd': '기본예탁금차등등급코드',
    'opt_base_dpsa_gdat_grad_cd': '옵션기본예탁금차등등급코드'
}","[""내 야간 선물옵션 증거금 상세 내역 보여줘."", ""내 계좌의 현재 위탁증거금이랑 유지증거금이 얼마야?"", ""내 계좌 증거금 상세 현황 좀 알려줘."", ""추가증거금이 발생했는지 추가증거금총금액 확인해줘."", ""내 계좌의 주문가능현금금액은 얼마야?""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/ngt_margin_detail/ngt_margin_detail.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_futureoption/ngt_margin_detail/chk_ngt_margin_detail.py
elw,ELW시세,ELW 거래량순위,REST,GET,/uapi/elw/v1/ranking/volume-rank,국내주식-168,volume_rank,[국내주식] ELW시세 ELW 거래량순위[국내주식-168] ELW 거래량순위 API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): 조건시장분류코드 (예: 'W')
fid_cond_scr_div_code (str): 조건화면분류코드 (예: '20278')
fid_unas_input_iscd (str): 기초자산입력종목코드 (예: '000000')
fid_input_iscd (str): 발행사 (예: '00000')
fid_input_rmnn_dynu_1 (str): 입력잔존일수
fid_div_cls_code (str): 콜풋구분코드 (예: '0')
fid_input_price_1 (str): 가격(이상)
fid_input_price_2 (str): 가격(이하)
fid_input_vol_1 (str): 거래량(이상)
fid_input_vol_2 (str): 거래량(이하)
fid_input_date_1 (str): 조회기준일
fid_rank_sort_cls_code (str): 순위정렬구분코드 (예: '0')
fid_blng_cls_code (str): 소속구분코드 (예: '0')
fid_input_iscd_2 (str): LP발행사 (예: '0000')
fid_input_date_2 (str): 만기일-최종거래일조회
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: ELW 거래량순위 데이터,"     df = volume_rank(
         fid_cond_mrkt_div_code='W',
         fid_cond_scr_div_code='20278',
         fid_unas_input_iscd='000000',
         fid_input_iscd='00000',
         fid_input_rmnn_dynu_1='',
         fid_div_cls_code='0',
         fid_input_price_1='1000',
         fid_input_price_2='5000',
         fid_input_vol_1='100',
         fid_input_vol_2='1000',
         fid_input_date_1='20230101',
         fid_rank_sort_cls_code='0',
         fid_blng_cls_code='0',
         fid_input_iscd_2='0000',
         fid_input_date_2=''
     )
     print(df)","{
    'elw_kor_isnm': 'ELW한글종목명',
    'elw_shrn_iscd': 'ELW단축종목코드',
    'elw_prpr': 'ELW현재가',
    'prdy_vrss': '전일대비',
    'prdy_vrss_sign': '전일대비부호',
    'prdy_ctrt': '전일대비율',
    'lstn_stcn': '상장주수',
    'acml_vol': '누적거래량',
    'n_prdy_vol': 'N전일거래량',
    'n_prdy_vol_vrss': 'N전일거래량대비',
    'vol_inrt': '거래량증가율',
    'vol_tnrt': '거래량회전율',
    'nday_vol_tnrt': 'N일거래량회전율',
    'acml_tr_pbmn': '누적거래대금',
    'n_prdy_tr_pbmn': 'N전일거래대금',
    'n_prdy_tr_pbmn_vrss': 'N전일거래대금대비',
    'total_askp_rsqn': '총매도호가잔량',
    'total_bidp_rsqn': '총매수호가잔량',
    'ntsl_rsqn': '순매도잔량',
    'ntby_rsqn': '순매수잔량',
    'seln_rsqn_rate': '매도잔량비율',
    'shnu_rsqn_rate': '매수2잔량비율',
    'stck_cnvr_rate': '주식전환비율',
    'hts_rmnn_dynu': 'HTS잔존일수',
    'invl_val': '내재가치값',
    'tmvl_val': '시간가치값',
    'acpr': '행사가',
    'unas_isnm': '기초자산명',
    'stck_last_tr_date': '최종거래일',
    'unas_shrn_iscd': '기초자산코드',
    'prdy_vol': '전일거래량',
    'lp_hldn_rate': 'LP보유비율',
    'prit': '패리티',
    'prls_qryr_stpr_prc': '손익분기주가가격',
    'delta_val': '델타값',
    'theta': '세타',
    'prls_qryr_rate': '손익분기비율',
    'stck_lstn_date': '주식상장일자',
    'hts_ints_vltl': 'HTS내재변동성',
    'lvrg_val': '레버리지값',
    'lp_ntby_qty': 'LP순매도량'
}","[""ELW 거래량 순위 상위 10개 보여줘."", ""오늘 가장 많이 거래된 ELW가 뭐야?"", ""1000원에서 5000원 사이 ELW 중에 거래량 많은 순서대로 알려줘."", ""최근 거래량이 급증한 ELW를 찾고 싶어."", ""ELW 거래량 순위 조회할 때 HTS잔존일수도 같이 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/elw/volume_rank/volume_rank.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/elw/volume_rank/chk_volume_rank.py
domestic_stock,ELW시세,ELW 현재가 시세,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-elw-price,v1_국내주식-014,inquire_elw_price,[국내주식] ELW시세 ELW 현재가 시세[v1_국내주식-014] ELW 현재가 시세 API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): FID 조건 시장 분류 코드 (예: 'W')
fid_input_iscd (str): FID 입력 종목코드 (예: '000660')
env_dv (str): [추가] 실전모의구분 (real:실전, demo:모의, 기본값: 'real')
tr_cont (str): 연속 거래 여부 (기본값: '')
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임 (기본값: None)
depth (int): 현재 재귀 깊이 (기본값: 0)
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: ELW 현재가 시세 데이터,"     df = inquire_elw_price('W', '000660', env_dv='real')  # 실전투자
     df = inquire_elw_price('W', '000660', env_dv='demo')  # 모의투자
     print(df)","{
    'elw_shrn_iscd': 'ELW 단축 종목코드',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'elw_prpr': 'ELW 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'prdy_vrss_vol_rate': '전일 대비 거래량 비율',
    'unas_shrn_iscd': '기초자산 단축 종목코드',
    'unas_isnm': '기초자산 종목명',
    'unas_prpr': '기초자산 현재가',
    'unas_prdy_vrss': '기초자산 전일 대비',
    'unas_prdy_vrss_sign': '기초자산 전일 대비 부호',
    'unas_prdy_ctrt': '기초자산 전일 대비율',
    'bidp': '매수호가',
    'askp': '매도호가',
    'acml_tr_pbmn': '누적 거래 대금',
    'vol_tnrt': '거래량 회전율',
    'elw_oprc': 'ELW 시가2',
    'elw_hgpr': 'ELW 최고가',
    'elw_lwpr': 'ELW 최저가',
    'stck_prdy_clpr': '주식 전일 종가',
    'hts_thpr': 'HTS 이론가',
    'dprt': '괴리율',
    'atm_cls_name': 'ATM구분명',
    'hts_ints_vltl': 'HTS 내재 변동성',
    'acpr': '행사가',
    'pvt_scnd_dmrs_prc': '피벗 2차 디저항 가격',
    'pvt_frst_dmrs_prc': '피벗 1차 디저항 가격',
    'pvt_pont_val': '피벗 포인트 값',
    'pvt_frst_dmsp_prc': '피벗 1차 디지지 가격',
    'pvt_scnd_dmsp_prc': '피벗 2차 디지지 가격',
    'dmsp_val': '디지지 값',
    'dmrs_val': '디저항 값',
    'elw_sdpr': 'ELW 기준가',
    'apprch_rate': '접근도',
    'tick_conv_prc': '틱환산가',
    'invt_epmd_cntt': '투자 유의 내용'
}","[""SK하이닉스 기초자산 ELW 현재가 알려줘."", ""특정 ELW 종목의 시세가 궁금해."", ""삼성전자 콜 ELW의 현재가, 시가, 고가, 저가 정보 줘."", ""이 ELW의 기초자산 현재가는 얼마야?"", ""ELW 시세 조회할 때 HTS 이론가랑 괴리율도 같이 확인해줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_elw_price/inquire_elw_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_elw_price/chk_inquire_elw_price.py
domestic_stock,기본시세,주식현재가 시세,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-price,v1_국내주식-008,inquire_price,주식 현재가 시세 API입니다. 실시간 시세를 원하신다면 웹소켓 API를 활용하세요. ※ 종목코드 마스터파일 파이썬 정제코드는 한국투자증권 Github 참고 부탁드립니다. https://github.com/koreainvestment/open-trading-api/tree/main/stocks_info,"env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX, NX:NXT, UN:통합)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 종목코드 (ex 005930 삼성전자), ETN은 종목코드 6자리 앞에 Q 입력 필수)",pd.DataFrame: 주식 현재가 시세 데이터,"     df = inquire_price(""real"", ""J"", ""005930"")
     print(df)","{
    'iscd_stat_cls_code': '종목 상태 구분 코드',
    'marg_rate': '증거금 비율',
    'rprs_mrkt_kor_name': '대표 시장 한글 명',
    'new_hgpr_lwpr_cls_code': '신 고가 저가 구분 코드',
    'bstp_kor_isnm': '업종 한글 종목명',
    'temp_stop_yn': '임시 정지 여부',
    'oprc_rang_cont_yn': '시가 범위 연장 여부',
    'clpr_rang_cont_yn': '종가 범위 연장 여부',
    'crdt_able_yn': '신용 가능 여부',
    'grmn_rate_cls_code': '보증금 비율 구분 코드',
    'elw_pblc_yn': 'ELW 발행 여부',
    'stck_prpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_tr_pbmn': '누적 거래 대금',
    'acml_vol': '누적 거래량',
    'prdy_vrss_vol_rate': '전일 대비 거래량 비율',
    'stck_oprc': '주식 시가2',
    'stck_hgpr': '주식 최고가',
    'stck_lwpr': '주식 최저가',
    'stck_mxpr': '주식 상한가',
    'stck_llam': '주식 하한가',
    'stck_sdpr': '주식 기준가',
    'wghn_avrg_stck_prc': '가중 평균 주식 가격',
    'hts_frgn_ehrt': 'HTS 외국인 소진율',
    'frgn_ntby_qty': '외국인 순매수 수량',
    'pgtr_ntby_qty': '프로그램매매 순매수 수량',
    'pvt_scnd_dmrs_prc': '피벗 2차 디저항 가격',
    'pvt_frst_dmrs_prc': '피벗 1차 디저항 가격',
    'pvt_pont_val': '피벗 포인트 값',
    'pvt_frst_dmsp_prc': '피벗 1차 디지지 가격',
    'pvt_scnd_dmsp_prc': '피벗 2차 디지지 가격',
    'dmrs_val': '디저항 값',
    'dmsp_val': '디지지 값',
    'cpfn': '자본금',
    'rstc_wdth_prc': '제한 폭 가격',
    'stck_fcam': '주식 액면가',
    'stck_sspr': '주식 대용가',
    'aspr_unit': '호가단위',
    'hts_deal_qty_unit_val': 'HTS 매매 수량 단위 값',
    'lstn_stcn': '상장 주수',
    'hts_avls': 'HTS 시가총액',
    'per': 'PER',
    'pbr': 'PBR',
    'stac_month': '결산 월',
    'vol_tnrt': '거래량 회전율',
    'eps': 'EPS',
    'bps': 'BPS',
    'd250_hgpr': '250일 최고가',
    'd250_hgpr_date': '250일 최고가 일자',
    'd250_hgpr_vrss_prpr_rate': '250일 최고가 대비 현재가 비율',
    'd250_lwpr': '250일 최저가',
    'd250_lwpr_date': '250일 최저가 일자',
    'd250_lwpr_vrss_prpr_rate': '250일 최저가 대비 현재가 비율',
    'stck_dryy_hgpr': '주식 연중 최고가',
    'dryy_hgpr_vrss_prpr_rate': '연중 최고가 대비 현재가 비율',
    'dryy_hgpr_date': '연중 최고가 일자',
    'stck_dryy_lwpr': '주식 연중 최저가',
    'dryy_lwpr_vrss_prpr_rate': '연중 최저가 대비 현재가 비율',
    'dryy_lwpr_date': '연중 최저가 일자',
    'w52_hgpr': '52주일 최고가',
    'w52_hgpr_vrss_prpr_ctrt': '52주일 최고가 대비 현재가 대비',
    'w52_hgpr_date': '52주일 최고가 일자',
    'w52_lwpr': '52주일 최저가',
    'w52_lwpr_vrss_prpr_ctrt': '52주일 최저가 대비 현재가 대비',
    'w52_lwpr_date': '52주일 최저가 일자',
    'whol_loan_rmnd_rate': '전체 융자 잔고 비율',
    'ssts_yn': '공매도가능여부',
    'stck_shrn_iscd': '주식 단축 종목코드',
    'fcam_cnnm': '액면가 통화명',
    'cpfn_cnnm': '자본금 통화명',
    'apprch_rate': '접근도',
    'frgn_hldn_qty': '외국인 보유 수량',
    'vi_cls_code': 'VI적용구분코드',
    'ovtm_vi_cls_code': '시간외단일가VI적용구분코드',
    'last_ssts_cntg_qty': '최종 공매도 체결 수량',
    'invt_caful_yn': '투자유의여부',
    'mrkt_warn_cls_code': '시장경고코드',
    'short_over_yn': '단기과열여부',
    'sltr_yn': '정리매매여부',
    'mang_issu_cls_code': '관리종목여부'
}","[""삼성전자 현재가 얼마야?"", ""SK하이닉스 오늘 주가 시세 좀 알려줘."", ""코스닥 상장사인 에코프로비엠 주가 정보 보여줘."", ""삼성전자 52주 최고가랑 최저가 알려줘."", ""삼성전자 HTS 시가총액 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_price/inquire_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_price/chk_inquire_price.py
domestic_stock,기본시세,주식현재가 호가/예상체결,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-asking-price-exp-ccn,v1_국내주식-011,inquire_asking_price_exp_ccn,주식현재가 호가 예상체결 API입니다. 매수 매도 호가를 확인하실 수 있습니다. 실시간 데이터를 원하신다면 웹소켓 API를 활용하세요.,"env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX, NX:NXT, UN:통합)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 123456)","Tuple[pd.DataFrame, pd.DataFrame]: (호가정보, 예상체결정보) 데이터","     result1, result2 = inquire_asking_price_exp_ccn(env_dv=""real"", fid_cond_mrkt_div_code=""J"", fid_input_iscd=""005930"")
     print(result1)  # 호가정보
     print(result2)  # 예상체결정보","{
    'aspr_acpt_hour': '호가 접수 시간',
    'askp1': '매도호가1',
    'askp2': '매도호가2',
    'askp3': '매도호가3',
    'askp4': '매도호가4',
    'askp5': '매도호가5',
    'askp6': '매도호가6',
    'askp7': '매도호가7',
    'askp8': '매도호가8',
    'askp9': '매도호가9',
    'askp10': '매도호가10',
    'bidp1': '매수호가1',
    'bidp2': '매수호가2',
    'bidp3': '매수호가3',
    'bidp4': '매수호가4',
    'bidp5': '매수호가5',
    'bidp6': '매수호가6',
    'bidp7': '매수호가7',
    'bidp8': '매수호가8',
    'bidp9': '매수호가9',
    'bidp10': '매수호가10',
    'askp_rsqn1': '매도호가 잔량1',
    'askp_rsqn2': '매도호가 잔량2',
    'askp_rsqn3': '매도호가 잔량3',
    'askp_rsqn4': '매도호가 잔량4',
    'askp_rsqn5': '매도호가 잔량5',
    'askp_rsqn6': '매도호가 잔량6',
    'askp_rsqn7': '매도호가 잔량7',
    'askp_rsqn8': '매도호가 잔량8',
    'askp_rsqn9': '매도호가 잔량9',
    'askp_rsqn10': '매도호가 잔량10',
    'bidp_rsqn1': '매수호가 잔량1',
    'bidp_rsqn2': '매수호가 잔량2',
    'bidp_rsqn3': '매수호가 잔량3',
    'bidp_rsqn4': '매수호가 잔량4',
    'bidp_rsqn5': '매수호가 잔량5',
    'bidp_rsqn6': '매수호가 잔량6',
    'bidp_rsqn7': '매수호가 잔량7',
    'bidp_rsqn8': '매수호가 잔량8',
    'bidp_rsqn9': '매수호가 잔량9',
    'bidp_rsqn10': '매수호가 잔량10',
    'askp_rsqn_icdc1': '매도호가 잔량 증감1',
    'askp_rsqn_icdc2': '매도호가 잔량 증감2',
    'askp_rsqn_icdc3': '매도호가 잔량 증감3',
    'askp_rsqn_icdc4': '매도호가 잔량 증감4',
    'askp_rsqn_icdc5': '매도호가 잔량 증감5',
    'askp_rsqn_icdc6': '매도호가 잔량 증감6',
    'askp_rsqn_icdc7': '매도호가 잔량 증감7',
    'askp_rsqn_icdc8': '매도호가 잔량 증감8',
    'askp_rsqn_icdc9': '매도호가 잔량 증감9',
    'askp_rsqn_icdc10': '매도호가 잔량 증감10',
    'bidp_rsqn_icdc1': '매수호가 잔량 증감1',
    'bidp_rsqn_icdc2': '매수호가 잔량 증감2',
    'bidp_rsqn_icdc3': '매수호가 잔량 증감3',
    'bidp_rsqn_icdc4': '매수호가 잔량 증감4',
    'bidp_rsqn_icdc5': '매수호가 잔량 증감5',
    'bidp_rsqn_icdc6': '매수호가 잔량 증감6',
    'bidp_rsqn_icdc7': '매수호가 잔량 증감7',
    'bidp_rsqn_icdc8': '매수호가 잔량 증감8',
    'bidp_rsqn_icdc9': '매수호가 잔량 증감9',
    'bidp_rsqn_icdc10': '매수호가 잔량 증감10',
    'total_askp_rsqn': '총 매도호가 잔량',
    'total_bidp_rsqn': '총 매수호가 잔량',
    'total_askp_rsqn_icdc': '총 매도호가 잔량 증감',
    'total_bidp_rsqn_icdc': '총 매수호가 잔량 증감',
    'ovtm_total_askp_icdc': '시간외 총 매도호가 증감',
    'ovtm_total_bidp_icdc': '시간외 총 매수호가 증감',
    'ovtm_total_askp_rsqn': '시간외 총 매도호가 잔량',
    'ovtm_total_bidp_rsqn': '시간외 총 매수호가 잔량',
    'ntby_aspr_rsqn': '순매수 호가 잔량',
    'new_mkop_cls_code': '신 장운영 구분 코드',
    'antc_mkop_cls_code': '예상 장운영 구분 코드',
    'stck_prpr': '주식 현재가',
    'stck_oprc': '주식 시가2',
    'stck_hgpr': '주식 최고가',
    'stck_lwpr': '주식 최저가',
    'stck_sdpr': '주식 기준가',
    'antc_cnpr': '예상 체결가',
    'antc_cntg_vrss_sign': '예상 체결 대비 부호',
    'antc_cntg_vrss': '예상 체결 대비',
    'antc_cntg_prdy_ctrt': '예상 체결 전일 대비율',
    'antc_vol': '예상 거래량',
    'stck_shrn_iscd': '주식 단축 종목코드',
    'vi_cls_code': 'VI적용구분코드'
}","[""삼성전자 호가창 보여줘."", ""SK하이닉스 현재 매수/매도 잔량 알려줘."", ""삼성전자 총 매도호가 잔량과 총 매수호가 잔량 보여줘."", ""삼성전자 주식 지금 시장가로 팔면 얼마에 팔릴지 예상체결가 알려줘."", ""삼성전자 호가창의 호가 접수 시간 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_asking_price_exp_ccn/inquire_asking_price_exp_ccn.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_asking_price_exp_ccn/chk_inquire_asking_price_exp_ccn.py
domestic_stock,기본시세,주식당일분봉조회,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-time-itemchartprice,v1_국내주식-022,inquire_time_itemchartprice,"주식당일분봉조회 API입니다. 실전계좌/모의계좌의 경우, 한 번의 호출에 최대 30건까지 확인 가능합니다. ※ 당일 분봉 데이터만 제공됩니다. (전일자 분봉 미제공) ※ input > FID_INPUT_HOUR_1 에 미래일시 입력 시에 현재가로 조회됩니다. ex) 오전 10시에 113000 입력 시에 오전 10시~11시30분 사이의 데이터가 오전 10시 값으로 조회됨 ※ output2의 첫번째 배열의 체결량(cntg_vol)은 첫체결이 발생되기 전까지는 이전 분봉의 체결량이 해당 위치에 표시됩니다. 해당 분봉의 첫 체결이 발생되면 해당 이전분 체결량이 두번째 배열로 이동되면서 새로운 체결량으로 업데이트됩니다.","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX, NX:NXT, UN:통합)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 123456)
fid_input_hour_1 (str): [필수] 입력 시간1 (ex. 입력시간)
fid_pw_data_incu_yn (str): [필수] 과거 데이터 포함 여부
fid_etc_cls_code (str): [필수] 기타 구분 코드","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터, output2 데이터)","     output1, output2 = inquire_time_itemchartprice(env_dv=""real"", fid_cond_mrkt_div_code=""J"", fid_input_iscd=""005930"", fid_input_hour_1=""093000"", fid_pw_data_incu_yn=""Y"")
     print(output1)
     print(output2)","{
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'stck_prdy_clpr': '전일대비 종가',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래대금',
    'hts_kor_isnm': '한글 종목명',
    'stck_prpr': '주식 현재가',
    'stck_bsop_date': '주식 영업일자',
    'stck_cntg_hour': '주식 체결시간',
    'stck_prpr': '주식 현재가',
    'stck_oprc': '주식 시가',
    'stck_hgpr': '주식 최고가',
    'stck_lwpr': '주식 최저가',
    'cntg_vol': '체결 거래량',
    'acml_tr_pbmn': '누적 거래대금'
}","[""삼성전자 1분봉 데이터 좀 줘."", ""SK하이닉스 오늘 주가 흐름을 분봉으로 보고싶어."", ""오늘 오전 10시경 삼성전자 주가와 체결 거래량 알려줘."", ""SK하이닉스의 오늘 누적 거래대금 알려줘."", ""오늘 삼성전자 시가, 고가, 저가, 현재가 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_time_itemchartprice/inquire_time_itemchartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_time_itemchartprice/chk_inquire_time_itemchartprice.py
domestic_stock,기본시세,국내주식기간별시세(일/주/월/년),REST,GET,/uapi/domestic-stock/v1/quotations/inquire-daily-itemchartprice,v1_국내주식-016,inquire_daily_itemchartprice,"국내주식기간별시세(일/주/월/년) API입니다. 실전계좌/모의계좌의 경우, 한 번의 호출에 최대 100건까지 확인 가능합니다.","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX, NX:NXT, UN:통합)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 종목코드 (ex 005930 삼성전자))
fid_input_date_1 (str): [필수] 입력 날짜 1 (ex. 조회 시작일자)
fid_input_date_2 (str): [필수] 입력 날짜 2 (ex. 조회 종료일자 (최대 100개))
fid_period_div_code (str): [필수] 기간분류코드 (ex. D:일봉 W:주봉, M:월봉, Y:년봉)
fid_org_adj_prc (str): [필수] 수정주가 원주가 가격 여부 (ex. 0:수정주가 1:원주가)","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터, output2 데이터)","     df1, df2 = inquire_daily_itemchartprice(""real"", ""J"", ""005930"", ""20220101"", ""20220809"", ""D"", ""1"")
     print(df1)
     print(df2)","{
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'stck_prdy_clpr': '주식 전일 종가',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'stck_prpr': '주식 현재가',
    'stck_shrn_iscd': '주식 단축 종목코드',
    'prdy_vol': '전일 거래량',
    'stck_mxpr': '주식 상한가',
    'stck_llam': '주식 하한가',
    'stck_oprc': '주식 시가2',
    'stck_hgpr': '주식 최고가',
    'stck_lwpr': '주식 최저가',
    'stck_prdy_oprc': '주식 전일 시가',
    'stck_prdy_hgpr': '주식 전일 최고가',
    'stck_prdy_lwpr': '주식 전일 최저가',
    'askp': '매도호가',
    'bidp': '매수호가',
    'prdy_vrss_vol': '전일 대비 거래량',
    'vol_tnrt': '거래량 회전율',
    'stck_fcam': '주식 액면가',
    'lstn_stcn': '상장 주수',
    'cpfn': '자본금',
    'hts_avls': 'HTS 시가총액',
    'per': 'PER',
    'eps': 'EPS',
    'pbr': 'PBR',
    'itewhol_loan_rmnd_ratem': '전체 융자 잔고 비율',
    'stck_bsop_date': '주식 영업 일자',
    'stck_clpr': '주식 종가',
    'stck_oprc': '주식 시가2',
    'stck_hgpr': '주식 최고가',
    'stck_lwpr': '주식 최저가',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'flng_cls_code': '락 구분 코드',
    'prtt_rate': '분할 비율',
    'mod_yn': '변경 여부',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_vrss': '전일 대비',
    'revl_issu_reas': '재평가사유코드'
}","[""삼성전자 일봉 데이터 조회해줘."", ""SK하이닉스 주봉 차트 데이터 보여줘."", ""작년 한 해 동안 삼성전자 주가 추이와 누적 거래량 보여줘."", ""SK하이닉스 PER과 PBR 알려줘."", ""삼성전자 HTS 시가총액과 상장 주수 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_itemchartprice/inquire_daily_itemchartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_itemchartprice/chk_inquire_daily_itemchartprice.py
domestic_stock,기본시세,주식일별분봉조회,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-time-dailychartprice,국내주식-213,inquire_time_dailychartprice,"주식일별분봉조회 API입니다. 실전계좌의 경우, 한 번의 호출에 최대 120건까지 확인 가능하며, FID_INPUT_DATE_1, FID_INPUT_HOUR_1 이용하여 과거일자 분봉조회 가능합니다. ※ 과거 분봉 조회 시, 당사 서버에서 보관하고 있는 만큼의 데이터만 확인이 가능합니다. (최대 1년 분봉 보관)","fid_cond_mrkt_div_code (str): [필수] 시장 분류 코드 (ex. J:주식,NX:NXT,UN:통합)
fid_input_iscd (str): [필수] 종목코드 (ex. 123456)
fid_input_hour_1 (str): [필수] 입력 시간1 (ex. 130000)
fid_input_date_1 (str): [필수] 입력 날짜1 (ex. 20241023)
fid_pw_data_incu_yn (str): 과거 데이터 포함 여부 (기본값: ""N"")
fid_fake_tick_incu_yn (str): 허봉 포함 여부 (기본값: """")","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터, output2 데이터)","     output1, output2 = inquire_time_dailychartprice(""J"", ""005930"", ""130000"", ""20241023"")
     print(output1)
     print(output2)","{
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'stck_prdy_clpr': '주식 전일 종가',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'stck_prpr': '주식 현재가',
    'stck_bsop_date': '주식 영업 일자',
    'stck_cntg_hour': '주식 체결 시간',
    'stck_prpr': '주식 현재가',
    'stck_oprc': '주식 시가2',
    'stck_hgpr': '주식 최고가',
    'stck_lwpr': '주식 최저가',
    'cntg_vol': '체결 거래량',
    'acml_tr_pbmn': '누적 거래 대금'
}","[""삼성전자 30분봉 데이터 좀 줘."", ""SK하이닉스의 지난주 금요일 분봉 데이터 조회해줘."", ""오늘 오후 1시에 삼성전자 주가랑 체결 거래량 알려줘."", ""SK하이닉스의 오늘 누적 거래 대금 알려줘."", ""삼성전자의 오늘 시가, 고가, 저가, 현재가 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_time_dailychartprice/inquire_time_dailychartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_time_dailychartprice/chk_inquire_time_dailychartprice.py
domestic_stock,기본시세,주식현재가 체결,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-ccnl,v1_국내주식-009,inquire_ccnl,국내현재가 체결 API 입니다. 종목의 체결 정보를 확인할 수 있습니다.,"env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX, NX:NXT, UN:통합)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 123456)",pd.DataFrame: 주식현재가 체결 데이터,"     df = inquire_ccnl(""real"", ""J"", ""005930"")
     print(df)","{
    'stck_cntg_hour': '주식 체결 시간',
    'stck_prpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'cntg_vol': '체결 거래량',
    'tday_rltv': '당일 체결강도',
    'prdy_ctrt': '전일 대비율'
}","[""삼성전자 현재 체결가 알려줘."", ""SK하이닉스 실시간 체결 정보가 궁금해."", ""지금 삼성전자 체결강도와 전일 대비율 알려줘."", ""SK하이닉스의 현재가와 전일 대비 정보 보여줘."", ""삼성전자 주식 현재가와 체결 거래량 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_ccnl/inquire_ccnl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_ccnl/chk_inquire_ccnl.py
domestic_stock,기본시세,주식현재가 당일시간대별체결,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-time-itemconclusion,v1_국내주식-023,inquire_time_itemconclusion,주식현재가 당일시간대별체결 API입니다.,"env_dv (str): [필수] 실전모의구분 (real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (J:KRX, NX:NXT, UN:통합)
fid_input_iscd (str): [필수] 입력 종목코드
fid_input_hour_1 (str): [필수] 입력 시간1","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터, output2 데이터)","     df1, df2 = inquire_time_itemconclusion(""real"", ""U"", ""0001"", ""115959"")
     print(df1)
     print(df2)","{
    'stck_prpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'prdy_vol': '전일 거래량',
    'rprs_mrkt_kor_name': '대표 시장 한글 명',
    'stck_cntg_hour': '주식 체결 시간',
    'stck_pbpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'askp': '매도호가',
    'bidp': '매수호가',
    'tday_rltv': '당일 체결강도',
    'acml_vol': '누적 거래량',
    'cnqn': '체결량'
}","[""삼성전자 시간대별 체결 내역 보여줘."", ""SK하이닉스 오늘 오전 11시 59분까지의 체결 기록 좀 줘."", ""오늘 삼성전자 누적 거래량과 당일 체결강도 알려줘."", ""SK하이닉스 현재가와 매도호가, 매수호가 알려줘."", ""삼성전자 시간대별 체결량 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_time_itemconclusion/inquire_time_itemconclusion.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_time_itemconclusion/chk_inquire_time_itemconclusion.py
domestic_stock,기본시세,주식현재가 일자별,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-daily-price,v1_국내주식-010,inquire_daily_price,"주식현재가 일자별 API입니다. 일/주/월별 주가를 확인할 수 있으며 최근 30일(주,별)로 제한되어 있습니다.","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX, NX:NXT, UN:통합)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 종목코드 (ex 005930 삼성전자))
fid_period_div_code (str): [필수] 기간 분류 코드 (ex. D:(일)최근 30거래일, W:(주)최근 30주, M:(월)최근 30개월)
fid_org_adj_prc (str): [필수] 수정주가 원주가 가격 (ex. 0:수정주가미반영, 1:수정주가반영, *수정주가는 액면분할/액면병합 등 권리 발생 시 과거 시세를 현재 주가에 맞게 보정한 가격)",pd.DataFrame: 주식현재가 일자별 데이터,"     df = inquire_daily_price(""real"", ""J"", ""005930"", ""D"", ""1"")
     print(df)","{
    'stck_bsop_date': '주식 영업 일자',
    'stck_oprc': '주식 시가2',
    'stck_hgpr': '주식 최고가',
    'stck_lwpr': '주식 최저가',
    'stck_clpr': '주식 종가',
    'acml_vol': '누적 거래량',
    'prdy_vrss_vol_rate': '전일 대비 거래량 비율',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'hts_frgn_ehrt': 'HTS 외국인 소진율',
    'frgn_ntby_qty': '외국인 순매수 수량',
    'flng_cls_code': '락 구분 코드',
    'acml_prtt_rate': '누적 분할 비율'
}","[""삼성전자 최근 한달간 일별 주가 알려줘."", ""SK하이닉스 주가 주 단위로 보고싶어."", ""지난주 삼성전자 종가와 누적 거래량 알려줘."", ""SK하이닉스 최근 한 달간 외국인 순매수 수량 추이 보여줘."", ""삼성전자 일별 시가, 고가, 저가, 종가 데이터 줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_price/inquire_daily_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_price/chk_inquire_daily_price.py
etfetn,기본시세,ETF/ETN 현재가,REST,GET,/uapi/etfetn/v1/quotations/inquire-price,v1_국내주식-068,inquire_price,"ETF/ETN 현재가 API입니다. 한국투자 HTS(eFriend Plus) > [0240] ETF/ETN 현재가 화면의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX, NX:NXT, UN:통합)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 123456)",pd.DataFrame: ETF/ETN 현재가 데이터,"     df = inquire_price(""J"", ""123456"")
     print(df)","{
    'stck_prpr': '주식 현재가',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_vrss': '전일 대비',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'prdy_vol': '전일 거래량',
    'stck_mxpr': '주식 상한가',
    'stck_llam': '주식 하한가',
    'stck_prdy_clpr': '주식 전일 종가',
    'stck_oprc': '주식 시가2',
    'prdy_clpr_vrss_oprc_rate': '전일 종가 대비 시가2 비율',
    'stck_hgpr': '주식 최고가',
    'prdy_clpr_vrss_hgpr_rate': '전일 종가 대비 최고가 비율',
    'stck_lwpr': '주식 최저가',
    'prdy_clpr_vrss_lwpr_rate': '전일 종가 대비 최저가 비율',
    'prdy_last_nav': '전일 최종 NAV',
    'nav': 'NAV',
    'nav_prdy_vrss': 'NAV 전일 대비',
    'nav_prdy_vrss_sign': 'NAV 전일 대비 부호',
    'nav_prdy_ctrt': 'NAV 전일 대비율',
    'trc_errt': '추적 오차율',
    'stck_sdpr': '주식 기준가',
    'stck_sspr': '주식 대용가',
    'nmix_ctrt': '지수 대비율',
    'etf_crcl_stcn': 'ETF 유통 주수',
    'etf_ntas_ttam': 'ETF 순자산 총액',
    'etf_frcr_ntas_ttam': 'ETF 외화 순자산 총액',
    'frgn_limt_rate': '외국인 한도 비율',
    'frgn_oder_able_qty': '외국인 주문 가능 수량',
    'etf_cu_unit_scrt_cnt': 'ETF CU 단위 증권 수',
    'etf_cnfg_issu_cnt': 'ETF 구성 종목 수',
    'etf_dvdn_cycl': 'ETF 배당 주기',
    'crcd': '통화 코드',
    'etf_crcl_ntas_ttam': 'ETF 유통 순자산 총액',
    'etf_frcr_crcl_ntas_ttam': 'ETF 외화 유통 순자산 총액',
    'etf_frcr_last_ntas_wrth_val': 'ETF 외화 최종 순자산 가치 값',
    'lp_oder_able_cls_code': 'LP 주문 가능 구분 코드',
    'stck_dryy_hgpr': '주식 연중 최고가',
    'dryy_hgpr_vrss_prpr_rate': '연중 최고가 대비 현재가 비율',
    'dryy_hgpr_date': '연중 최고가 일자',
    'stck_dryy_lwpr': '주식 연중 최저가',
    'dryy_lwpr_vrss_prpr_rate': '연중 최저가 대비 현재가 비율',
    'dryy_lwpr_date': '연중 최저가 일자',
    'bstp_kor_isnm': '업종 한글 종목명',
    'vi_cls_code': 'VI적용구분코드',
    'lstn_stcn': '상장 주수',
    'frgn_hldn_qty': '외국인 보유 수량',
    'frgn_hldn_qty_rate': '외국인 보유 수량 비율',
    'etf_trc_ert_mltp': 'ETF 추적 수익률 배수',
    'dprt': '괴리율',
    'mbcr_name': '회원사 명',
    'stck_lstn_date': '주식 상장 일자',
    'mtrt_date': '만기 일자',
    'shrg_type_code': '분배금형태코드',
    'lp_hldn_rate': 'LP 보유 비율',
    'etf_trgt_nmix_bstp_code': 'ETF대상지수업종코드',
    'etf_div_name': 'ETF 분류 명',
    'etf_rprs_bstp_kor_isnm': 'ETF 대표 업종 한글 종목명',
    'lp_hldn_vol': 'ETN LP 보유량'
}","[""KODEX 200 ETF 현재가 알려줘."", ""TIGER 나스닥100 ETN 시세 좀 보여줘."", ""이 ETF의 현재 NAV와 괴리율 알려줘."", ""KODEX 200 ETF의 오늘 시가, 고가, 저가, 종가 보여줘."", ""TIGER 나스닥100 ETN의 추적 오차율과 ETF 순자산 총액 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/etfetn/inquire_price/inquire_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/etfetn/inquire_price/chk_inquire_price.py
domestic_stock,기본시세,주식현재가 투자자,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-investor,v1_국내주식-012,inquire_investor,"주식현재가 투자자 API입니다. 개인, 외국인, 기관 등 투자 정보를 확인할 수 있습니다. [유의사항] - 외국인은 외국인(외국인투자등록 고유번호가 있는 경우)+기타 외국인을 지칭합니다. - 당일 데이터는 장 종료 후 제공됩니다.","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 123456)",pd.DataFrame: 주식현재가 투자자 데이터,"     df = inquire_investor(env_dv=""real"", fid_cond_mrkt_div_code=""J"", fid_input_iscd=""005930"")
     print(df)","{
    'stck_bsop_date': '주식 영업 일자',
    'stck_clpr': '주식 종가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prsn_ntby_qty': '개인 순매수 수량',
    'frgn_ntby_qty': '외국인 순매수 수량',
    'orgn_ntby_qty': '기관계 순매수 수량',
    'prsn_ntby_tr_pbmn': '개인 순매수 거래 대금',
    'frgn_ntby_tr_pbmn': '외국인 순매수 거래 대금',
    'orgn_ntby_tr_pbmn': '기관계 순매수 거래 대금',
    'prsn_shnu_vol': '개인 매수2 거래량',
    'frgn_shnu_vol': '외국인 매수2 거래량',
    'orgn_shnu_vol': '기관계 매수2 거래량',
    'prsn_shnu_tr_pbmn': '개인 매수2 거래 대금',
    'frgn_shnu_tr_pbmn': '외국인 매수2 거래 대금',
    'orgn_shnu_tr_pbmn': '기관계 매수2 거래 대금',
    'prsn_seln_vol': '개인 매도 거래량',
    'frgn_seln_vol': '외국인 매도 거래량',
    'orgn_seln_vol': '기관계 매도 거래량',
    'prsn_seln_tr_pbmn': '개인 매도 거래 대금',
    'frgn_seln_tr_pbmn': '외국인 매도 거래 대금',
    'orgn_seln_tr_pbmn': '기관계 매도 거래 대금'
}","[""삼성전자 오늘 투자자별 매매 동향 알려줘."", ""SK하이닉스 기관이랑 외국인 순매수량 좀 보여줘."", ""오늘 개인이 삼성전자를 얼마나 순매수했는지 개인 순매수 거래 대금 보여줘."", ""SK하이닉스의 오늘 외국인 매도 거래량과 매수 거래량 알려줘."", ""오늘 삼성전자 기관계 순매수 수량과 순매수 거래 대금 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_investor/inquire_investor.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_investor/chk_inquire_investor.py
domestic_stock,기본시세,국내주식 시간외현재가,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-overtime-price,국내주식-076,inquire_overtime_price,"국내주식 시간외현재가 API입니다. 한국투자 HTS(eFriend Plus) > [0230] 시간외 현재가 화면의 좌측 상단기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_cond_mrkt_div_code (str): [필수] 시장 분류 코드 (ex. J: 주식)
fid_input_iscd (str): [필수] 종목코드 (ex. 005930)",pd.DataFrame: 시간외현재가 데이터,"     df = inquire_overtime_price(""J"", ""005930"")
     print(df)","{
    'bstp_kor_isnm': '업종 한글 종목명',
    'mang_issu_cls_name': '관리 종목 구분 명',
    'ovtm_untp_prpr': '시간외 단일가 현재가',
    'ovtm_untp_prdy_vrss': '시간외 단일가 전일 대비',
    'ovtm_untp_prdy_vrss_sign': '시간외 단일가 전일 대비 부호',
    'ovtm_untp_prdy_ctrt': '시간외 단일가 전일 대비율',
    'ovtm_untp_vol': '시간외 단일가 거래량',
    'ovtm_untp_tr_pbmn': '시간외 단일가 거래 대금',
    'ovtm_untp_mxpr': '시간외 단일가 상한가',
    'ovtm_untp_llam': '시간외 단일가 하한가',
    'ovtm_untp_oprc': '시간외 단일가 시가2',
    'ovtm_untp_hgpr': '시간외 단일가 최고가',
    'ovtm_untp_lwpr': '시간외 단일가 최저가',
    'marg_rate': '증거금 비율',
    'ovtm_untp_antc_cnpr': '시간외 단일가 예상 체결가',
    'ovtm_untp_antc_cntg_vrss': '시간외 단일가 예상 체결 대비',
    'ovtm_untp_antc_cntg_vrss_sign': '시간외 단일가 예상 체결 대비',
    'ovtm_untp_antc_cntg_ctrt': '시간외 단일가 예상 체결 대비율',
    'ovtm_untp_antc_cnqn': '시간외 단일가 예상 체결량',
    'crdt_able_yn': '신용 가능 여부',
    'new_lstn_cls_name': '신규 상장 구분 명',
    'sltr_yn': '정리매매 여부',
    'mang_issu_yn': '관리 종목 여부',
    'mrkt_warn_cls_code': '시장 경고 구분 코드',
    'trht_yn': '거래정지 여부',
    'vlnt_deal_cls_name': '임의 매매 구분 명',
    'ovtm_untp_sdpr': '시간외 단일가 기준가',
    'mrkt_warn_cls_name': '시장 경구 구분 명',
    'revl_issu_reas_name': '재평가 종목 사유 명',
    'insn_pbnt_yn': '불성실 공시 여부',
    'flng_cls_name': '락 구분 이름',
    'rprs_mrkt_kor_name': '대표 시장 한글 명',
    'ovtm_vi_cls_code': '시간외단일가VI적용구분코드',
    'bidp': '매수호가',
    'askp': '매도호가'
}","[""삼성전자 시간외 단일가 현재가 알려줘."", ""SK하이렉스 시간외 거래 가격이 어떻게 돼?"", ""오늘 시간외 거래에서 삼성전자 상한가, 하한가, 그리고 거래 대금 알려줘."", ""SK하이닉스의 시간외 단일가 예상 체결가와 예상 체결량 보여줘."", ""삼성전자 관리 종목 여부와 시장 경고 구분 코드 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_overtime_price/inquire_overtime_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_overtime_price/chk_inquire_overtime_price.py
domestic_stock,기본시세,주식현재가 시세2,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-price-2,v1_국내주식-054,inquire_price_2,주식현재가 시세2 API입니다.,"fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J)
fid_input_iscd (str): [필수] 입력 종목코드",pd.DataFrame: 주식현재가 시세2 데이터,"     df = inquire_price_2(""J"", ""005930"")
     print(df)","{
    'rprs_mrkt_kor_name': '대표 시장 한글 명',
    'new_hgpr_lwpr_cls_code': '신 고가 저가 구분 코드',
    'mxpr_llam_cls_code': '상하한가 구분 코드',
    'crdt_able_yn': '신용 가능 여부',
    'stck_mxpr': '주식 상한가',
    'elw_pblc_yn': 'ELW 발행 여부',
    'prdy_clpr_vrss_oprc_rate': '전일 종가 대비 시가2 비율',
    'crdt_rate': '신용 비율',
    'marg_rate': '증거금 비율',
    'lwpr_vrss_prpr': '최저가 대비 현재가',
    'lwpr_vrss_prpr_sign': '최저가 대비 현재가 부호',
    'prdy_clpr_vrss_lwpr_rate': '전일 종가 대비 최저가 비율',
    'stck_lwpr': '주식 최저가',
    'hgpr_vrss_prpr': '최고가 대비 현재가',
    'hgpr_vrss_prpr_sign': '최고가 대비 현재가 부호',
    'prdy_clpr_vrss_hgpr_rate': '전일 종가 대비 최고가 비율',
    'stck_hgpr': '주식 최고가',
    'oprc_vrss_prpr': '시가2 대비 현재가',
    'oprc_vrss_prpr_sign': '시가2 대비 현재가 부호',
    'mang_issu_yn': '관리 종목 여부',
    'divi_app_cls_code': '동시호가배분처리코드',
    'short_over_yn': '단기과열여부',
    'mrkt_warn_cls_code': '시장경고코드',
    'invt_caful_yn': '투자유의여부',
    'stange_runup_yn': '이상급등여부',
    'ssts_hot_yn': '공매도과열 여부',
    'low_current_yn': '저유동성 종목 여부',
    'vi_cls_code': 'VI적용구분코드',
    'short_over_cls_code': '단기과열구분코드',
    'stck_llam': '주식 하한가',
    'new_lstn_cls_name': '신규 상장 구분 명',
    'vlnt_deal_cls_name': '임의 매매 구분 명',
    'flng_cls_name': '락 구분 이름',
    'revl_issu_reas_name': '재평가 종목 사유 명',
    'mrkt_warn_cls_name': '시장 경고 구분 명',
    'stck_sdpr': '주식 기준가',
    'bstp_cls_code': '업종 구분 코드',
    'stck_prdy_clpr': '주식 전일 종가',
    'insn_pbnt_yn': '불성실 공시 여부',
    'fcam_mod_cls_name': '액면가 변경 구분 명',
    'stck_prpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_tr_pbmn': '누적 거래 대금',
    'acml_vol': '누적 거래량',
    'prdy_vrss_vol_rate': '전일 대비 거래량 비율',
    'bstp_kor_isnm': '업종 한글 종목명',
    'sltr_yn': '정리매매 여부',
    'trht_yn': '거래정지 여부',
    'oprc_rang_cont_yn': '시가 범위 연장 여부',
    'vlnt_fin_cls_code': '임의 종료 구분 코드',
    'stck_oprc': '주식 시가2',
    'prdy_vol': '전일 거래량'
}","[""삼성전자 주가 상세 정보 좀 보여줘."", ""SK하이닉스 시가총액이랑 PER, PBR 알려줘."", ""삼성전자의 관리 종목 여부와 투자유의여부 알려줘."", ""SK하이닉스의 전일 종가 대비 시가, 고가, 저가 비율 알려줘."", ""삼성전자의 누적 거래 대금과 누적 거래량 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_price_2/inquire_price_2.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_price_2/chk_inquire_price_2.py
domestic_stock,기본시세,주식현재가 시간외일자별주가,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-daily-overtimeprice,v1_국내주식-026,inquire_daily_overtimeprice,주식현재가 시간외일자별주가 API입니다.  (최근일 30건만 조회 가능),"env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J)
fid_input_iscd (str): [필수] 입력 종목코드","Tuple[pd.DataFrame, pd.DataFrame]: (output1, output2) 데이터프레임 튜플","     result1, result2 = inquire_daily_overtimeprice(""real"", ""J"", ""005930"")
     print(result1)
     print(result2)","{
    'ovtm_untp_prpr': '시간외 단일가 현재가',
    'ovtm_untp_prdy_vrss': '시간외 단일가 전일 대비',
    'ovtm_untp_prdy_vrss_sign': '시간외 단일가 전일 대비 부호',
    'ovtm_untp_prdy_ctrt': '시간외 단일가 전일 대비율',
    'ovtm_untp_vol': '시간외 단일가 거래량',
    'ovtm_untp_tr_pbmn': '시간외 단일가 거래 대금',
    'ovtm_untp_mxpr': '시간외 단일가 상한가',
    'ovtm_untp_llam': '시간외 단일가 하한가',
    'ovtm_untp_oprc': '시간외 단일가 시가2',
    'ovtm_untp_hgpr': '시간외 단일가 최고가',
    'ovtm_untp_lwpr': '시간외 단일가 최저가',
    'ovtm_untp_antc_cnpr': '시간외 단일가 예상 체결가',
    'ovtm_untp_antc_cntg_vrss': '시간외 단일가 예상 체결 대비',
    'ovtm_untp_antc_cntg_vrss_sign': '시간외 단일가 예상 체결 대비',
    'ovtm_untp_antc_cntg_ctrt': '시간외 단일가 예상 체결 대비율',
    'ovtm_untp_antc_vol': '시간외 단일가 예상 거래량',
    'stck_bsop_date': '주식 영업 일자',
    'ovtm_untp_prpr': '시간외 단일가 현재가',
    'ovtm_untp_prdy_vrss': '시간외 단일가 전일 대비',
    'ovtm_untp_prdy_vrss_sign': '시간외 단일가 전일 대비 부호',
    'ovtm_untp_prdy_ctrt': '시간외 단일가 전일 대비율',
    'ovtm_untp_vol': '시간외 단일가 거래량',
    'stck_clpr': '주식 종가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'ovtm_untp_tr_pbmn': '시간외 단일가 거래대금'
}","[""삼성전자 시간외 일자별 주가 알려줘."", ""SK하이닉스 최근 30일간 시간외 단일가 데이터 보여줘."", ""어제 시간외 종가와 시간외 단일가 거래량 알려줘."", ""SK하이닉스의 시간외 단일가 예상 체결가와 예상 거래량 보여줘."", ""지난주 금요일 삼성전자 시간외 단일가 거래대금 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_overtimeprice/inquire_daily_overtimeprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_overtimeprice/chk_inquire_daily_overtimeprice.py
domestic_stock,기본시세,주식현재가 시간외시간별체결,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-time-overtimeconclusion,v1_국내주식-025,inquire_time_overtimeconclusion,주식현재가 시간외시간별체결 API입니다.,"env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건시장분류코드 (ex. J:주식/ETF/ETN)
fid_input_iscd (str): [필수] 입력종목코드 (ex. 123456(ETN의 경우 Q로 시작 Q500001))
fid_hour_cls_code (str): [필수] 적립금구분코드 (ex. 1: 시간외)","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터, output2 데이터)","     output1, output2 = inquire_time_overtimeconclusion(""real"", ""J"", ""005930"", ""1"")
     print(output1)
     print(output2)","{
    'ovtm_untp_prpr': '시간외 단일가 현재가',
    'ovtm_untp_prdy_vrss': '시간외 단일가 전일 대비',
    'ovtm_untp_prdy_vrss_sign': '시간외 단일가 전일 대비 부호',
    'ovtm_untp_prdy_ctrt': '시간외 단일가 전일 대비율',
    'ovtm_untp_vol': '시간외 단일가 거래량',
    'ovtm_untp_tr_pbmn': '시간외 단일가 거래 대금',
    'ovtm_untp_mxpr': '시간외 단일가 상한가',
    'ovtm_untp_llam': '시간외 단일가 하한가',
    'ovtm_untp_oprc': '시간외 단일가 시가2',
    'ovtm_untp_hgpr': '시간외 단일가 최고가',
    'ovtm_untp_lwpr': '시간외 단일가 최저가',
    'ovtm_untp_antc_cnpr': '시간외 단일가 예상 체결가',
    'ovtm_untp_antc_cntg_vrss': '시간외 단일가 예상 체결 대비',
    'ovtm_untp_antc_cntg_vrss_sign': '시간외 단일가 예상 체결 대비 부호',
    'ovtm_untp_antc_cntg_ctrt': '시간외 단일가 예상 체결 대비율',
    'ovtm_untp_antc_vol': '시간외 단일가 예상 거래량',
    'uplm_sign': '상한 부호',
    'lslm_sign': '하한 부호',
    'stck_cntg_hour': '주식 체결 시간',
    'stck_prpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'askp': '매도호가',
    'bidp': '매수호가',
    'acml_vol': '누적 거래량',
    'cntg_vol': '체결 거래량'
}","[""삼성전자 시간외 시간별 체결 내역 보여줘."", ""SK하이닉스 오늘 시간외 거래가 어떻게 이루어졌는지 궁금해."", ""방금 시간외에서 삼성전자 주식이 얼마에 체결됐는지 체결 거래량과 함께 알려줘."", ""SK하이닉스 시간외 단일가 현재가와 누적 거래량 알려줘."", ""오늘 삼성전자 시간외 거래의 매도호가와 매수호가 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_time_overtimeconclusion/inquire_time_overtimeconclusion.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_time_overtimeconclusion/chk_inquire_time_overtimeconclusion.py
domestic_stock,기본시세,주식현재가 회원사,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-member,v1_국내주식-013,inquire_member,주식 현재가 회원사 API입니다. 회원사의 투자 정보를 확인할 수 있습니다.,"env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 123456)",pd.DataFrame: 주식현재가 회원사 데이터,"     df = inquire_member(env_dv=""real"", fid_cond_mrkt_div_code=""J"", fid_input_iscd=""005930"")
     print(df)","{
    'seln_mbcr_no1': '매도 회원사 번호1',
    'seln_mbcr_no2': '매도 회원사 번호2',
    'seln_mbcr_no3': '매도 회원사 번호3',
    'seln_mbcr_no4': '매도 회원사 번호4',
    'seln_mbcr_no5': '매도 회원사 번호5',
    'seln_mbcr_name1': '매도 회원사 명1',
    'seln_mbcr_name2': '매도 회원사 명2',
    'seln_mbcr_name3': '매도 회원사 명3',
    'seln_mbcr_name4': '매도 회원사 명4',
    'seln_mbcr_name5': '매도 회원사 명5',
    'total_seln_qty1': '총 매도 수량1',
    'total_seln_qty2': '총 매도 수량2',
    'total_seln_qty3': '총 매도 수량3',
    'total_seln_qty4': '총 매도 수량4',
    'total_seln_qty5': '총 매도 수량5',
    'seln_mbcr_rlim1': '매도 회원사 비중1',
    'seln_mbcr_rlim2': '매도 회원사 비중2',
    'seln_mbcr_rlim3': '매도 회원사 비중3',
    'seln_mbcr_rlim4': '매도 회원사 비중4',
    'seln_mbcr_rlim5': '매도 회원사 비중5',
    'seln_qty_icdc1': '매도 수량 증감1',
    'seln_qty_icdc2': '매도 수량 증감2',
    'seln_qty_icdc3': '매도 수량 증감3',
    'seln_qty_icdc4': '매도 수량 증감4',
    'seln_qty_icdc5': '매도 수량 증감5',
    'shnu_mbcr_no1': '매수2 회원사 번호1',
    'shnu_mbcr_no2': '매수2 회원사 번호2',
    'shnu_mbcr_no3': '매수2 회원사 번호3',
    'shnu_mbcr_no4': '매수2 회원사 번호4',
    'shnu_mbcr_no5': '매수2 회원사 번호5',
    'shnu_mbcr_name1': '매수2 회원사 명1',
    'shnu_mbcr_name2': '매수2 회원사 명2',
    'shnu_mbcr_name3': '매수2 회원사 명3',
    'shnu_mbcr_name4': '매수2 회원사 명4',
    'shnu_mbcr_name5': '매수2 회원사 명5',
    'total_shnu_qty1': '총 매수2 수량1',
    'total_shnu_qty2': '총 매수2 수량2',
    'total_shnu_qty3': '총 매수2 수량3',
    'total_shnu_qty4': '총 매수2 수량4',
    'total_shnu_qty5': '총 매수2 수량5',
    'shnu_mbcr_rlim1': '매수2 회원사 비중1',
    'shnu_mbcr_rlim2': '매수2 회원사 비중2',
    'shnu_mbcr_rlim3': '매수2 회원사 비중3',
    'shnu_mbcr_rlim4': '매수2 회원사 비중4',
    'shnu_mbcr_rlim5': '매수2 회원사 비중5',
    'shnu_qty_icdc1': '매수2 수량 증감1',
    'shnu_qty_icdc2': '매수2 수량 증감2',
    'shnu_qty_icdc3': '매수2 수량 증감3',
    'shnu_qty_icdc4': '매수2 수량 증감4',
    'shnu_qty_icdc5': '매수2 수량 증감5',
    'glob_total_seln_qty': '외국계 총 매도 수량',
    'glob_seln_rlim': '외국계 매도 비중',
    'glob_ntby_qty': '외국계 순매수 수량',
    'glob_total_shnu_qty': '외국계 총 매수2 수량',
    'glob_shnu_rlim': '외국계 매수2 비중',
    'seln_mbcr_glob_yn_1': '매도 회원사 외국계 여부1',
    'seln_mbcr_glob_yn_2': '매도 회원사 외국계 여부2',
    'seln_mbcr_glob_yn_3': '매도 회원사 외국계 여부3',
    'seln_mbcr_glob_yn_4': '매도 회원사 외국계 여부4',
    'seln_mbcr_glob_yn_5': '매도 회원사 외국계 여부5',
    'shnu_mbcr_glob_yn_1': '매수2 회원사 외국계 여부1',
    'shnu_mbcr_glob_yn_2': '매수2 회원사 외국계 여부2',
    'shnu_mbcr_glob_yn_3': '매수2 회원사 외국계 여부3',
    'shnu_mbcr_glob_yn_4': '매수2 회원사 외국계 여부4',
    'shnu_mbcr_glob_yn_5': '매수2 회원사 외국계 여부5',
    'glob_total_seln_qty_icdc': '외국계 총 매도 수량 증감',
    'glob_total_shnu_qty_icdc': '외국계 총 매수2 수량 증감'
}","[""오늘 삼성전자 매매한 증권사 상위 5곳과 총 매도 수량 알려줘."", ""SK하이닉스 외국계 증권사 매매 동향이 궁금해."", ""오늘 키움증권에서 삼성전자를 얼마나 순매수했는지 알려줘."", ""SK하이닉스 매수 상위 5개 회원사의 총 매수 수량과 비중 알려줘."", ""오늘 외국계 증권사의 총 매도 수량과 총 매수 수량 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_member/inquire_member.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_member/chk_inquire_member.py
etfetn,기본시세,NAV 비교추이(종목),REST,GET,/uapi/etfetn/v1/quotations/nav-comparison-trend,v1_국내주식-069,nav_comparison_trend,"NAV 비교추이(종목) API입니다. 한국투자 HTS(eFriend Plus) > [0244] ETF/ETN 비교추이(NAV/IIV) 좌측 화면의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J)
fid_input_iscd (str): [필수] 입력 종목코드","Tuple[pd.DataFrame, pd.DataFrame]: output1, output2 데이터프레임","     output1, output2 = nav_comparison_trend(""J"", ""069500"")
     print(output1)
     print(output2)","{
    'stck_prpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'stck_prdy_clpr': '주식 전일 종가',
    'stck_oprc': '주식 시가2',
    'stck_hgpr': '주식 최고가',
    'stck_lwpr': '주식 최저가',
    'stck_mxpr': '주식 상한가',
    'stck_llam': '주식 하한가',
    'nav': 'NAV',
    'nav_prdy_vrss_sign': 'NAV 전일 대비 부호',
    'nav_prdy_vrss': 'NAV 전일 대비',
    'nav_prdy_ctrt': 'NAV 전일 대비율',
    'prdy_clpr_nav': 'NAV전일종가',
    'oprc_nav': 'NAV시가',
    'hprc_nav': 'NAV고가',
    'lprc_nav': 'NAV저가'
}","[""KODEX 200 ETF의 NAV 추이 좀 보여줘."", ""TIGER 나스닥100 ETN의 현재가랑 NAV를 비교하고 싶어."", ""오늘 KODEX 200 ETF의 시가, 고가, 저가 NAV 각각 알려줘."", ""TIGER 나스닥100 ETN의 NAV 전일 대비율 알려줘."", ""KODEX 200 ETF의 누적 거래량과 누적 거래 대금 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/etfetn/nav_comparison_trend/nav_comparison_trend.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/etfetn/nav_comparison_trend/chk_nav_comparison_trend.py
domestic_stock,기본시세,국내주식 시간외호가,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-overtime-asking-price,국내주식-077,inquire_overtime_asking_price,"국내주식 시간외호가 API입니다. 한국투자 HTS(eFriend Plus) > [0230] 시간외 현재가 화면의 '호가' 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_cond_mrkt_div_code (str): [필수] 시장 분류 코드 (ex. J:주식)
fid_input_iscd (str): [필수] 종목코드 (ex. 123456)",pd.DataFrame: 국내주식 시간외호가 데이터,"     df = inquire_overtime_asking_price(""J"", ""005930"")
     print(df)","{
    'ovtm_untp_last_hour': '시간외 단일가 최종 시간',
    'ovtm_untp_askp1': '시간외 단일가 매도호가1',
    'ovtm_untp_askp2': '시간외 단일가 매도호가2',
    'ovtm_untp_askp3': '시간외 단일가 매도호가3',
    'ovtm_untp_askp4': '시간외 단일가 매도호가4',
    'ovtm_untp_askp5': '시간외 단일가 매도호가5',
    'ovtm_untp_askp6': '시간외 단일가 매도호가6',
    'ovtm_untp_askp7': '시간외 단일가 매도호가7',
    'ovtm_untp_askp8': '시간외 단일가 매도호가8',
    'ovtm_untp_askp9': '시간외 단일가 매도호가9',
    'ovtm_untp_askp10': '시간외 단일가 매도호가10',
    'ovtm_untp_bidp1': '시간외 단일가 매수호가1',
    'ovtm_untp_bidp2': '시간외 단일가 매수호가2',
    'ovtm_untp_bidp3': '시간외 단일가 매수호가3',
    'ovtm_untp_bidp4': '시간외 단일가 매수호가4',
    'ovtm_untp_bidp5': '시간외 단일가 매수호가5',
    'ovtm_untp_bidp6': '시간외 단일가 매수호가6',
    'ovtm_untp_bidp7': '시간외 단일가 매수호가7',
    'ovtm_untp_bidp8': '시간외 단일가 매수호가8',
    'ovtm_untp_bidp9': '시간외 단일가 매수호가9',
    'ovtm_untp_bidp10': '시간외 단일가 매수호가10',
    'ovtm_untp_askp_icdc1': '시간외 단일가 매도호가 증감1',
    'ovtm_untp_askp_icdc2': '시간외 단일가 매도호가 증감2',
    'ovtm_untp_askp_icdc3': '시간외 단일가 매도호가 증감3',
    'ovtm_untp_askp_icdc4': '시간외 단일가 매도호가 증감4',
    'ovtm_untp_askp_icdc5': '시간외 단일가 매도호가 증감5',
    'ovtm_untp_askp_icdc6': '시간외 단일가 매도호가 증감6',
    'ovtm_untp_askp_icdc7': '시간외 단일가 매도호가 증감7',
    'ovtm_untp_askp_icdc8': '시간외 단일가 매도호가 증감8',
    'ovtm_untp_askp_icdc9': '시간외 단일가 매도호가 증감9',
    'ovtm_untp_askp_icdc10': '시간외 단일가 매도호가 증감10',
    'ovtm_untp_bidp_icdc1': '시간외 단일가 매수호가 증감1',
    'ovtm_untp_bidp_icdc2': '시간외 단일가 매수호가 증감2',
    'ovtm_untp_bidp_icdc3': '시간외 단일가 매수호가 증감3',
    'ovtm_untp_bidp_icdc4': '시간외 단일가 매수호가 증감4',
    'ovtm_untp_bidp_icdc5': '시간외 단일가 매수호가 증감5',
    'ovtm_untp_bidp_icdc6': '시간외 단일가 매수호가 증감6',
    'ovtm_untp_bidp_icdc7': '시간외 단일가 매수호가 증감7',
    'ovtm_untp_bidp_icdc8': '시간외 단일가 매수호가 증감8',
    'ovtm_untp_bidp_icdc9': '시간외 단일가 매수호가 증감9',
    'ovtm_untp_bidp_icdc10': '시간외 단일가 매수호가 증감10',
    'ovtm_untp_askp_rsqn1': '시간외 단일가 매도호가 잔량1',
    'ovtm_untp_askp_rsqn2': '시간외 단일가 매도호가 잔량2',
    'ovtm_untp_askp_rsqn3': '시간외 단일가 매도호가 잔량3',
    'ovtm_untp_askp_rsqn4': '시간외 단일가 매도호가 잔량4',
    'ovtm_untp_askp_rsqn5': '시간외 단일가 매도호가 잔량5',
    'ovtm_untp_askp_rsqn6': '시간외 단일가 매도호가 잔량6',
    'ovtm_untp_askp_rsqn7': '시간외 단일가 매도호가 잔량7',
    'ovtm_untp_askp_rsqn8': '시간외 단일가 매도호가 잔량8',
    'ovtm_untp_askp_rsqn9': '시간외 단일가 매도호가 잔량9',
    'ovtm_untp_askp_rsqn10': '시간외 단일가 매도호가 잔량10',
    'ovtm_untp_bidp_rsqn1': '시간외 단일가 매수호가 잔량1',
    'ovtm_untp_bidp_rsqn': '시간외 단일가 매수호가 잔량2',
    'ovtm_untp_bidp_rsqn3': '시간외 단일가 매수호가 잔량3',
    'ovtm_untp_bidp_rsqn4': '시간외 단일가 매수호가 잔량4',
    'ovtm_untp_bidp_rsqn5': '시간외 단일가 매수호가 잔량5',
    'ovtm_untp_bidp_rsqn6': '시간외 단일가 매수호가 잔량6',
    'ovtm_untp_bidp_rsqn7': '시간외 단일가 매수호가 잔량7',
    'ovtm_untp_bidp_rsqn8': '시간외 단일가 매수호가 잔량8',
    'ovtm_untp_bidp_rsqn9': '시간외 단일가 매수호가 잔량9',
    'ovtm_untp_bidp_rsqn10': '시간외 단일가 매수호가 잔량10',
    'ovtm_untp_total_askp_rsqn': '시간외 단일가 총 매도호가 잔량',
    'ovtm_untp_total_bidp_rsqn': '시간외 단일가 총 매수호가 잔량',
    'ovtm_untp_total_askp_rsqn_icdc': '시간외 단일가 총 매도호가 잔량',
    'ovtm_untp_total_bidp_rsqn_icdc': '시간외 단일가 총 매수호가 잔량',
    'ovtm_untp_ntby_bidp_rsqn': '시간외 단일가 순매수 호가 잔량',
    'total_askp_rsqn': '총 매도호가 잔량',
    'total_bidp_rsqn': '총 매수호가 잔량',
    'total_askp_rsqn_icdc': '총 매도호가 잔량 증감',
    'total_bidp_rsqn_icdc': '총 매수호가 잔량 증감',
    'ovtm_total_askp_rsqn': '시간외 총 매도호가 잔량',
    'ovtm_total_bidp_rsqn': '시간외 총 매수호가 잔량',
    'ovtm_total_askp_icdc': '시간외 총 매도호가 증감',
    'ovtm_total_bidp_icdc': '시간외 총 매수호가 증감'
}","[""삼성전자 시간외 호가창 보여줘."", ""SK하이닉스 시간외 매수/매도 잔량이 어떻게 돼?"", ""지금 시간외에서 삼성전자 주식을 사려면 얼마에 주문해야 하는지 매도호가 알려줘."", ""SK하이닉스 시간외 단일가 총 매도호가 잔량과 총 매수호가 잔량 보여줘."", ""삼성전자 시간외 총 매도호가 잔량 증감 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_overtime_asking_price/inquire_overtime_asking_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_overtime_asking_price/chk_inquire_overtime_asking_price.py
domestic_stock,순위분석,국내주식 등락률 순위,REST,GET,/uapi/domestic-stock/v1/ranking/fluctuation,v1_국내주식-088,fluctuation,[국내주식] 순위분석 등락률 순위[v1_국내주식-088] 국내주식 등락률 순위 API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): 조건 시장 분류 코드 (J: 주식, W: ELW, Q: ETF)
fid_cond_scr_div_code (str): 조건 화면 분류 코드 (20170: 등락률)
fid_input_iscd (str): 입력 종목코드 (0000: 전체)
fid_rank_sort_cls_code (str): 순위 정렬 구분 코드 (0000: 등락률순)
fid_input_cnt_1 (str): 입력 수1 (조회할 종목 수)
fid_prc_cls_code (str): 가격 구분 코드 (0: 전체)
fid_input_price_1 (str): 입력 가격1 (하한가)
fid_input_price_2 (str): 입력 가격2 (상한가)
fid_vol_cnt (str): 거래량 수 (최소 거래량)
fid_trgt_cls_code (str): 대상 구분 코드 (9자리, ""1"" or ""0"", 증거금30% 40% 50% 60% 100% 신용보증금30% 40% 50% 60%)
fid_trgt_exls_cls_code (str): 대상 제외 구분 코드 (10자리, ""1"" or ""0"", 투자위험/경고/주의 관리종목 정리매매 불성실공시 우선주 거래정지 ETF ETN 신용주문불가 SPAC)
fid_div_cls_code (str): 분류 구분 코드 (0: 전체)
fid_rsfl_rate1 (str): 등락 비율1 (하락률 하한)
fid_rsfl_rate2 (str): 등락 비율2 (상승률 상한)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임",Optional[pd.DataFrame]: API 응답 데이터,"     df = fluctuation(fid_rsfl_rate2=""10"", fid_cond_mrkt_div_code=""J"", fid_cond_scr_div_code=""20170"", fid_input_iscd=""0000"", fid_rank_sort_cls_code=""0000"", fid_input_cnt_1=""10"", fid_prc_cls_code=""0"", fid_input_price_1=""0"", fid_input_price_2=""1000000"", fid_vol_cnt=""100000"", fid_trgt_cls_code=""0"", fid_trgt_exls_cls_code=""0"", fid_div_cls_code=""0"", fid_rsfl_rate1=""0"")
     print(df)","{
    ""stck_shrn_iscd"": ""주식 단축 종목코드"",
    ""data_rank"": ""데이터 순위"",
    ""hts_kor_isnm"": ""HTS 한글 종목명"",
    ""stck_prpr"": ""주식 현재가"",
    ""prdy_vrss"": ""전일 대비"",
    ""prdy_vrss_sign"": ""전일 대비 부호"",
    ""prdy_ctrt"": ""전일 대비율"",
    ""acml_vol"": ""누적 거래량"",
    ""stck_hgpr"": ""주식 최고가"",
    ""hgpr_hour"": ""최고가 시간"",
    ""acml_hgpr_date"": ""누적 최고가 일자"",
    ""stck_lwpr"": ""주식 최저가"",
    ""lwpr_hour"": ""최저가 시간"",
    ""acml_lwpr_date"": ""누적 최저가 일자"",
    ""lwpr_vrss_prpr_rate"": ""저가 대비 현재가 비율"",
    ""dsgt_date_clpr_vrss_prpr_rate"": ""영업 일수 대비 현재가 비율"",
    ""cnnt_ascn_dynu"": ""연속 상승 일수"",
    ""hgpr_vrss_prpr_rate"": ""고가 대비 현재가 비율"",
    ""cnnt_down_dynu"": ""연속 하락 일수"",
    ""oprc_vrss_prpr_sign"": ""시가 대비 부호"",
    ""oprc_vrss_prpr"": ""시가 대비"",
    ""oprc_vrss_prpr_rate"": ""시가 대비 현재가 비율"",
    ""prd_rsfl"": ""기간 등락"",
    ""prd_rsfl_rate"": ""기간 등락 비율""
}","[""오늘 주식 등락률 상위 10종목 알려줘."", ""코스피에서 10% 이상 상승한 종목들만 보여줘."", ""10만주 이상 거래된 종목 중에서 등락률 순위와 누적 거래량 보여줘."", ""오늘 가장 많이 오른 종목의 연속 상승 일수 알려줘."", ""등락률 순위 상위 5개 종목의 시가 대비 현재가 비율 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/fluctuation/fluctuation.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/fluctuation/chk_fluctuation.py
domestic_stock,순위분석,거래량순위,REST,GET,/uapi/domestic-stock/v1/quotations/volume-rank,v1_국내주식-047,volume_rank,[국내주식] 순위분석 순위분석[v1_국내주식-047] 순위분석 API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): 조건 시장 분류 코드 (""J"": KRX, ""NX"": NXT, ""UN"": 통합, ""W"": ELW)
fid_cond_scr_div_code (str): 조건 화면 분류 코드 (""20171"")
fid_input_iscd (str): 입력 종목코드 (""0000"": 전체, 기타: 업종코드)
fid_div_cls_code (str): 분류 구분 코드 (""0"": 전체, ""1"": 보통주, ""2"": 우선주)
fid_blng_cls_code (str): 소속 구분 코드 (""0"": 평균거래량, ""1"": 거래증가율, ""2"": 평균거래회전율, ""3"": 거래금액순, ""4"": 평균거래금액회전율)
fid_trgt_cls_code (str): 대상 구분 코드 (9자리, ""1"" or ""0"", 차례대로 증거금 30% 40% 50% 60% 100% 신용보증금 30% 40% 50% 60%)
fid_trgt_exls_cls_code (str): 대상 제외 구분 코드 (10자리, ""1"" or ""0"", 차례대로 투자위험/경고/주의 관리종목 정리매매 불성실공시 우선주 거래정지 ETF ETN 신용주문불가 SPAC)
fid_input_price_1 (str): 입력 가격1 (가격 ~, 전체 가격 대상 조회 시 공란)
fid_input_price_2 (str): 입력 가격2 (~ 가격, 전체 가격 대상 조회 시 공란)
fid_vol_cnt (str): 거래량 수 (거래량 ~, 전체 거래량 대상 조회 시 공란)
fid_input_date_1 (str): 입력 날짜1 (공란)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임",pd.DataFrame: 순위분석 데이터,"     df = volume_rank(fid_cond_mrkt_div_code=""J"", fid_cond_scr_div_code=""20171"", fid_input_iscd=""0000"", fid_div_cls_code=""0"", fid_blng_cls_code=""0"", fid_trgt_cls_code=""111111111"", fid_trgt_exls_cls_code=""0000000000"", fid_input_price_1=""0"", fid_input_price_2=""1000000"", fid_vol_cnt=""100000"", fid_input_date_1="""")
     print(df)","{
    'hts_kor_isnm': 'HTS 한글 종목명',
    'mksc_shrn_iscd': '가중권 단축 종목코드',
    'data_rank': '데이터 순위',
    'stck_prpr': '주식 현재가',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_vrss': '전일 대비',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'prdy_vol': '전일 거래량',
    'lstn_stcn': '상장 주식수',
    'avrg_vol': '평균 거래량',
    'n_befr_clpr_vrss_prpr_rate': '전일종가대비현재가(%)',
    'vol_inrt': '거래량증가율',
    'vol_tnrt': '거래량회전율',
    'nday_vol_tnrt': 'N일 거래량회전율',
    'avrg_tr_pbmn': '평균 거래 대금',
    'tr_pbmn_tnrt': '거래대금회전율',
    'nday_tr_pbmn_tnrt': 'N일 거래대금회전율',
    'acml_tr_pbmn': '누적 거래 대금'
}","[""오늘 거래량 상위 종목 리스트 줘."", ""코스닥에서 오늘 거래대금이 가장 많았던 종목이 뭐야?"", ""어제보다 거래량이 2배 이상 늘어난 종목의 거래량증가율과 함께 보여줘."", ""거래량 상위 10개 종목의 거래량회전율 알려줘."", ""오늘 평균 거래 대금이 가장 높은 종목 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/volume_rank/volume_rank.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/volume_rank/chk_volume_rank.py
domestic_stock,순위분석,국내주식 시가총액 상위,REST,GET,/uapi/domestic-stock/v1/ranking/market-cap,v1_국내주식-091,market_cap,[국내주식] 순위분석 국내주식 시가총액 상위[v1_국내주식-091] 국내주식 시가총액 상위 API를 호출하여 DataFrame으로 반환합니다.,"fid_input_price_2 (str): 입력값 없을때 전체 (~ 가격)
fid_cond_mrkt_div_code (str): 시장구분코드 (주식 J)
fid_cond_scr_div_code (str): Unique key( 20174 )
fid_div_cls_code (str): 0: 전체,  1:보통주,  2:우선주
fid_input_iscd (str): 0000:전체, 0001:거래소, 1001:코스닥, 2001:코스피200
fid_trgt_cls_code (str): 0 : 전체
fid_trgt_exls_cls_code (str): 0 : 전체
fid_input_price_1 (str): 입력값 없을때 전체 (가격 ~)
fid_vol_cnt (str): 입력값 없을때 전체 (거래량 ~)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임",Optional[pd.DataFrame]: 국내주식 시가총액 상위 데이터,"     df = market_cap(
         fid_input_price_2="""",
         fid_cond_mrkt_div_code=""J"",
         fid_cond_scr_div_code=""20174"",
         fid_div_cls_code=""0"",
         fid_input_iscd=""0000"",
         fid_trgt_cls_code=""0"",
         fid_trgt_exls_cls_code=""0"",
         fid_input_price_1="""",
         fid_vol_cnt=""""
     )
     print(df)","{
    'mksc_shrn_iscd': '유가증권 단축 종목코드',
    'data_rank': '데이터 순위',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'stck_prpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'lstn_stcn': '상장 주수',
    'stck_avls': '시가 총액',
    'mrkt_whol_avls_rlim': '시장 전체 시가총액 비중'
}","[""국내 주식 시가총액 상위 20개 종목 보여줘."", ""코스닥 시가총액 순위가 어떻게 돼?"", ""삼성전자의 시가총액이 시장 전체에서 차지하는 비중 알려줘."", ""시가총액 상위 10개 종목의 현재가와 전일 대비율 보여줘."", ""코스피200 종목들의 시가총액 순위 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/market_cap/market_cap.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/market_cap/chk_market_cap.py
domestic_stock,순위분석,국내주식 체결강도 상위,REST,GET,/uapi/domestic-stock/v1/ranking/volume-power,v1_국내주식-101,volume_power,[국내주식] 순위분석 국내주식 체결강도 상위[v1_국내주식-101] 국내주식 체결강도 상위 API를 호출하여 DataFrame으로 반환합니다.,"fid_trgt_exls_cls_code (str): 0 : 전체
fid_cond_mrkt_div_code (str): 시장구분코드 (주식 J)
fid_cond_scr_div_code (str): Unique key( 20168 )
fid_input_iscd (str): 0000:전체, 0001:거래소, 1001:코스닥, 2001:코스피200
fid_div_cls_code (str): 0: 전체,  1: 보통주 2: 우선주
fid_input_price_1 (str): 입력값 없을때 전체 (가격 ~)
fid_input_price_2 (str): 입력값 없을때 전체 (~ 가격)
fid_vol_cnt (str): 입력값 없을때 전체 (거래량 ~)
fid_trgt_cls_code (str): 0 : 전체
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 국내주식 체결강도 상위 데이터,"     df = volume_power(
         fid_trgt_exls_cls_code=""0"",
         fid_cond_mrkt_div_code=""J"",
         fid_cond_scr_div_code=""20168"",
         fid_input_iscd=""0000"",
         fid_div_cls_code=""0"",
         fid_input_price_1="""",
         fid_input_price_2="""",
         fid_vol_cnt="""",
         fid_trgt_cls_code=""0""
     )
     print(df)","{
    'stck_shrn_iscd': '주식 단축 종목코드',
    'data_rank': '데이터 순위',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'stck_prpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'tday_rltv': '당일 체결강도',
    'seln_cnqn_smtn': '매도 체결량 합계',
    'shnu_cnqn_smtn': '매수2 체결량 합계'
}","[""오늘 체결강도 상위 종목 리스트 알려줘."", ""코스피200 종목 중에서 체결강도가 가장 높은 종목이 뭐야?"", ""오늘 삼성전자의 체결강도와 매도/매수 체결량 합계 알려줘."", ""체결강도 상위 10개 종목의 현재가와 등락률 보여줘."", ""코스닥에서 오늘 체결강도가 150% 넘는 종목 찾아줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/volume_power/volume_power.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/volume_power/chk_volume_power.py
domestic_stock,시세분석,관심종목(멀티종목) 시세조회,REST,GET,/uapi/domestic-stock/v1/quotations/intstock-multprice,국내주식-205,intstock_multprice,관심종목(멀티종목) 시세조회 API입니다. ① 관심종목 그룹조회 → ② 관심종목 그룹별 종목조회 → ③ 관심종목(멀티종목) 시세조회 순서대로 호출하셔서 관심종목 시세 조회 가능합니다. ※ 한 번의 호출에 최대 30종목의 시세 확인 가능합니다. 그룹별종목조회 결과를 아래와 같이 입력하셔서 총 30종목까지 복수종목 조회 가능합니다.(아래 Example 참고) . fid_mrkt_cls_code(시장구분) → FID_COND_MRKT_DIV_CODE_1 . jong_code(종목코드) 1 → FID_INPUT_ISCD_1 ... 한국투자증권 Github 에서 관심종목 복수시세조회 파이썬 샘플코드를 참고하실 수 있습니다. https://github.com/koreainvestment/open-trading-api/blob/main/rest/interest_stocks_price.py,"fid_cond_mrkt_div_code_1 (str): [필수] 조건 시장 분류 코드1 (ex. J)
fid_input_iscd_1 (str): [필수] 입력 종목코드1 (ex. 123456)
fid_cond_mrkt_div_code_2 (Optional[str]): 조건 시장 분류 코드2
fid_input_iscd_2 (Optional[str]): 입력 종목코드2
fid_cond_mrkt_div_code_3 (Optional[str]): 조건 시장 분류 코드3
fid_input_iscd_3 (Optional[str]): 입력 종목코드3
fid_cond_mrkt_div_code_4 (Optional[str]): 조건 시장 분류 코드4
fid_input_iscd_4 (Optional[str]): 입력 종목코드4
fid_cond_mrkt_div_code_5 (Optional[str]): 조건 시장 분류 코드5
fid_input_iscd_5 (Optional[str]): 입력 종목코드5
fid_cond_mrkt_div_code_6 (Optional[str]): 조건 시장 분류 코드6
fid_input_iscd_6 (Optional[str]): 입력 종목코드6
fid_cond_mrkt_div_code_7 (Optional[str]): 조건 시장 분류 코드7
fid_input_iscd_7 (Optional[str]): 입력 종목코드7
fid_cond_mrkt_div_code_8 (Optional[str]): 조건 시장 분류 코드8
fid_input_iscd_8 (Optional[str]): 입력 종목코드8
fid_cond_mrkt_div_code_9 (Optional[str]): 조건 시장 분류 코드9
fid_input_iscd_9 (Optional[str]): 입력 종목코드9
fid_cond_mrkt_div_code_10 (Optional[str]): 조건 시장 분류 코드10
fid_input_iscd_10 (Optional[str]): 입력 종목코드10
fid_cond_mrkt_div_code_11 (Optional[str]): 조건 시장 분류 코드11
fid_input_iscd_11 (Optional[str]): 입력 종목코드11
fid_cond_mrkt_div_code_12 (Optional[str]): 조건 시장 분류 코드12
fid_input_iscd_12 (Optional[str]): 입력 종목코드12
fid_cond_mrkt_div_code_13 (Optional[str]): 조건 시장 분류 코드13
fid_input_iscd_13 (Optional[str]): 입력 종목코드13
fid_cond_mrkt_div_code_14 (Optional[str]): 조건 시장 분류 코드14
fid_input_iscd_14 (Optional[str]): 입력 종목코드14
fid_cond_mrkt_div_code_15 (Optional[str]): 조건 시장 분류 코드15
fid_input_iscd_15 (Optional[str]): 입력 종목코드15
fid_cond_mrkt_div_code_16 (Optional[str]): 조건 시장 분류 코드16
fid_input_iscd_16 (Optional[str]): 입력 종목코드16
fid_cond_mrkt_div_code_17 (Optional[str]): 조건 시장 분류 코드17
fid_input_iscd_17 (Optional[str]): 입력 종목코드17
fid_cond_mrkt_div_code_18 (Optional[str]): 조건 시장 분류 코드18
fid_input_iscd_18 (Optional[str]): 입력 종목코드18
fid_cond_mrkt_div_code_19 (Optional[str]): 조건 시장 분류 코드19
fid_input_iscd_19 (Optional[str]): 입력 종목코드19
fid_cond_mrkt_div_code_20 (Optional[str]): 조건 시장 분류 코드20
fid_input_iscd_20 (Optional[str]): 입력 종목코드20
fid_cond_mrkt_div_code_21 (Optional[str]): 조건 시장 분류 코드21
fid_input_iscd_21 (Optional[str]): 입력 종목코드21
fid_cond_mrkt_div_code_22 (Optional[str]): 조건 시장 분류 코드22
fid_input_iscd_22 (Optional[str]): 입력 종목코드22
fid_cond_mrkt_div_code_23 (Optional[str]): 조건 시장 분류 코드23
fid_input_iscd_23 (Optional[str]): 입력 종목코드23
fid_cond_mrkt_div_code_24 (Optional[str]): 조건 시장 분류 코드24
fid_input_iscd_24 (Optional[str]): 입력 종목코드24
fid_cond_mrkt_div_code_25 (Optional[str]): 조건 시장 분류 코드25
fid_input_iscd_25 (Optional[str]): 입력 종목코드25
fid_cond_mrkt_div_code_26 (Optional[str]): 조건 시장 분류 코드26
fid_input_iscd_26 (Optional[str]): 입력 종목코드26
fid_cond_mrkt_div_code_27 (Optional[str]): 조건 시장 분류 코드27
fid_input_iscd_27 (Optional[str]): 입력 종목코드27
fid_cond_mrkt_div_code_28 (Optional[str]): 조건 시장 분류 코드28
fid_input_iscd_28 (Optional[str]): 입력 종목코드28
fid_cond_mrkt_div_code_29 (Optional[str]): 조건 시장 분류 코드29
fid_input_iscd_29 (Optional[str]): 입력 종목코드29
fid_cond_mrkt_div_code_30 (Optional[str]): 조건 시장 분류 코드30
fid_input_iscd_30 (Optional[str]): 입력 종목코드30",pd.DataFrame: 관심종목(멀티종목) 시세 데이터,"     df = intstock_multprice(fid_cond_mrkt_div_code_1=""J"", fid_input_iscd_1=""419530"")
     print(df)","{
    'kospi_kosdaq_cls_name': '코스피 코스닥 구분 명',
    'mrkt_trtm_cls_name': '시장 조치 구분 명',
    'hour_cls_code': '시간 구분 코드',
    'inter_shrn_iscd': '관심 단축 종목코드',
    'inter_kor_isnm': '관심 한글 종목명',
    'inter2_prpr': '관심2 현재가',
    'inter2_prdy_vrss': '관심2 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'inter2_oprc': '관심2 시가',
    'inter2_hgpr': '관심2 고가',
    'inter2_lwpr': '관심2 저가',
    'inter2_llam': '관심2 하한가',
    'inter2_mxpr': '관심2 상한가',
    'inter2_askp': '관심2 매도호가',
    'inter2_bidp': '관심2 매수호가',
    'seln_rsqn': '매도 잔량',
    'shnu_rsqn': '매수2 잔량',
    'total_askp_rsqn': '총 매도호가 잔량',
    'total_bidp_rsqn': '총 매수호가 잔량',
    'acml_tr_pbmn': '누적 거래 대금',
    'inter2_prdy_clpr': '관심2 전일 종가',
    'oprc_vrss_hgpr_rate': '시가 대비 최고가 비율',
    'intr_antc_cntg_vrss': '관심 예상 체결 대비',
    'intr_antc_cntg_vrss_sign': '관심 예상 체결 대비 부호',
    'intr_antc_cntg_prdy_ctrt': '관심 예상 체결 전일 대비율',
    'intr_antc_vol': '관심 예상 거래량',
    'inter2_sdpr': '관심2 기준가'
}","[""내 관심종목들 현재가 한번에 보여줘."", ""내가 등록한 첫번째 관심종목 그룹 시세 좀 알려줘."", ""내 관심종목 중에서 오늘 가장 많이 오른 종목과 등락률 알려줘."", ""내 관심종목들의 총 매도호가 잔량과 총 매수호가 잔량 비교해줘."", ""내 관심종목 그룹의 모든 종목 현재가, 전일 대비, 등락률, 누적 거래량 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/intstock_multprice/intstock_multprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/intstock_multprice/chk_intstock_multprice.py
domestic_stock,시세분석,종목조건검색조회,REST,GET,/uapi/domestic-stock/v1/quotations/psearch-result,국내주식-039,psearch_result,"HTS(efriend Plus) [0110] 조건검색에서 등록 및 서버저장한 나의 조건 목록을 확인할 수 있는 API입니다. 종목조건검색 목록조회 API(/uapi/domestic-stock/v1/quotations/psearch-title)의 output인 'seq'을 종목조건검색조회 API(/uapi/domestic-stock/v1/quotations/psearch-result)의 input으로 사용하시면 됩니다. ※ 시스템 안정성을 위해 API로 제공되는 조건검색 결과의 경우 조건당 100건으로 제한을 둔 점 양해 부탁드립니다. ※ [0110] 화면의 '대상변경' 설정사항은 HTS [0110] 사용자 조건검색 화면에만 적용됨에 유의 부탁드립니다. ※ '조회가 계속 됩니다. (다음을 누르십시오.)' 오류 발생 시 해결방법 → HTS(efriend Plus) [0110] 조건검색 화면에서 조건을 등록하신 후, 왼쪽 하단의 ""사용자조건 서버저장"" 클릭하셔서 등록한 조건들을 서버로 보낸 후 다시 API 호출 시도 부탁드립니다. ※ {""rt_cd"":""1"",""msg_cd"":""MCA05918"",""msg1"":""종목코드 오류입니다.""} 메시지 발생 이유 → 조건검색 결과 검색된 종목이 0개인 경우 위 응답값을 수신하게 됩니다.","user_id (str): [필수] 사용자 HTS ID
seq (str): [필수] 사용자조건 키값 (종목조건검색 목록조회 API의 output인 'seq'을 이용)",pd.DataFrame: 종목조건검색조회 데이터,"     df = psearch_result(user_id=trenv.my_htsid, seq=""0"")
     print(df)","{
    'code': '종목코드',
    'name': '종목명',
    'daebi': '전일대비부호',
    'price': '현재가',
    'chgrate': '등락율',
    'acml_vol': '거래량',
    'trade_amt': '거래대금',
    'change': '전일대비',
    'cttr': '체결강도',
    'open': '시가',
    'high': '고가',
    'low': '저가',
    'high52': '52주최고가',
    'low52': '52주최저가',
    'expprice': '예상체결가',
    'expchange': '예상대비',
    'expchggrate': '예상등락률',
    'expcvol': '예상체결수량',
    'chgrate2': '전일거래량대비율',
    'expdaebi': '예상대비부호',
    'recprice': '기준가',
    'uplmtprice': '상한가',
    'dnlmtprice': '하한가',
    'stotprice': '시가총액'
}","[""내 HTS 조건검색식 1번 결과 좀 보여줘."", ""내가 저장한 '급등주 포착' 조건식에 맞는 종목이 오늘 있었어?"", ""내 조건식으로 검색된 종목들의 현재가, 등락률, 체결강도 알려줘."", ""내 조건식으로 찾은 종목들의 시가총액 순으로 정렬해줘."", ""내 '저평가 우량주' 조건검색 결과의 52주 최고가와 최저가 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/psearch_result/psearch_result.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/psearch_result/chk_psearch_result.py
domestic_stock,시세분석,주식현재가 회원사 종목매매동향,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-member-daily,국내주식-197,inquire_member_daily,"주식현재가 회원사 종목매매동향 API입니다. 한국투자 HTS(eFriend Plus) > [0454] 증권사 종목매매동향 화면을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_cond_mrkt_div_code (str): [필수] 조건시장분류코드 (ex. 주식J)
fid_input_iscd (str): [필수] 입력종목코드 (ex. 123456)
fid_input_iscd_2 (str): [필수] 회원사코드 (ex. 회원사코드 FAQ 종목정보 다운로드(국내) > 회원사 참조)
fid_input_date_1 (str): [필수] 입력날짜1
fid_input_date_2 (str): [필수] 입력날짜2
fid_sctn_cls_code (str): 데이터 순위 (초기값: """")",pd.DataFrame: 주식현재가 회원사 종목매매동향 데이터,"     df = inquire_member_daily(
         fid_cond_mrkt_div_code=""J"",
         fid_input_iscd=""005930"", 
         fid_input_iscd_2=""00003"",
         fid_input_date_1=""20240501"",
         fid_input_date_2=""20240624""
     )
     print(df)","{
    'stck_bsop_date': '주식영업일자',
    'total_seln_qty': '총매도수량',
    'total_shnu_qty': '총매수2수량',
    'ntby_qty': '순매수수량',
    'stck_prpr': '주식현재가',
    'prdy_vrss': '전일대비',
    'prdy_vrss_sign': '전일대비부호',
    'prdy_ctrt': '전일대비율',
    'acml_vol': '누적거래량'
}","[""내 HTS에 저장된 회원사별 종목 매매동향 보여줘."", ""삼성증권이 오늘 삼성전자를 얼마나 사고 팔았는지 일별로 보고 싶어."", ""지난 한달간 미래에셋증권의 SK하이닉스 순매수 수량 추이 보여줘."", ""오늘 삼성증권의 삼성전자 총매도수량과 총매수수량 알려줘."", ""미래에셋증권의 SK하이닉스 매매동향과 함께 당시 주가도 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_member_daily/inquire_member_daily.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_member_daily/chk_inquire_member_daily.py
domestic_stock,시세분석,종목조건검색 목록조회,REST,GET,/uapi/domestic-stock/v1/quotations/psearch-title,국내주식-038,psearch_title,"[국내주식] 시세분석 > 종목조건검색 목록조회[국내주식-038] HTS(efriend Plus) [0110] 조건검색에서 등록 및 서버저장한 나의 조건 목록을 확인할 수 있는 API입니다. 종목조건검색 목록조회 API(/uapi/domestic-stock/v1/quotations/psearch-title)의 output인 'seq'을 종목조건검색조회 API(/uapi/domestic-stock/v1/quotations/psearch-result)의 input으로 사용하시면 됩니다. ※ 시스템 안정성을 위해 API로 제공되는 조건검색 결과의 경우 조건당 100건으로 제한을 둔 점 양해 부탁드립니다. ※ [0110] 화면의 '대상변경' 설정사항은 HTS [0110] 사용자 조건검색 화면에만 적용됨에 유의 부탁드립니다. ※ '조회가 계속 됩니다. (다음을 누르십시오.)' 오류 발생 시 해결방법 → HTS(efriend Plus) [0110] 조건검색 화면에서 조건을 등록하신 후, 왼쪽 하단의 ""사용자조건 서버저장"" 클릭하셔서 등록한 조건들을 서버로 보낸 후 다시 API 호출 시도 부탁드립니다.",user_id (str): [필수] 사용자 HTS ID (ex. U:업종),pd.DataFrame: 종목조건검색 목록 데이터,"     df = psearch_title(user_id=trenv.my_htsid)
     print(df)","{
    'user_id': 'HTS ID',
    'seq': '조건키값',
    'grp_nm': '그룹명',
    'condition_nm': '조건명'
}","[""내 HTS에 저장된 조건검색식 목록 보여줘."", ""내가 만든 조건식 이름이랑 조건키값 좀 알려줘."", ""내 조건식 중에서 '저평가 우량주' 조건식의 키값 알려줘."", ""내 HTS 아이디로 저장된 모든 그룹명과 조건명 리스트 보여줘."", ""조건검색식 목록 조회해줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/psearch_title/psearch_title.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/psearch_title/chk_psearch_title.py
domestic_stock,시세분석,종목별 외인기관 추정가집계,REST,GET,/uapi/domestic-stock/v1/quotations/investor-trend-estimate,v1_국내주식-046,investor_trend_estimate,"국내주식 종목별 외국인, 기관 추정가집계 API입니다. 한국투자 MTS > 국내 현재가 > 투자자 > 투자자동향 탭 > 왼쪽구분을 '추정(주)'로 선택 시 확인 가능한 데이터를 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다. 증권사 직원이 장중에 집계/입력한 자료를 단순 누계한 수치로서, 입력시간은 외국인 09:30, 11:20, 13:20, 14:30 / 기관종합 10:00, 11:20, 13:20, 14:30 이며, 사정에 따라 변동될 수 있습니다.",mksc_shrn_iscd (str): [필수] 종목코드 (ex. 123456),pd.DataFrame: 종목별 외인기관 추정가집계 데이터,"     df = investor_trend_estimate(mksc_shrn_iscd=""005930"")
     print(df)","{
    'bsop_hour_gb': '입력구분',
    'frgn_fake_ntby_qty': '외국인수량(가집계)',
    'orgn_fake_ntby_qty': '기관수량(가집계)',
    'sum_fake_ntby_qty': '합산수량(가집계)'
}","[""삼성전자 외국인이랑 기관 매매 추정치 좀 알려줘."", ""SK하이닉스 오늘 장중에 기관이 얼마나 샀는지 기관수량 가집계 보여줘."", ""오늘 오후 2시 30분 기준으로 외국인이 삼성전자를 얼마나 순매수했는지 알려줘."", ""SK하이닉스의 외국인 순매수 수량과 기관계 순매수 수량 보여줘."", ""오늘 투자신탁이 순매수한 종목 상위 5개 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/investor_trend_estimate/investor_trend_estimate.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/investor_trend_estimate/chk_investor_trend_estimate.py
domestic_stock,시세분석,프로그램매매 종합현황(일별),REST,GET,/uapi/domestic-stock/v1/quotations/comp-program-trade-daily,국내주식-115,comp_program_trade_daily,"프로그램매매 종합현황(일별) API입니다. 한국투자 HTS(eFriend Plus) > [0460] 프로그램매매 종합현황 화면의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_cond_mrkt_div_code (str): [필수] 조건시장분류코드 (ex. J:주식,NX:NXT,UN:통합)
fid_mrkt_cls_code (str): [필수] 시장구분코드 (ex. K:코스피,Q:코스닥)
fid_input_date_1 (str): 검색시작일
fid_input_date_2 (str): 검색종료일",pd.DataFrame: 프로그램매매 종합현황(일별) 데이터,"     df = comp_program_trade_daily(""J"", ""K"", ""20250101"", ""20250617"")
     print(df)","{
    'stck_bsop_date': '주식 영업 일자',
    'nabt_entm_seln_tr_pbmn': '비차익 위탁 매도 거래 대금',
    'nabt_onsl_seln_vol': '비차익 자기 매도 거래량',
    'whol_onsl_seln_tr_pbmn': '전체 자기 매도 거래 대금',
    'arbt_smtn_shnu_vol': '차익 합계 매수2 거래량',
    'nabt_smtn_shnu_tr_pbmn': '비차익 합계 매수2 거래 대금',
    'arbt_entm_ntby_qty': '차익 위탁 순매수 수량',
    'nabt_entm_ntby_tr_pbmn': '비차익 위탁 순매수 거래 대금',
    'arbt_entm_seln_vol': '차익 위탁 매도 거래량',
    'nabt_entm_seln_vol_rate': '비차익 위탁 매도 거래량 비율',
    'nabt_onsl_seln_vol_rate': '비차익 자기 매도 거래량 비율',
    'whol_onsl_seln_tr_pbmn_rate': '전체 자기 매도 거래 대금 비율',
    'arbt_smtm_shun_vol_rate': '차익 합계 매수 거래량 비율',
    'nabt_smtm_shun_tr_pbmn_rate': '비차익 합계 매수 거래대금 비율',
    'arbt_entm_ntby_qty_rate': '차익 위탁 순매수 수량 비율',
    'nabt_entm_ntby_tr_pbmn_rate': '비차익 위탁 순매수 거래 대금',
    'arbt_entm_seln_vol_rate': '차익 위탁 매도 거래량 비율',
    'nabt_entm_seln_tr_pbmn_rate': '비차익 위탁 매도 거래 대금 비',
    'nabt_onsl_seln_tr_pbmn': '비차익 자기 매도 거래 대금',
    'whol_smtn_seln_vol': '전체 합계 매도 거래량',
    'arbt_smtn_shnu_tr_pbmn': '차익 합계 매수2 거래 대금',
    'whol_entm_shnu_vol': '전체 위탁 매수2 거래량',
    'arbt_entm_ntby_tr_pbmn': '차익 위탁 순매수 거래 대금',
    'nabt_onsl_ntby_qty': '비차익 자기 순매수 수량',
    'arbt_entm_seln_tr_pbmn': '차익 위탁 매도 거래 대금',
    'whol_seln_vol_rate': '전체 매도 거래량 비율',
    'whol_entm_shnu_vol_rate': '전체 위탁 매수 거래량 비율',
    'whol_entm_seln_tr_pbmn': '전체 위탁 매도 거래 대금',
    'nabt_smtm_seln_vol': '비차익 합계 매도 거래량',
    'arbt_entm_shnu_vol': '차익 위탁 매수2 거래량',
    'nabt_entm_shnu_tr_pbmn': '비차익 위탁 매수2 거래 대금',
    'whol_onsl_shnu_vol': '전체 자기 매수2 거래량',
    'arbt_onsl_ntby_tr_pbmn': '차익 자기 순매수 거래 대금',
    'nabt_smtn_ntby_qty': '비차익 합계 순매수 수량',
    'arbt_onsl_seln_vol': '차익 자기 매도 거래량',
    'whol_entm_ntby_qty': '전체 위탁 순매수 수량',
    'nabt_onsl_ntby_tr_pbmn': '비차익 자기 순매수 거래 대금',
    'arbt_onsl_seln_tr_pbmn': '차익 자기 매도 거래 대금',
    'nabt_smtm_seln_tr_pbmn_rate': '비차익 합계 매도 거래대금 비율',
    'arbt_entm_shnu_vol_rate': '차익 위탁 매수 거래량 비율',
    'nabt_entm_shnu_tr_pbmn_rate': '비차익 위탁 매수 거래 대금 비',
    'whol_onsl_shnu_tr_pbmn': '전체 자기 매수2 거래 대금',
    'arbt_onsl_ntby_tr_pbmn_rate': '차익 자기 순매수 거래 대금 비',
    'nabt_smtm_ntby_qty_rate': '비차익 합계 순매수 수량 비율',
    'arbt_onsl_seln_vol_rate': '차익 자기 매도 거래량 비율',
    'whol_entm_seln_vol': '전체 위탁 매도 거래량',
    'arbt_entm_shnu_tr_pbmn': '차익 위탁 매수2 거래 대금',
    'nabt_onsl_shnu_vol': '비차익 자기 매수2 거래량',
    'whol_smtn_shnu_vol': '전체 합계 매수2 거래량',
    'arbt_smtn_ntby_tr_pbmn': '차익 합계 순매수 거래 대금',
    'arbt_smtn_seln_vol': '차익 합계 매도 거래량',
    'whol_entm_seln_tr_pbmn_rate': '전체 위탁 매도 거래 대금 비율',
    'nabt_onsl_seln_vol_rate': '전체 자기 매도 거래량 비율',
    'arbt_onsl_shnu_vol_rate': '차익 자기 매수 거래량 비율',
    'nabt_smtm_shun_vol_rate': '비차익 합계 매수 거래량 비율',
    'whol_shun_tr_pbmn_rate': '전체 매수 거래대금 비율',
    'nabt_entm_ntby_qty_rate': '비차익 위탁 순매수 수량 비율',
    'arbt_smtm_seln_tr_pbmn_rate': '차익 합계 매도 거래대금 비율',
    'arbt_onsl_shnu_vol': '차익 자기 매수2 거래량',
    'nabt_onsl_shnu_tr_pbmn': '비차익 자기 매수2 거래 대금',
    'nabt_smtn_shnu_vol': '비차익 합계 매수2 거래량',
    'whol_smtn_shnu_tr_pbmn': '전체 합계 매수2 거래 대금',
    'arbt_smtm_ntby_qty': '차익 합계 순매수 수량',
    'nabt_smtn_ntby_tr_pbmn': '비차익 합계 순매수 거래 대금',
    'arbt_smtn_seln_tr_pbmn': '차익 합계 매도 거래 대금',
    'arbt_onsl_shnu_tr_pbmn_rate': '차익 자기 매수 거래 대금 비율',
    'whol_shun_vol_rate': '전체 매수 거래량 비율',
    'arbt_smtm_ntby_tr_pbmn_rate': '차익 합계 순매수 거래대금 비율',
    'whol_entm_ntby_qty_rate': '전체 위탁 순매수 수량 비율',
    'arbt_smtm_seln_tr_pbmn_rate': '차익 합계 매도 거래대금 비율'
}","[""오늘 코스피 프로그램 매매 현황 일별로 보여줘."", ""최근 한달간 코스닥 시장의 비차익거래 순매수 금액 추이가 궁금해."", ""어제 코스피 시장에서 차익 위탁 순매수 수량과 순매수 거래 대금 알려줘."", ""오늘 코스닥 시장의 전체 합계 매도 거래량과 매수 거래량 보여줘."", ""지난주 코스피 시장의 비차익 자기 순매수 수량 추이 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/comp_program_trade_daily/comp_program_trade_daily.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/comp_program_trade_daily/chk_comp_program_trade_daily.py
domestic_stock,시세분석,종목별일별매수매도체결량,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-daily-trade-volume,v1_국내주식-056,inquire_daily_trade_volume,"종목별일별매수매도체결량 API입니다. 실전계좌의 경우, 한 번의 호출에 최대 100건까지 확인 가능합니다. 국내주식 종목의 일별 매수체결량, 매도체결량 데이터를 확인할 수 있습니다.","fid_cond_mrkt_div_code (str): [필수] FID 조건 시장 분류 코드 (ex. J)
fid_input_iscd (str): [필수] FID 입력 종목코드 (ex. 123456)
fid_period_div_code (str): [필수] FID 기간 분류 코드 (ex. D)
fid_input_date_1 (str): FID 입력 날짜1
fid_input_date_2 (str): FID 입력 날짜2","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터프레임, output2 데이터프레임)","     df1, df2 = inquire_daily_trade_volume(""J"", ""005930"", ""D"")
     print(df1)
     print(df2)","{
    'shnu_cnqn_smtn': '매수 체결량 합계',
    'seln_cnqn_smtn': '매도 체결량 합계',
    'stck_bsop_date': '주식 영업 일자',
    'total_seln_qty': '총 매도 수량',
    'total_shnu_qty': '총 매수 수량'
}","[""삼성전자 일별 매수, 매도 체결량 데이터 보여줘."", ""최근 한달간 SK하이닉스의 매수 체결량이랑 매도 체결량 추이가 궁금해."", ""어제 삼성전자는 매수 체결량이 많았어, 매도 체결량이 많았어?"", ""SK하이닉스의 총 매도 수량과 총 매수 수량 일별로 비교해줘."", ""지난주 삼성전자의 일별 매수 체결량 합계 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_trade_volume/inquire_daily_trade_volume.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_trade_volume/chk_inquire_daily_trade_volume.py
domestic_stock,시세분석,관심종목 그룹별 종목조회,REST,GET,/uapi/domestic-stock/v1/quotations/intstock-stocklist-by-group,국내주식-203,intstock_stocklist_by_group,관심종목 그룹별 종목조회 API입니다. ① 관심종목 그룹조회 → ② 관심종목 그룹별 종목조회 → ③ 관심종목(멀티종목) 시세조회 순서대로 호출하셔서 관심종목 시세 조회 가능합니다. ※ 한 번의 호출에 최대 30종목의 시세 확인 가능합니다. 한국투자증권 Github 에서 관심종목 복수시세조회 파이썬 샘플코드를 참고하실 수 있습니다. https://github.com/koreainvestment/open-trading-api/blob/main/rest/interest_stocks_price.py,"type (str): [필수] 관심종목구분코드 (ex. 1)
user_id (str): [필수] 사용자 ID
inter_grp_code (str): [필수] 관심 그룹 코드 (ex. 001)
fid_etc_cls_code (str): [필수] 기타 구분 코드 (ex. 4)
data_rank (str): 데이터 순위
inter_grp_name (str): 관심 그룹 명
hts_kor_isnm (str): HTS 한글 종목명
cntg_cls_code (str): 체결 구분 코드","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터프레임, output2 데이터프레임)","     df1, df2 = intstock_stocklist_by_group(
         type=""1"", user_id=trenv.my_htsid, inter_grp_code=""001"", fid_etc_cls_code=""4""
     )
     print(df1)
     print(df2)","{
    'fid_mrkt_cls_code': 'FID 시장 구분 코드',
    'data_rank': '데이터 순위',
    'exch_code': '거래소코드',
    'jong_code': '종목코드',
    'color_code': '생상 코드',
    'memo': '메모',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'fxdt_ntby_qty': '기준일 순매수 수량',
    'cntg_unpr': '체결단가',
    'cntg_cls_code': '체결 구분 코드'
}","[""내 HTS 관심종목 그룹 1번에 있는 종목들 리스트 보여줘."", ""내가 '우량주' 그룹에 어떤 종목들을 넣어놨는지 궁금해."", ""내 관심종목 그룹에 있는 종목들 코드와 HTS 한글 종목명 알려줘."", ""내 '반도체' 관심 그룹의 종목 리스트 보여줘."", ""내 첫 번째 관심종목 그룹의 종목코드 리스트 줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/intstock_stocklist_by_group/intstock_stocklist_by_group.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/intstock_stocklist_by_group/chk_intstock_stocklist_by_group.py
domestic_stock,시세분석,시장별 투자자매매동향(시세),REST,GET,/uapi/domestic-stock/v1/quotations/inquire-investor-time-by-market,v1_국내주식-074,inquire_investor_time_by_market,"시장별 투자자매매동향(시세성) API입니다. 한국투자 HTS(eFriend Plus) > [0403] 시장별 시간동향 의 상단 표 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_input_iscd (str): [필수] 시장구분
fid_input_iscd_2 (str): [필수] 업종구분",pd.DataFrame: 시장별 투자자매매동향 데이터,"     df = inquire_investor_time_by_market(fid_input_iscd=""999"", fid_input_iscd_2=""S001"")
     print(df)","{
    'frgn_seln_vol': '외국인 매도 거래량',
    'frgn_shnu_vol': '외국인 매수2 거래량',
    'frgn_ntby_qty': '외국인 순매수 수량',
    'frgn_seln_tr_pbmn': '외국인 매도 거래 대금',
    'frgn_shnu_tr_pbmn': '외국인 매수2 거래 대금',
    'frgn_ntby_tr_pbmn': '외국인 순매수 거래 대금',
    'prsn_seln_vol': '개인 매도 거래량',
    'prsn_shnu_vol': '개인 매수2 거래량',
    'prsn_ntby_qty': '개인 순매수 수량',
    'prsn_seln_tr_pbmn': '개인 매도 거래 대금',
    'prsn_shnu_tr_pbmn': '개인 매수2 거래 대금',
    'prsn_ntby_tr_pbmn': '개인 순매수 거래 대금',
    'orgn_seln_vol': '기관계 매도 거래량',
    'orgn_shnu_vol': '기관계 매수2 거래량',
    'orgn_ntby_qty': '기관계 순매수 수량',
    'orgn_seln_tr_pbmn': '기관계 매도 거래 대금',
    'orgn_shnu_tr_pbmn': '기관계 매수2 거래 대금',
    'orgn_ntby_tr_pbmn': '기관계 순매수 거래 대금',
    'scrt_seln_vol': '증권 매도 거래량',
    'scrt_shnu_vol': '증권 매수2 거래량',
    'scrt_ntby_qty': '증권 순매수 수량',
    'scrt_seln_tr_pbmn': '증권 매도 거래 대금',
    'scrt_shnu_tr_pbmn': '증권 매수2 거래 대금',
    'scrt_ntby_tr_pbmn': '증권 순매수 거래 대금',
    'ivtr_seln_vol': '투자신탁 매도 거래량',
    'ivtr_shnu_vol': '투자신탁 매수2 거래량',
    'ivtr_ntby_qty': '투자신탁 순매수 수량',
    'ivtr_seln_tr_pbmn': '투자신탁 매도 거래 대금',
    'ivtr_shnu_tr_pbmn': '투자신탁 매수2 거래 대금',
    'ivtr_ntby_tr_pbmn': '투자신탁 순매수 거래 대금',
    'pe_fund_seln_tr_pbmn': '사모 펀드 매도 거래 대금',
    'pe_fund_seln_vol': '사모 펀드 매도 거래량',
    'pe_fund_ntby_vol': '사모 펀드 순매수 거래량',
    'pe_fund_shnu_tr_pbmn': '사모 펀드 매수2 거래 대금',
    'pe_fund_shnu_vol': '사모 펀드 매수2 거래량',
    'pe_fund_ntby_tr_pbmn': '사모 펀드 순매수 거래 대금',
    'bank_seln_vol': '은행 매도 거래량',
    'bank_shnu_vol': '은행 매수2 거래량',
    'bank_ntby_qty': '은행 순매수 수량',
    'bank_seln_tr_pbmn': '은행 매도 거래 대금',
    'bank_shnu_tr_pbmn': '은행 매수2 거래 대금',
    'bank_ntby_tr_pbmn': '은행 순매수 거래 대금',
    'insu_seln_vol': '보험 매도 거래량',
    'insu_shnu_vol': '보험 매수2 거래량',
    'insu_ntby_qty': '보험 순매수 수량',
    'insu_seln_tr_pbmn': '보험 매도 거래 대금',
    'insu_shnu_tr_pbmn': '보험 매수2 거래 대금',
    'insu_ntby_tr_pbmn': '보험 순매수 거래 대금',
    'mrbn_seln_vol': '종금 매도 거래량',
    'mrbn_shnu_vol': '종금 매수2 거래량',
    'mrbn_ntby_qty': '종금 순매수 수량',
    'mrbn_seln_tr_pbmn': '종금 매도 거래 대금',
    'mrbn_shnu_tr_pbmn': '종금 매수2 거래 대금',
    'mrbn_ntby_tr_pbmn': '종금 순매수 거래 대금',
    'fund_seln_vol': '기금 매도 거래량',
    'fund_shnu_vol': '기금 매수2 거래량',
    'fund_ntby_qty': '기금 순매수 수량',
    'fund_seln_tr_pbmn': '기금 매도 거래 대금',
    'fund_shnu_tr_pbmn': '기금 매수2 거래 대금',
    'fund_ntby_tr_pbmn': '기금 순매수 거래 대금',
    'etc_orgt_seln_vol': '기타 단체 매도 거래량',
    'etc_orgt_shnu_vol': '기타 단체 매수2 거래량',
    'etc_orgt_ntby_vol': '기타 단체 순매수 거래량',
    'etc_orgt_seln_tr_pbmn': '기타 단체 매도 거래 대금',
    'etc_orgt_shnu_tr_pbmn': '기타 단체 매수2 거래 대금',
    'etc_orgt_ntby_tr_pbmn': '기타 단체 순매수 거래 대금',
    'etc_corp_seln_vol': '기타 법인 매도 거래량',
    'etc_corp_shnu_vol': '기타 법인 매수2 거래량',
    'etc_corp_ntby_vol': '기타 법인 순매수 거래량',
    'etc_corp_seln_tr_pbmn': '기타 법인 매도 거래 대금',
    'etc_corp_shnu_tr_pbmn': '기타 법인 매수2 거래 대금',
    'etc_corp_ntby_tr_pbmn': '기타 법인 순매수 거래 대금'
}","[""오늘 코스피 시장 투자자별 매매 동향 알려줘."", ""최근 코스닥 시장에서 기관의 순매수 금액 추이가 어떻게 돼?"", ""오늘 외국인이 코스피 시장에서 얼마를 순매수했는지 순매수 거래 대금 보여줘."", ""오늘 코스닥 시장에서 개인이 순매도한 금액 알려줘."", ""오늘 증권사의 순매수 수량과 순매수 거래 대금 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_investor_time_by_market/inquire_investor_time_by_market.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_investor_time_by_market/chk_inquire_investor_time_by_market.py
domestic_stock,시세분석,종목별 프로그램매매추이(일별),REST,GET,/uapi/domestic-stock/v1/quotations/program-trade-by-stock-daily,국내주식-113,program_trade_by_stock_daily,"국내주식 종목별 프로그램매매추이(일별) API입니다. 한국투자 HTS(eFriend Plus) > [0465] 종목별 프로그램 매매추이 화면(혹은 한국투자 MTS > 국내 현재가 > 기타수급 > 프로그램) 의 ""일자별"" 클릭 시 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX,NX:NXT,UN:통합)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 123456)
fid_input_date_1 (str): [필수] 입력날짜 (초기값: """")",pd.DataFrame: 종목별 프로그램매매추이(일별) 데이터,"     df = program_trade_by_stock_daily(""J"", ""005930"")
     print(df)","{
    'stck_bsop_date': '주식 영업 일자',
    'stck_clpr': '주식 종가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'whol_smtn_seln_vol': '전체 합계 매도 거래량',
    'whol_smtn_shnu_vol': '전체 합계 매수2 거래량',
    'whol_smtn_ntby_qty': '전체 합계 순매수 수량',
    'whol_smtn_seln_tr_pbmn': '전체 합계 매도 거래 대금',
    'whol_smtn_shnu_tr_pbmn': '전체 합계 매수2 거래 대금',
    'whol_smtn_ntby_tr_pbmn': '전체 합계 순매수 거래 대금',
    'whol_ntby_vol_icdc': '전체 순매수 거래량 증감',
    'whol_ntby_tr_pbmn_icdc2': '전체 순매수 거래 대금 증감2'
}","[""삼성전자 오늘 프로그램 매매 추이 일별로 보여줘."", ""어제 SK하이닉스의 프로그램 순매수 수량이 얼마나 됐는지 궁금해."", ""오늘 삼성전자 프로그램 전체 합계 순매수 수량과 순매수 거래 대금 알려줘."", ""SK하이닉스의 어제 종가와 프로그램 전체 순매수 거래량 증감 보여줘."", ""지난주 삼성전자 프로그램 매매의 일자별 전체 합계 순매수 수량 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/program_trade_by_stock_daily/program_trade_by_stock_daily.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/program_trade_by_stock_daily/chk_program_trade_by_stock_daily.py
domestic_stock,시세분석,종목별 프로그램매매추이(체결),REST,GET,/uapi/domestic-stock/v1/quotations/program-trade-by-stock,v1_국내주식-044,program_trade_by_stock,"국내주식 종목별 프로그램매매추이(체결) API입니다. 한국투자 HTS(eFriend Plus) > [0465] 종목별 프로그램 매매추이 화면(혹은 한국투자 MTS > 국내 현재가 > 기타수급 > 프로그램) 의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J:KRX,NX:NXT,UN:통합)
fid_input_iscd (str): [필수] 종목코드 (ex. 123456)",pd.DataFrame: 종목별 프로그램매매추이 데이터,"     df = program_trade_by_stock(fid_cond_mrkt_div_code=""J"", fid_input_iscd=""005930"")
     print(df)","{
    'bsop_hour': '영업 시간',
    'stck_prpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'whol_smtn_seln_vol': '전체 합계 매도 거래량',
    'whol_smtn_shnu_vol': '전체 합계 매수2 거래량',
    'whol_smtn_ntby_qty': '전체 합계 순매수 수량',
    'whol_smtn_seln_tr_pbmn': '전체 합계 매도 거래 대금',
    'whol_smtn_shnu_tr_pbmn': '전체 합계 매수2 거래 대금',
    'whol_smtn_ntby_tr_pbmn': '전체 합계 순매수 거래 대금',
    'whol_ntby_vol_icdc': '전체 순매수 거래량 증감',
    'whol_ntby_tr_pbmn_icdc': '전체 순매수 거래 대금 증감'
}","[""삼성전자 오늘 프로그램 매매 체결 추이 보여줘."", ""SK하이닉스 장중에 프로그램 매매가 어떻게 움직였는지 궁금해."", ""오늘 삼성전자의 프로그램 총 순매수 금액이 얼마야?"", ""SK하이닉스의 시간대별 프로그램 전체 합계 매도 거래량과 매수 거래량 보여줘."", ""삼성전자 현재가와 프로그램 전체 합계 순매수 수량 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/program_trade_by_stock/program_trade_by_stock.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/program_trade_by_stock/chk_program_trade_by_stock.py
domestic_stock,시세분석,국내주식 공매도 일별추이,REST,GET,/uapi/domestic-stock/v1/quotations/daily-short-sale,국내주식-134,daily_short_sale,국내주식 공매도 일별추이를 조회합니다.,"fid_cond_mrkt_div_code (str): [필수] 시장분류코드 (ex. J:주식)
fid_input_iscd (str): [필수] 종목코드 (ex. 123456)
fid_input_date_1 (str): 시작일자
fid_input_date_2 (str): 종료일자","Tuple[pd.DataFrame, pd.DataFrame]: (output1, output2) 데이터프레임 쌍","     df1, df2 = daily_short_sale(""J"", ""005930"", ""20240301"", ""20240328"")
     print(df1)
     print(df2)","{
    'stck_prpr': '주식 현재가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'prdy_vol': '전일 거래량',
    'stck_bsop_date': '주식 영업 일자',
    'stck_clpr': '주식 종가',
    'prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'stnd_vol_smtn': '기준 거래량 합계',
    'ssts_cntg_qty': '공매도 체결 수량',
    'ssts_vol_rlim': '공매도 거래량 비중',
    'acml_ssts_cntg_qty': '누적 공매도 체결 수량',
    'acml_ssts_cntg_qty_rlim': '누적 공매도 체결 수량 비중',
    'acml_tr_pbmn': '누적 거래 대금',
    'stnd_tr_pbmn_smtn': '기준 거래대금 합계',
    'ssts_tr_pbmn': '공매도 거래 대금',
    'ssts_tr_pbmn_rlim': '공매도 거래대금 비중',
    'acml_ssts_tr_pbmn': '누적 공매도 거래 대금',
    'acml_ssts_tr_pbmn_rlim': '누적 공매도 거래 대금 비중',
    'stck_oprc': '주식 시가2',
    'stck_hgpr': '주식 최고가',
    'stck_lwpr': '주식 최저가',
    'avrg_prc': '평균가격'
}","[""삼성전자 최근 한달간 공매도 추이 보여줘."", ""SK하이닉스 공매도 거래대금이 어떻게 변하고 있는지 궁금해."", ""어제 삼성전자 공매도 거래량이 전체 거래량의 몇 퍼센트였는지 공매도 거래량 비중 알려줘."", ""SK하이닉스의 누적 공매도 거래 대금과 그 비중 보여줘."", ""지난주 삼성전자 일별 공매도 체결 수량 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/daily_short_sale/daily_short_sale.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/daily_short_sale/chk_daily_short_sale.py
domestic_stock,시세분석,회원사 실시간 매매동향(틱),REST,GET,/uapi/domestic-stock/v1/quotations/frgnmem-trade-trend,국내주식-163,frgnmem_trade_trend,[국내주식] 시세분석 회원사 실 시간 매매동향(틱)[국내주식-163] 회원사 실 시간 매매동향(틱) API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_scr_div_code (str): 20432(primary key)
fid_cond_mrkt_div_code (str): J 고정입력
fid_input_iscd (str): ex. 005930(삼성전자)   ※ FID_INPUT_ISCD(종목코드) 혹은 FID_MRKT_CLS_CODE(시장구분코드) 둘 중 하나만 입력
fid_input_iscd_2 (str): ex. 99999(전체)  ※ 회원사코드 (kis developers 포탈 사이트 포럼-> FAQ -> 종목정보 다운로드(국내) 참조)
fid_mrkt_cls_code (str): A(전체),K(코스피), Q(코스닥), K2(코스피200), W(ELW)  ※ FID_INPUT_ISCD(종목코드) 혹은 FID_MRKT_CLS_CODE(시장구분코드) 둘 중 하나만 입력
fid_vol_cnt (str): 거래량 ~
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 회원사 실 시간 매매동향(틱) 데이터","     df1, df2 = frgnmem_trade_trend(
         fid_cond_scr_div_code=""20432"",
         fid_cond_mrkt_div_code=""J"",
         fid_input_iscd=""005930"",
         fid_input_iscd_2=""99999"",
         fid_mrkt_cls_code=""A"",
         fid_vol_cnt=""1000""
     )
     print(df1)
     print(df2)","{
    'total_seln_qty': '총매도수량',
    'total_shnu_qty': '총매수2수량',
    'bsop_hour': '영업시간',
    'hts_kor_isnm': 'HTS한글종목명',
    'stck_prpr': '주식현재가',
    'prdy_vrss': '전일대비',
    'prdy_vrss_sign': '전일대비부호',
    'cntg_vol': '체결거래량',
    'acml_ntby_qty': '누적순매수수량',
    'glob_ntby_qty': '외국계순매수수량',
    'frgn_ntby_qty_icdc': '외국인순매수수량증감'
}","[""삼성전자 실시간으로 매매하는 증권사 동향 보여줘."", ""SK하이닉스 오늘 외국계 증권사 창구에서 순매수가 얼마나 들어왔는지 궁금해."", ""방금 삼성증권에서 삼성전자 대량 매수 주문이 들어왔는지 확인하고 싶어."", ""SK하이닉스 현재가와 외국계순매수수량 알려줘."", ""삼성전자의 누적순매수수량과 외국인순매수수량증감 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/frgnmem_trade_trend/frgnmem_trade_trend.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/frgnmem_trade_trend/chk_frgnmem_trade_trend.py
domestic_stock,시세분석,종목별 외국계 순매수추이,REST,GET,/uapi/domestic-stock/v1/quotations/frgnmem-pchs-trend,국내주식-164,frgnmem_pchs_trend,"종목별 외국계 순매수추이 API입니다. 한국투자 HTS(eFriend Plus) > [0433] 종목별 외국계 순매수추이 화면의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. J)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 123456)
fid_input_iscd_2 (str): [필수] 입력 종목코드 (ex. 99999)",pd.DataFrame: 종목별 외국계 순매수추이 데이터,"     df = frgnmem_pchs_trend(""J"", ""005930"", ""99999"")
     print(df)","{
    'bsop_hour': '영업시간',
    'stck_prpr': '주식현재가',
    'prdy_vrss': '전일대비',
    'prdy_vrss_sign': '전일대비부호',
    'prdy_ctrt': '전일대비율',
    'acml_vol': '누적거래량',
    'frgn_seln_vol': '외국인매도거래량',
    'frgn_shnu_vol': '외국인매수2거래량',
    'glob_ntby_qty': '외국계순매수수량',
    'frgn_ntby_qty_icdc': '외국인순매수수량증감'
}","[""삼성전자 외국계 증권사 순매수 추이 보여줘."", ""SK하이닉스 오늘 장중에 외국계 창구에서 매수세가 강했는지 궁금해."", ""오늘 외국인이 삼성전자를 얼마나 순매수했는지 시간대별로 보고 싶어."", ""SK하이닉스의 현재가와 외국계순매수수량 알려줘."", ""삼성전자 외국인매도거래량과 외국인매수거래량 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/frgnmem_pchs_trend/frgnmem_pchs_trend.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/frgnmem_pchs_trend/chk_frgnmem_pchs_trend.py
domestic_stock,시세분석,국내기관_외국인 매매종목가집계,REST,GET,/uapi/domestic-stock/v1/quotations/foreign-institution-total,국내주식-037,foreign_institution_total,"국내기관_외국인 매매종목가집계 API입니다. HTS(efriend Plus) [0440] 외국인/기관 매매종목 가집계 화면을 API로 구현한 사항으로 화면을 함께 보시면 기능 이해가 쉽습니다. 증권사 직원이 장중에 집계/입력한 자료를 단순 누계한 수치로서, 입력시간은 외국인 09:30, 11:20, 13:20, 14:30 / 기관종합 10:00, 11:20, 13:20, 14:30 이며, 입력한 시간은 ±10분정도 차이가 발생할 수 있으며, 장운영 사정에 다라 변동될 수 있습니다.","fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. V)
fid_cond_scr_div_code (str): [필수] 조건화면분류코드 (ex. 16449)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 0000:전체,0001:코스피,1001:코스닥,...,FAQ 종목정보 다운로드(국내) - 업종코드 참조 )
fid_div_cls_code (str): [필수] 분류구분코드 (ex. 0:수량정열, 1:금액정열)
fid_rank_sort_cls_code (str): [필수] 순위정렬구분코드 (ex. 0:순매수상위,1:순매도상위)
fid_etc_cls_code (str): [필수] 기타구분정렬 (ex. 0:전체,1:외국인,2:기관계,3:기타)",pd.DataFrame: 국내기관_외국인 매매종목가집계 데이터,"     df = foreign_institution_total(""V"", ""16449"", ""0000"", ""0"", ""0"", ""0"")
     print(df)","{
    'hts_kor_isnm': 'HTS 한글 종목명',
    'mksc_shrn_iscd': '유가증권 단축 종목코드',
    'ntby_qty': '순매수 수량',
    'stck_prpr': '주식 현재가',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_vrss': '전일 대비',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'frgn_ntby_qty': '외국인 순매수 수량',
    'orgn_ntby_qty': '기관계 순매수 수량',
    'ivtr_ntby_qty': '투자신탁 순매수 수량',
    'bank_ntby_qty': '은행 순매수 수량',
    'insu_ntby_qty': '보험 순매수 수량',
    'mrbn_ntby_qty': '종금 순매수 수량',
    'fund_ntby_qty': '기금 순매수 수량',
    'etc_orgt_ntby_vol': '기타 단체 순매수 거래량',
    'etc_corp_ntby_vol': '기타 법인 순매수 거래량',
    'frgn_ntby_tr_pbmn': '외국인 순매수 거래 대금',
    'orgn_ntby_tr_pbmn': '기관계 순매수 거래 대금',
    'ivtr_ntby_tr_pbmn': '투자신탁 순매수 거래 대금',
    'bank_ntby_tr_pbmn': '은행 순매수 거래 대금',
    'insu_ntby_tr_pbmn': '보험 순매수 거래 대금',
    'mrbn_ntby_tr_pbmn': '종금 순매수 거래 대금',
    'fund_ntby_tr_pbmn': '기금 순매수 거래 대금',
    'etc_orgt_ntby_tr_pbmn': '기타 단체 순매수 거래 대금',
    'etc_corp_ntby_tr_pbmn': '기타 법인 순매수 거래 대금'
}","[""오늘 기관이 많이 산 코스피 종목 순서대로 보여줘."", ""최근 외국인이 순매도한 코스닥 종목 리스트가 궁금해."", ""오늘 기관이 삼성전자를 얼마나 순매수했는지 금액으로 알려줘."", ""외국인 순매수 상위 5개 종목의 현재가와 등락률 보여줘."", ""오늘 투자신탁이 순매수한 종목들의 순매수 수량과 거래 대금 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/foreign_institution_total/foreign_institution_total.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/foreign_institution_total/chk_foreign_institution_total.py
domestic_stock,시세분석,종목별 일별 대차거래추이,REST,GET,/uapi/domestic-stock/v1/quotations/daily-loan-trans,국내주식-135,daily_loan_trans,"종목별 일별 대차거래추이 API입니다. 한 번의 조회에 최대 100건까지 조회 가능하며, start_date, end_date 를 수정하여 다음 조회가 가능합니다.","mrkt_div_cls_code (str): [필수] 조회구분 (ex. 1:코스피,2:코스닥,3:종목)
mksc_shrn_iscd (str): [필수] 종목코드 (ex. 123456)
start_date (str): 시작일자
end_date (str): 종료일자
cts (str): 이전조회KEY",pd.DataFrame: 종목별 일별 대차거래추이 데이터,"     df = daily_loan_trans(mrkt_div_cls_code=""1"", mksc_shrn_iscd=""005930"")
     print(df)","{
    'bsop_date': '일자',
    'stck_prpr': '주식 종가',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_vrss': '전일 대비',
    'prdy_ctrt': '전일 대비율',
    'acml_vol': '누적 거래량',
    'new_stcn': '당일 증가 주수 (체결)',
    'rdmp_stcn': '당일 감소 주수 (상환)',
    'prdy_rmnd_vrss': '대차거래 증감',
    'rmnd_stcn': '당일 잔고 주수',
    'rmnd_amt': '당일 잔고 금액'
}","[""삼성전자 일별 대차거래 추이 보여줘."", ""최근 SK하이닉스의 대차잔고가 어떻게 변했는지 궁금해."", ""어제 삼성전자 대차거래 상환 주수와 당일 잔고 주수 알려줘."", ""SK하이닉스의 대차거래 증감과 당일 잔고 금액 보여줘."", ""지난주 코스피 시장의 대차거래 추이 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/daily_loan_trans/daily_loan_trans.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/daily_loan_trans/chk_daily_loan_trans.py
domestic_stock,시세분석,시장별 투자자매매동향(일별),REST,GET,/uapi/domestic-stock/v1/quotations/inquire-investor-daily-by-market,국내주식-075,inquire_investor_daily_by_market,"시장별 투자자매매동향(일별) API입니다. 한국투자 HTS(eFriend Plus) > [0404] 시장별 일별동향 화면의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","fid_cond_mrkt_div_code (str): [필수] 조건 시장 분류 코드 (ex. U:업종)
fid_input_iscd (str): [필수] 입력 종목코드 (ex. 0001)
fid_input_date_1 (str): [필수] 입력 날짜1 (ex. 20250701)
fid_input_iscd_1 (str): [필수] 입력 종목코드 (ex. KSP:코스피, KSQ:코스닥)
fid_input_date_2 (str): [필수] 입력 날짜1과 동일날짜 입력
fid_input_iscd_2 (str): [필수] 입력 종목코드 (ex. 업종분류코드)",pd.DataFrame: 시장별 투자자매매동향(일별) 데이터,"     df = inquire_investor_daily_by_market(""U"", ""0001"", ""20250701"", ""KSP"", ""20250701"", ""0001"")
     print(df)","{
    'stck_bsop_date': '주식 영업 일자',
    'bstp_nmix_prpr': '업종 지수 현재가',
    'bstp_nmix_prdy_vrss': '업종 지수 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'bstp_nmix_prdy_ctrt': '업종 지수 전일 대비율',
    'bstp_nmix_oprc': '업종 지수 시가2',
    'bstp_nmix_hgpr': '업종 지수 최고가',
    'bstp_nmix_lwpr': '업종 지수 최저가',
    'stck_prdy_clpr': '주식 전일 종가',
    'frgn_ntby_qty': '외국인 순매수 수량',
    'frgn_reg_ntby_qty': '외국인 등록 순매수 수량',
    'frgn_nreg_ntby_qty': '외국인 비등록 순매수 수량',
    'prsn_ntby_qty': '개인 순매수 수량',
    'orgn_ntby_qty': '기관계 순매수 수량',
    'scrt_ntby_qty': '증권 순매수 수량',
    'ivtr_ntby_qty': '투자신탁 순매수 수량',
    'pe_fund_ntby_vol': '사모 펀드 순매수 거래량',
    'bank_ntby_qty': '은행 순매수 수량',
    'insu_ntby_qty': '보험 순매수 수량',
    'mrbn_ntby_qty': '종금 순매수 수량',
    'fund_ntby_qty': '기금 순매수 수량',
    'etc_ntby_qty': '기타 순매수 수량',
    'etc_orgt_ntby_vol': '기타 단체 순매수 거래량',
    'etc_corp_ntby_vol': '기타 법인 순매수 거래량',
    'frgn_ntby_tr_pbmn': '외국인 순매수 거래 대금',
    'frgn_reg_ntby_pbmn': '외국인 등록 순매수 대금',
    'frgn_nreg_ntby_pbmn': '외국인 비등록 순매수 대금',
    'prsn_ntby_tr_pbmn': '개인 순매수 거래 대금',
    'orgn_ntby_tr_pbmn': '기관계 순매수 거래 대금',
    'scrt_ntby_tr_pbmn': '증권 순매수 거래 대금',
    'ivtr_ntby_tr_pbmn': '투자신탁 순매수 거래 대금',
    'pe_fund_ntby_tr_pbmn': '사모 펀드 순매수 거래 대금',
    'bank_ntby_tr_pbmn': '은행 순매수 거래 대금',
    'insu_ntby_tr_pbmn': '보험 순매수 거래 대금',
    'mrbn_ntby_tr_pbmn': '종금 순매수 거래 대금',
    'fund_ntby_tr_pbmn': '기금 순매수 거래 대금',
    'etc_ntby_tr_pbmn': '기타 순매수 거래 대금',
    'etc_orgt_ntby_tr_pbmn': '기타 단체 순매수 거래 대금',
    'etc_corp_ntby_tr_pbmn': '기타 법인 순매수 거래 대금'
}","[""오늘 코스피 시장 투자자별 매매 동향 일별로 보여줘."", ""지난주 코스닥 시장에서 기관의 순매수 금액 추이가 어떻게 돼?"", ""어제 외국인이 코스피 시장에서 얼마를 순매수했는지 순매수 거래 대금 보여줘."", ""오늘 코스닥 시장에서 개인이 순매도한 금액 알려줘."", ""어제 증권사의 순매수 수량과 순매수 거래 대금 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_investor_daily_by_market/inquire_investor_daily_by_market.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_investor_daily_by_market/chk_inquire_investor_daily_by_market.py
domestic_stock,시세분석,프로그램매매 투자자매매동향(당일),REST,GET,/uapi/domestic-stock/v1/quotations/investor-program-trade-today,국내주식-116,investor_program_trade_today,"프로그램매매 투자자매매동향(당일) API입니다. 한국투자 HTS(eFriend Plus) > [0466] 프로그램매매 투자자별 동향 화면 의 ""당일동향"" 표의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","mrkt_div_cls_code (str): [필수] 시장 구분 코드 (ex. 1:코스피, 4:코스닥)",pd.DataFrame: 프로그램매매 투자자매매동향 데이터,"     df = investor_program_trade_today(mrkt_div_cls_code=""1"")
     print(df)","{
    'invr_cls_code': '투자자코드',
    'all_seln_qty': '전체매도수량',
    'all_seln_amt': '전체매도대금',
    'invr_cls_name': '투자자 구분 명',
    'all_shnu_qty': '전체매수수량',
    'all_shnu_amt': '전체매수대금',
    'all_ntby_amt': '전체순매수대금',
    'arbt_seln_qty': '차익매도수량',
    'all_ntby_qty': '전체순매수수량',
    'arbt_shnu_qty': '차익매수수량',
    'arbt_ntby_qty': '차익순매수수량',
    'arbt_seln_amt': '차익매도대금',
    'arbt_shnu_amt': '차익매수대금',
    'arbt_ntby_amt': '차익순매수대금',
    'nabt_seln_qty': '비차익매도수량',
    'nabt_shnu_qty': '비차익매수수량',
    'nabt_ntby_qty': '비차익순매수수량',
    'nabt_seln_amt': '비차익매도대금',
    'nabt_shnu_amt': '비차익매수대금',
    'nabt_ntby_amt': '비차익순매수대금'
}","[""오늘 코스피 시장에서 투자자별 프로그램 매매 동향이 어땠어?"", ""최근 코스닥 시장에서 기관의 비차익 순매수 금액 추이가 궁금해."", ""오늘 외국인의 차익거래 순매수 금액이 얼마야?"", ""코스닥 시장의 투자자별 전체순매수대금과 차익순매수대금 보여줘."", ""오늘 기관의 비차익매도수량과 비차익매수수량 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/investor_program_trade_today/investor_program_trade_today.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/investor_program_trade_today/chk_investor_program_trade_today.py
domestic_stock,업종/기타,종합 시황/공시(제목),REST,GET,/uapi/domestic-stock/v1/quotations/news-title,국내주식-141,news_title,[국내주식] 업종/기타 종합 시황_공시(제목)[국내주식-141] 종합 시황_공시(제목) API를 호출하여 DataFrame으로 반환합니다.,"fid_news_ofer_entp_code (str): 뉴스 제공 업체 코드
fid_cond_mrkt_cls_code (str): 조건 시장 구분 코드
fid_input_iscd (str): 입력 종목코드
fid_titl_cntt (str): 제목 내용
fid_input_date_1 (str): 입력 날짜
fid_input_hour_1 (str): 입력 시간
fid_rank_sort_cls_code (str): 순위 정렬 구분 코드
fid_input_srno (str): 입력 일련번호
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 종합 시황_공시(제목) 데이터,"     df = news_title(
         fid_news_ofer_entp_code='2',
         fid_cond_mrkt_cls_code='00',
         fid_input_iscd='005930',
         fid_titl_cntt='',
         fid_input_date_1='20231010',
         fid_input_hour_1='090000',
         fid_rank_sort_cls_code='01',
         fid_input_srno='1'
     )
     print(df)","{
    'output1': '응답상세',
    'cntt_usiq_srno': '내용 조회용 일련번호',
    'news_ofer_entp_code': '뉴스 제공 업체 코드',
    'data_dt': '작성일자',
    'data_tm': '작성시간',
    'hts_pbnt_titl_cntt': 'HTS 공시 제목 내용',
    'news_lrdv_code': '뉴스 대구분',
    'dorg': '자료원',
    'iscd1': '종목 코드1',
    'iscd2': '종목 코드2',
    'iscd3': '종목 코드3',
    'iscd4': '종목 코드4',
    'iscd5': '종목 코드5'
}","[""오늘 나온 삼성전자 관련 뉴스 제목들 보여줘."", ""최근 SK하이닉스 공시 제목 리스트가 궁금해."", ""오늘 아침 9시 이후에 나온 경제 뉴스 헤드라인을 보고 싶어."", ""삼성전자 관련 뉴스 제목과 작성 시간을 알려줘."", ""오늘 나온 공시 내용 중 '인수' 키워드가 들어간 제목 찾아줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/news_title/news_title.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/news_title/chk_news_title.py
domestic_stock,업종/기타,국내업종 현재지수,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-index-price,v1_국내주식-063,inquire_index_price,[국내주식] 업종/기타 국내업종 현재지수[v1_국내주식-063] 국내업종 현재지수 API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): 업종(U)
fid_input_iscd (str): 코스피(0001), 코스닥(1001), 코스피200(2001) ... 포탈 (FAQ : 종목정보 다운로드(국내) - 업종코드 참조)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 국내업종 현재지수 데이터,"     df = inquire_index_price(""U"", ""0001"")
     print(df)","{
    'bstp_nmix_prpr': '업종 지수 현재가',
    'bstp_nmix_prdy_vrss': '업종 지수 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'bstp_nmix_prdy_ctrt': '업종 지수 전일 대비율',
    'acml_vol': '누적 거래량',
    'prdy_vol': '전일 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'prdy_tr_pbmn': '전일 거래 대금',
    'bstp_nmix_oprc': '업종 지수 시가2',
    'prdy_nmix_vrss_nmix_oprc': '전일 지수 대비 지수 시가2',
    'oprc_vrss_prpr_sign': '시가2 대비 현재가 부호',
    'bstp_nmix_oprc_prdy_ctrt': '업종 지수 시가2 전일 대비율',
    'bstp_nmix_hgpr': '업종 지수 최고가',
    'prdy_nmix_vrss_nmix_hgpr': '전일 지수 대비 지수 최고가',
    'hgpr_vrss_prpr_sign': '최고가 대비 현재가 부호',
    'bstp_nmix_hgpr_prdy_ctrt': '업종 지수 최고가 전일 대비율',
    'bstp_nmix_lwpr': '업종 지수 최저가',
    'prdy_clpr_vrss_lwpr': '전일 종가 대비 최저가',
    'lwpr_vrss_prpr_sign': '최저가 대비 현재가 부호',
    'prdy_clpr_vrss_lwpr_rate': '전일 종가 대비 최저가 비율',
    'ascn_issu_cnt': '상승 종목 수',
    'uplm_issu_cnt': '상한 종목 수',
    'stnr_issu_cnt': '보합 종목 수',
    'down_issu_cnt': '하락 종목 수',
    'lslm_issu_cnt': '하한 종목 수',
    'dryy_bstp_nmix_hgpr': '연중업종지수최고가',
    'dryy_hgpr_vrss_prpr_rate': '연중 최고가 대비 현재가 비율',
    'dryy_bstp_nmix_hgpr_date': '연중업종지수최고가일자',
    'dryy_bstp_nmix_lwpr': '연중업종지수최저가',
    'dryy_lwpr_vrss_prpr_rate': '연중 최저가 대비 현재가 비율',
    'dryy_bstp_nmix_lwpr_date': '연중업종지수최저가일자',
    'total_askp_rsqn': '총 매도호가 잔량',
    'total_bidp_rsqn': '총 매수호가 잔량',
    'seln_rsqn_rate': '매도 잔량 비율',
    'shnu_rsqn_rate': '매수2 잔량 비율',
    'ntby_rsqn': '순매수 잔량'
}","[""코스피 지수 현재 얼마야?"", ""오늘 코스닥 지수가 어떻게 움직였는지 궁금해."", ""오늘 코스피 시장에서 상승한 종목 수와 하락한 종목 수 알려줘."", ""코스피200 지수의 연중최고가와 연중최저가 알려줘."", ""오늘 코스닥의 누적 거래량과 누적 거래 대금 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_index_price/inquire_index_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_index_price/chk_inquire_index_price.py
domestic_stock,업종/기타,국내휴장일조회,REST,GET,/uapi/domestic-stock/v1/quotations/chk-holiday,국내주식-040,chk_holiday,"(★중요) 국내휴장일조회(TCA0903R) 서비스는 당사 원장서비스와 연관되어 있어 단시간 내 다수 호출시 서비스에 영향을 줄 수 있어 가급적 1일 1회 호출 부탁드립니다. 국내휴장일조회 API입니다. 영업일, 거래일, 개장일, 결제일 여부를 조회할 수 있습니다. 주문을 넣을 수 있는지 확인하고자 하실 경우 개장일여부(opnd_yn)을 사용하시면 됩니다.","bass_dt (str): [필수] 기준일자 (ex. YYYYMMDD)
NK100 (str): 연속조회키
FK100 (str): 연속조회검색조건
tr_cont (str): 연속거래여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한",pd.DataFrame: 국내휴장일조회 데이터,"     df = chk_holiday(bass_dt=""20250630"")
     print(df)","{
    'bass_dt': '기준일자',
    'wday_dvsn_cd': '요일구분코드',
    'bzdy_yn': '영업일여부',
    'tr_day_yn': '거래일여부',
    'opnd_yn': '개장일여부',
    'sttl_day_yn': '결제일여부'
}","[""오늘 주식시장 휴장일이야?"", ""이번달 주식시장 쉬는 날이 언제언제인지 알려줘."", ""내일 주식 거래 가능한지 개장일여부 확인해줘."", ""이번주 영업일이랑 거래일 알려줘."", ""오늘 결제일여부 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/chk_holiday/chk_holiday.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/chk_holiday/chk_chk_holiday.py
domestic_stock,업종/기타,국내주식업종기간별시세(일/주/월/년),REST,GET,/uapi/domestic-stock/v1/quotations/inquire-daily-indexchartprice,v1_국내주식-021,inquire_daily_indexchartprice,[국내주식] 업종/기타 국내주식업종기간별시세(일_주_월_년)[v1_국내주식-021] 국내주식업종기간별시세(일_주_월_년) API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): 업종 : U
fid_input_iscd (str): 0001 : 종합 0002 : 대형주 ... 포탈 (FAQ : 종목정보 다운로드(국내) - 업종코드 참조)
fid_input_date_1 (str): 조회 시작일자 (ex. 20220501)
fid_input_date_2 (str): 조회 종료일자 (ex. 20220530)
fid_period_div_code (str): D:일봉 W:주봉, M:월봉, Y:년봉
env_dv (str): [추가] 실전모의구분 (real:실전, demo:모의, 기본값: 'real')
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 국내주식업종기간별시세(일_주_월_년) 데이터","     df1, df2 = inquire_daily_indexchartprice(
         fid_cond_mrkt_div_code=""U"",
         fid_input_iscd=""0001"",
         fid_input_date_1=""20220501"",
         fid_input_date_2=""20220530"",
         fid_period_div_code=""D"",
         env_dv=""real""  # 실전투자
     )
     df1, df2 = inquire_daily_indexchartprice(
         fid_cond_mrkt_div_code=""U"",
         fid_input_iscd=""0001"",
         fid_input_date_1=""20220501"",
         fid_input_date_2=""20220530"",
         fid_period_div_code=""D"",
         env_dv=""demo""  # 모의투자
     )
     print(df1)
     print(df2)","{
    'bstp_nmix_prdy_vrss': '업종 지수 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'bstp_nmix_prdy_ctrt': '업종 지수 전일 대비율',
    'prdy_nmix': '전일 지수',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'bstp_nmix_prpr': '업종 지수 현재가',
    'bstp_cls_code': '업종 구분 코드',
    'prdy_vol': '전일 거래량',
    'bstp_nmix_oprc': '업종 지수 시가',
    'bstp_nmix_hgpr': '업종 지수 최고가',
    'bstp_nmix_lwpr': '업종 지수 최저가',
    'futs_prdy_oprc': '업종 전일 시가',
    'futs_prdy_hgpr': '업종 전일 최고가',
    'futs_prdy_lwpr': '업종 전일 최저가',
    'stck_bsop_date': '영업 일자',
    'bstp_nmix_prpr': '업종 지수 현재가',
    'bstp_nmix_oprc': '업종 지수 시가',
    'bstp_nmix_hgpr': '업종 지수 최고가',
    'bstp_nmix_lwpr': '업종 지수 최저가',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'mod_yn': '변경 여부'
}","[""코스피 지수 일봉 데이터 보여줘."", ""코스닥 지수 주봉 차트가 궁금해."", ""작년 코스피 지수가 가장 높았을 때와 그때의 누적 거래 대금 알려줘."", ""코스닥 지수의 최근 20일 이격도 보여줘."", ""올해 월봉 데이터로 코스피 지수 시가, 고가, 저가, 종가 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_indexchartprice/inquire_daily_indexchartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_indexchartprice/chk_inquire_daily_indexchartprice.py
domestic_stock,업종/기타,업종 분봉조회,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-time-indexchartprice,v1_국내주식-045,inquire_time_indexchartprice,[국내주식] 업종/기타 업종 분봉조회[v1_국내주식-045] 업종 분봉조회 API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): FID 조건 시장 분류 코드 (예: 'U')
fid_etc_cls_code (str): FID 기타 구분 코드 (예: '0' 기본, '1' 장마감, 시간외 제외)
fid_input_iscd (str): FID 입력 종목코드 (예: '0001' 종합, '0002' 대형주)
fid_input_hour_1 (str): FID 입력 시간1 (예: '30', '60', '600', '3600')
fid_pw_data_incu_yn (str): FID 과거 데이터 포함 여부 (예: 'Y' 과거, 'N' 당일)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 업종 분봉조회 데이터","     df1, df2 = inquire_time_indexchartprice(
         fid_cond_mrkt_div_code='U',
         fid_etc_cls_code='0',
         fid_input_iscd='0001',
         fid_input_hour_1='30',
         fid_pw_data_incu_yn='Y'
     )
     print(df1)
     print(df2)","{
    'Output1': '응답상세',
    'bstp_nmix_prdy_vrss': '업종 지수 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'bstp_nmix_prdy_ctrt': '업종 지수 전일 대비율',
    'prdy_nmix': '전일 지수',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'bstp_nmix_prpr': '업종 지수 현재가',
    'bstp_cls_code': '업종 구분 코드',
    'prdy_vol': '전일 거래량',
    'bstp_nmix_oprc': '업종 지수 시가2',
    'bstp_nmix_hgpr': '업종 지수 최고가',
    'bstp_nmix_lwpr': '업종 지수 최저가',
    'futs_prdy_oprc': '선물 전일 시가',
    'futs_prdy_hgpr': '선물 전일 최고가',
    'futs_prdy_lwpr': '선물 전일 최저가',
    'Output2': '응답상세2',
    'stck_bsop_date': '주식 영업 일자',
    'stck_cntg_hour': '주식 체결 시간',
    'bstp_nmix_prpr': '업종 지수 현재가',
    'bstp_nmix_oprc': '업종 지수 시가2',
    'bstp_nmix_hgpr': '업종 지수 최고가',
    'bstp_nmix_lwpr': '업종 지수 최저가',
    'cntg_vol': '체결 거래량',
    'acml_tr_pbmn': '누적 거래 대금'
}","[""코스피 지수 30분봉 차트 보여줘."", ""오늘 코스닥 지수 분봉 흐름이 어땠는지 궁금해."", ""오늘 오전 10시에 코스피 지수와 체결 거래량 알려줘."", ""코스닥 지수의 오늘 시가, 고가, 저가, 현재가 보여줘."", ""오늘 코스피 지수의 누적 거래 대금 분봉으로 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_time_indexchartprice/inquire_time_indexchartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_time_indexchartprice/chk_inquire_time_indexchartprice.py
domestic_stock,업종/기타,변동성완화장치(VI) 현황,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-vi-status,v1_국내주식-055,inquire_vi_status,[국내주식] 업종/기타 변동성완화장치(VI) 현황[v1_국내주식-055] 변동성완화장치(VI) 현황 API를 호출하여 DataFrame으로 반환합니다.,"fid_div_cls_code (str): 0:전체 1:상승 2:하락
fid_cond_scr_div_code (str): 20139
fid_mrkt_cls_code (str): 0:전체 K:거래소 Q:코스닥
fid_input_iscd (str): 종목코드
fid_rank_sort_cls_code (str): 0:전체 1:정적 2:동적 3:정적&동적
fid_input_date_1 (str): 영업일
fid_trgt_cls_code (str): 대상 구분 코드
fid_trgt_exls_cls_code (str): 대상 제외 구분 코드
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 변동성완화장치(VI) 현황 데이터,"     df = inquire_vi_status(
         fid_div_cls_code=""0"",
         fid_cond_scr_div_code=""20139"",
         fid_mrkt_cls_code=""0"",
         fid_input_iscd=""005930"",
         fid_rank_sort_cls_code=""0"",
         fid_input_date_1=""20240126"",
         fid_trgt_cls_code="""",
         fid_trgt_exls_cls_code=""""
     )
     print(df)","{
    'Output1': '응답상세',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'mksc_shrn_iscd': '유가증권 단축 종목코드',
    'vi_cls_code': 'VI발동상태',
    'bsop_date': '영업 일자',
    'cntg_vi_hour': 'VI발동시간',
    'vi_cncl_hour': 'VI해제시간',
    'vi_kind_code': 'VI종류코드',
    'vi_prc': 'VI발동가격',
    'vi_stnd_prc': '정적VI발동기준가격',
    'vi_dprt': '정적VI발동괴리율',
    'vi_dmc_stnd_prc': '동적VI발동기준가격',
    'vi_dmc_dprt': '동적VI발동괴리율',
    'vi_count': 'VI발동횟수'
}","[""오늘 VI 발동된 종목 리스트 보여줘."", ""삼성전자가 오늘 변동성완화장치에 걸렸었는지 궁금해."", ""오늘 하락 VI가 발동된 종목과 VI발동시간 알려줘."", ""코스닥에서 오늘 정적 VI가 발동된 종목 리스트 보여줘."", ""오늘 VI 발동 횟수가 가장 많았던 종목 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_vi_status/inquire_vi_status.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_vi_status/chk_inquire_vi_status.py
domestic_stock,업종/기타,국내업종 일자별지수,REST,GET,/uapi/domestic-stock/v1/quotations/inquire-index-daily-price,v1_국내주식-065,inquire_index_daily_price,[국내주식] 업종/기타 국내업종 일자별지수[v1_국내주식-065] 국내업종 일자별지수 API를 호출하여 DataFrame으로 반환합니다.,"fid_period_div_code (str): 일/주/월 구분코드 ( D:일별 , W:주별, M:월별 )
fid_cond_mrkt_div_code (str): 시장구분코드 (업종 U)
fid_input_iscd (str): 코스피(0001), 코스닥(1001), 코스피200(2001) ... 포탈 (FAQ : 종목정보 다운로드(국내) - 업종코드 참조)
fid_input_date_1 (str): 입력 날짜(ex. 20240223)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 국내업종 일자별지수 데이터","     df1, df2 = inquire_index_daily_price('D', 'U', '0001', '20240223')
     print(df1)
     print(df2)","{
    'bstp_nmix_prpr': '업종 지수 현재가',
    'bstp_nmix_prdy_vrss': '업종 지수 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'bstp_nmix_prdy_ctrt': '업종 지수 전일 대비율',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'bstp_nmix_oprc': '업종 지수 시가2',
    'bstp_nmix_hgpr': '업종 지수 최고가',
    'bstp_nmix_lwpr': '업종 지수 최저가',
    'prdy_vol': '전일 거래량',
    'ascn_issu_cnt': '상승 종목 수',
    'down_issu_cnt': '하락 종목 수',
    'stnr_issu_cnt': '보합 종목 수',
    'uplm_issu_cnt': '상한 종목 수',
    'lslm_issu_cnt': '하한 종목 수',
    'prdy_tr_pbmn': '전일 거래 대금',
    'dryy_bstp_nmix_hgpr_date': '연중업종지수최고가일자',
    'dryy_bstp_nmix_hgpr': '연중업종지수최고가',
    'dryy_bstp_nmix_lwpr': '연중업종지수최저가',
    'dryy_bstp_nmix_lwpr_date': '연중업종지수최저가일자',
    'stck_bsop_date': '주식 영업 일자',
    'bstp_nmix_prpr': '업종 지수 현재가',
    'prdy_vrss_sign': '전일 대비 부호',
    'bstp_nmix_prdy_vrss': '업종 지수 전일 대비',
    'bstp_nmix_prdy_ctrt': '업종 지수 전일 대비율',
    'bstp_nmix_oprc': '업종 지수 시가2',
    'bstp_nmix_hgpr': '업종 지수 최고가',
    'bstp_nmix_lwpr': '업종 지수 최저가',
    'acml_vol_rlim': '누적 거래량 비중',
    'acml_vol': '누적 거래량',
    'acml_tr_pbmn': '누적 거래 대금',
    'invt_new_psdg': '투자 신 심리도',
    'd20_dsrt': '20일 이격도'
}","[""코스피 지수 일별 데이터 보여줘."", ""코스닥 지수 최근 30일치 데이터가 궁금해."", ""어제 코스피 지수 종가와 누적 거래 대금 알려줘."", ""코스닥 시장의 투자 신 심리도와 20일 이격도 알려줘."", ""지난주 코스피 지수의 일별 시가, 고가, 저가, 종가 데이터 줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_index_daily_price/inquire_index_daily_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_index_daily_price/chk_inquire_index_daily_price.py
domestic_stock,종목정보,상품기본조회,REST,GET,/uapi/domestic-stock/v1/quotations/search-info,v1_국내주식-029,search_info,[국내주식] 종목정보 상품기본조회[v1_국내주식-029] 상품기본조회 API를 호출하여 DataFrame으로 반환합니다.,"pdno (str): 상품번호 (예: '000660', 'KR4101SC0009', 'AAPL')
prdt_type_cd (str): 상품유형코드 (예: '300', '301', '512')
tr_cont (str): 연속 거래 여부 (기본값: 공백)
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 상품기본조회 데이터,"     df = search_info('AAPL', '512')
     print(df)","{
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'std_pdno': '표준상품번호',
    'shtn_pdno': '단축상품번호',
    'prdt_sale_stat_cd': '상품판매상태코드',
    'prdt_risk_grad_cd': '상품위험등급코드',
    'prdt_clsf_cd': '상품분류코드',
    'sale_strt_dt': '판매시작일자',
    'sale_end_dt': '판매종료일자',
    'wrap_asst_type_cd': '랩어카운트자산유형코드',
    'ivst_prdt_type_cd': '투자상품유형코드',
    'frst_erlm_dt': '최초등록일자'
}","[""SK하이닉스 종목의 기본 정보 알려줘."", ""삼성전자우의 상품 유형 코드가 뭐야?"", ""애플(AAPL)의 상품 기본 정보 조회해줘."", ""이 종목이 어떤 상품으로 분류되어 있는지 상품분류코드 알려줘."", ""SK하이닉스의 최초등록일자 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/search_info/search_info.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/search_info/chk_search_info.py
domestic_stock,종목정보,주식기본조회,REST,GET,/uapi/domestic-stock/v1/quotations/search-stock-info,v1_국내주식-067,search_stock_info,[국내주식] 종목정보 주식기본조회[v1_국내주식-067] 주식기본조회 API를 호출하여 DataFrame으로 반환합니다.,"prdt_type_cd (str): 300: 주식, ETF, ETN, ELW  301 : 선물옵션  302 : 채권  306 : ELS'
pdno (str): 종목번호 (6자리) ETN의 경우, Q로 시작 (EX. Q500001)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 주식기본조회 데이터,"     df = search_stock_info(""300"", ""000660"")
     print(df)","{
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'prdt_name': '상품명',
    'prdt_name120': '상품명(120자)',
    'prdt_abrv_name': '상품약어명',
    'prdt_eng_name': '상품영문명',
    'prdt_eng_name120': '상품영문명(120자)',
    'prdt_eng_abrv_name': '상품영문약어명',
    'mket_id_cd': '시장ID코드',
    'scty_grp_id_cd': '증권그룹ID코드',
    'excg_dvsn_cd': '거래소구분코드',
    'setl_mmdd': '결산월일',
    'lstg_stqt': '상장주수',
    'lstg_cptl_amt': '상장자본금액',
    'cpta': '자본금',
    'papr': '액면가',
    'issu_pric': '발행가격',
    'kospi200_item_yn': '코스피200종목여부',
    'scts_mket_lstg_dt': '유가증권시장상장일자',
    'scts_mket_lstg_abol_dt': '유가증권시장상장폐지일자',
    'kosdaq_mket_lstg_dt': '코스닥시장상장일자',
    'kosdaq_mket_lstg_abol_dt': '코스닥시장상장폐지일자',
    'frbd_mket_lstg_dt': '프리보드시장상장일자',
    'frbd_mket_lstg_abol_dt': '프리보드시장상장폐지일자',
    'reits_kind_cd': '리츠종류코드',
    'etf_dvsn_cd': 'ETF구분코드',
    'oilf_fund_yn': '유전펀드여부',
    'idx_bztp_lcls_cd': '지수업종대분류코드',
    'idx_bztp_mcls_cd': '지수업종중분류코드',
    'idx_bztp_scls_cd': '지수업종소분류코드',
    'idx_bztp_lcls_cd_name': '지수업종대분류코드명',
    'idx_bztp_mcls_cd_name': '지수업종중분류코드명',
    'idx_bztp_scls_cd_name': '지수업종소분류코드명',
    'stck_kind_cd': '주식종류코드',
    'mfnd_opng_dt': '뮤추얼펀드개시일자',
    'mfnd_end_dt': '뮤추얼펀드종료일자',
    'dpsi_erlm_cncl_dt': '예탁등록취소일자',
    'etf_cu_qty': 'ETFCU수량',
    'std_pdno': '표준상품번호',
    'dpsi_aptm_erlm_yn': '예탁지정등록여부',
    'etf_txtn_type_cd': 'ETF과세유형코드',
    'etf_type_cd': 'ETF유형코드',
    'lstg_abol_dt': '상장폐지일자',
    'nwst_odst_dvsn_cd': '신주구주구분코드',
    'sbst_pric': '대용가격',
    'thco_sbst_pric': '당사대용가격',
    'thco_sbst_pric_chng_dt': '당사대용가격변경일자',
    'tr_stop_yn': '거래정지여부',
    'admn_item_yn': '관리종목여부',
    'thdt_clpr': '당일종가',
    'bfdy_clpr': '전일종가',
    'clpr_chng_dt': '종가변경일자',
    'std_idst_clsf_cd': '표준산업분류코드',
    'std_idst_clsf_cd_name': '표준산업분류코드명',
    'ocr_no': 'OCR번호',
    'crfd_item_yn': '크라우드펀딩종목여부',
    'elec_scty_yn': '전자증권여부',
    'issu_istt_cd': '발행기관코드',
    'etf_chas_erng_rt_dbnb': 'ETF추적수익율배수',
    'etf_etn_ivst_heed_item_yn': 'ETFETN투자유의종목여부',
    'stln_int_rt_dvsn_cd': '대주이자율구분코드',
    'frnr_psnl_lmt_rt': '외국인개인한도비율',
    'lstg_rqsr_issu_istt_cd': '상장신청인발행기관코드',
    'lstg_rqsr_item_cd': '상장신청인종목코드',
    'trst_istt_issu_istt_cd': '신탁기관발행기관코드',
    'cptt_trad_tr_psbl_yn': 'NXT 거래종목여부',
    'nxt_tr_stop_yn': 'NXT 거래정지여부'
}","[""SK하이닉스 종목의 상세 정보 알려줘."", ""삼성전자의 영문 종목명이 뭐야?"", ""KODEX 200 ETF의 상세 정보 조회해줘."", ""이 종목의 상장일이 언제야?"", ""SK하이닉스의 지수업종대분류코드명 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/search_stock_info/search_stock_info.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/search_stock_info/chk_search_stock_info.py
domestic_stock,주문/계좌,주식잔고조회,REST,GET,/uapi/domestic-stock/v1/trading/inquire-balance,v1_국내주식-006,inquire_balance,"주식 잔고조회 API입니다. 실전계좌의 경우, 한 번의 호출에 최대 50건까지 확인 가능하며, 이후의 값은 연속조회를 통해 확인하실 수 있습니다. 모의계좌의 경우, 한 번의 호출에 최대 20건까지 확인 가능하며, 이후의 값은 연속조회를 통해 확인하실 수 있습니다. * 당일 전량매도한 잔고도 보유수량 0으로 보여질 수 있으나, 해당 보유수량 0인 잔고는 최종 D-2일 이후에는 잔고에서 사라집니다.","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
cano (str): [필수] 종합계좌번호 (ex. 계좌번호 체계(8-2)의 앞 8자리)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 계좌번호 체계(8-2)의 뒤 2자리)
afhr_flpr_yn (str): [필수] 시간외단일가·거래소여부 (ex. N:기본값, Y:시간외단일가, X:NXT)
inqr_dvsn (str): [필수] 조회구분 (ex. 01 – 대출일별 | 02 – 종목별)
unpr_dvsn (str): [필수] 단가구분 (ex. 01)
fund_sttl_icld_yn (str): [필수] 펀드결제분포함여부 (ex. N, Y)
fncg_amt_auto_rdpt_yn (str): [필수] 융자금액자동상환여부 (ex. N)
prcs_dvsn (str): [필수] 처리구분 (ex. 00: 전일매매포함, 01:전일매매미포함)
FK100 (str): 연속조회검색조건100
NK100 (str): 연속조회키100
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: 주식잔고조회 데이터 (output1, output2)","     df1, df2 = inquire_balance(env_dv=""real"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, afhr_flpr_yn=""N"", inqr_dvsn=""01"", unpr_dvsn=""01"", fund_sttl_icld_yn=""N"", fncg_amt_auto_rdpt_yn=""N"", prcs_dvsn=""00"")
     print(df1)
     print(df2)","{
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'trad_dvsn_name': '매매구분명',
    'bfdy_buy_qty': '전일매수수량',
    'bfdy_sll_qty': '전일매도수량',
    'thdt_buyqty': '금일매수수량',
    'thdt_sll_qty': '금일매도수량',
    'hldg_qty': '보유수량',
    'ord_psbl_qty': '주문가능수량',
    'pchs_avg_pric': '매입평균가격',
    'pchs_amt': '매입금액',
    'prpr': '현재가',
    'evlu_amt': '평가금액',
    'evlu_pfls_amt': '평가손익금액',
    'evlu_pfls_rt': '평가손익율',
    'evlu_erng_rt': '평가수익율',
    'loan_dt': '대출일자',
    'loan_amt': '대출금액',
    'stln_slng_chgs': '대주매각대금',
    'expd_dt': '만기일자',
    'fltt_rt': '등락율',
    'bfdy_cprs_icdc': '전일대비증감',
    'item_mgna_rt_name': '종목증거금율명',
    'grta_rt_name': '보증금율명',
    'sbst_pric': '대용가격',
    'stck_loan_unpr': '주식대출단가',
    'dnca_tot_amt': '예수금총금액',
    'nxdy_excc_amt': '익일정산금액',
    'prvs_rcdl_excc_amt': '가수도정산금액',
    'cma_evlu_amt': 'CMA평가금액',
    'bfdy_buy_amt': '전일매수금액',
    'thdt_buy_amt': '금일매수금액',
    'nxdy_auto_rdpt_amt': '익일자동상환금액',
    'bfdy_sll_amt': '전일매도금액',
    'thdt_sll_amt': '금일매도금액',
    'd2_auto_rdpt_amt': 'D+2자동상환금액',
    'bfdy_tlex_amt': '전일제비용금액',
    'thdt_tlex_amt': '금일제비용금액',
    'tot_loan_amt': '총대출금액',
    'scts_evlu_amt': '유가평가금액',
    'tot_evlu_amt': '총평가금액',
    'nass_amt': '순자산금액',
    'fncg_gld_auto_rdpt_yn': '융자금자동상환여부',
    'pchs_amt_smtl_amt': '매입금액합계금액',
    'evlu_amt_smtl_amt': '평가금액합계금액',
    'evlu_pfls_smtl_amt': '평가손익합계금액',
    'tot_stln_slng_chgs': '총대주매각대금',
    'bfdy_tot_asst_evlu_amt': '전일총자산평가금액',
    'asst_icdc_amt': '자산증감액',
    'asst_icdc_erng_rt': '자산증감수익율'
}","[""내 주식 계좌 잔고 보여줘."", ""내가 가진 종목들 수익률 좀 확인하고 싶어."", ""내 계좌의 총 평가금액과 순자산금액을 알려줘."", ""내가 보유한 삼성전자의 주문가능수량 알려줘."", ""내 계좌의 총대출금액과 평가손익합계금액 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_balance/inquire_balance.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_balance/chk_inquire_balance.py
domestic_stock,주문/계좌,주식일별주문체결조회,REST,GET,/uapi/domestic-stock/v1/trading/inquire-daily-ccld,v1_국내주식-005,inquire_daily_ccld,"주식일별주문체결조회 API입니다. 실전계좌의 경우, 한 번의 호출에 최대 100건까지 확인 가능하며, 이후의 값은 연속조회를 통해 확인하실 수 있습니다. 모의계좌의 경우, 한 번의 호출에 최대 15건까지 확인 가능하며, 이후의 값은 연속조회를 통해 확인하실 수 있습니다. * 다만, 3개월 이전 체결내역 조회(CTSC9115R) 의 경우, 장중에는 많은 거래량으로 인해 순간적으로 DB가 밀렸거나 응답을 늦게 받거나 하는 등의 이슈가 있을 수 있어 ① 가급적 장 종료 이후(15:30 이후) 조회하시고 ② 조회기간(INQR_STRT_DT와 INQR_END_DT 사이의 간격)을 보다 짧게 해서 조회하는 것을 권유드립니다.","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
pd_dv (str): [필수] 3개월이전이내구분 (ex. before:이전, inner:이내)
cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드
inqr_strt_dt (str): [필수] 조회시작일자
inqr_end_dt (str): [필수] 조회종료일자
sll_buy_dvsn_cd (str): [필수] 매도매수구분코드 (ex. 00 : 전체 / 01 : 매도 / 02 : 매수)
pdno (str): 상품번호
ccld_dvsn (str): [필수] 체결구분 (ex. 00 전체 / 01 체결 / 02 미체결)
inqr_dvsn (str): [필수] 조회구분 (ex. 00 역순 / 01 정순)
inqr_dvsn_3 (str): [필수] 조회구분3 (ex. 00 전체 / 01 현금 / 02 신용 / 03 담보 / 04 대주 / 05 대여 / 06 자기융자신규/상환 / 07 유통융자신규/상환)
ord_gno_brno (str): 주문채번지점번호
odno (str): 주문번호 (ex. 주문시 한국투자증권 시스템에서 채번된 주문번호)
inqr_dvsn_1 (str): 조회구분1 (ex. 없음: 전체 / 1: ELW / 2: 프리보드)
FK100 (str): 연속조회검색조건100 (ex. 공란: 최초 조회 / 이전 조회 Output 사용)
NK100 (str): 연속조회키100 (ex. 공란: 최초 조회 / 이전 조회 Output 사용)
tr_cont (str): 연속거래여부
excg_id_dvsn_cd (Optional[str]): 거래소ID구분코드 (ex. KRX / NXT / SOR / ALL)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터프레임, output2 데이터프레임)","     df1, df2 = inquire_daily_ccld(
         env_dv=""real"", pd_dv=""inner"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod,
         inqr_strt_dt=""20220810"", inqr_end_dt=""20220810"", 
         sll_buy_dvsn_cd=""00"", pdno=""005930"", ccld_dvsn=""00"", 
         inqr_dvsn=""00"", inqr_dvsn_3=""00""
     )
     print(df1)
     print(df2)","{
    'ord_dt': '주문일자',
    'ord_gno_brno': '주문채번지점번호',
    'odno': '주문번호',
    'orgn_odno': '원주문번호',
    'ord_dvsn_name': '주문구분명',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'sll_buy_dvsn_cd_name': '매도매수구분코드명',
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'ord_qty': '주문수량',
    'ord_unpr': '주문단가',
    'ord_tmd': '주문시각',
    'tot_ccld_qty': '총체결수량',
    'avg_prvs': '평균가',
    'cncl_yn': '취소여부',
    'tot_ccld_amt': '총체결금액',
    'loan_dt': '대출일자',
    'ordr_empno': '주문자사번',
    'ord_dvsn_cd': '주문구분코드',
    'cnc_cfrm_qty': '취소확인수량',
    'rmn_qty': '잔여수량',
    'rjct_qty': '거부수량',
    'ccld_cndt_name': '체결조건명',
    'inqr_ip_addr': '조회IP주소',
    'cpbc_ordp_ord_rcit_dvsn_cd': '전산주문표주문접수구분코드',
    'cpbc_ordp_infm_mthd_dvsn_cd': '전산주문표통보방법구분코드',
    'infm_tmd': '통보시각',
    'ctac_tlno': '연락전화번호',
    'prdt_type_cd': '상품유형코드',
    'excg_dvsn_cd': '거래소구분코드',
    'cpbc_ordp_mtrl_dvsn_cd': '전산주문표자료구분코드',
    'ord_orgno': '주문조직번호',
    'rsvn_ord_end_dt': '예약주문종료일자',
    'excg_id_dvsn_Cd': '거래소ID구분코드',
    'stpm_cndt_pric': '스톱지정가조건가격',
    'stpm_efct_occr_dtmd': '스톱지정가효력발생상세시각',
    'tot_ord_qty': '총주문수량',
    'tot_ccld_qty': '총체결수량',
    'tot_ccld_amt': '매입평균가격',
    'prsm_tlex_smtl': '총체결금액',
    'pchs_avg_pric': '추정제비용합계'
}","[""내 계좌 오늘 주문 체결 내역 보여줘."", ""지난주에 내가 매도한 내역만 조회하고 싶어."", ""내가 어제 판 삼성전자 평균 체결가와 총체결금액 알려줘."", ""오늘 내가 주문한 내역의 주문구분명과 총체결수량 보여줘."", ""3개월 이내 내 계좌의 모든 주문 내역을 역순으로 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_ccld/inquire_daily_ccld.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_daily_ccld/chk_inquire_daily_ccld.py
domestic_stock,주문/계좌,주식정정취소가능주문조회,REST,GET,/uapi/domestic-stock/v1/trading/inquire-psbl-rvsecncl,v1_국내주식-004,inquire_psbl_rvsecncl,"주식정정취소가능주문조회 API입니다. 한 번의 호출에 최대 50건까지 확인 가능하며, 이후의 값은 연속조회를 통해 확인하실 수 있습니다. ※ 주식주문(정정취소) 호출 전에 반드시 주식정정취소가능주문조회 호출을 통해 정정취소가능수량(output > psbl_qty)을 확인하신 후 정정취소주문 내시기 바랍니다.","cano (str): [필수] 종합계좌번호 (ex. 계좌번호 체계(8-2)의 앞 8자리)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 계좌번호 체계(8-2)의 뒤 2자리)
inqr_dvsn_1 (str): [필수] 조회구분1 (ex. 0: 주문, 1: 종목)
inqr_dvsn_2 (str): [필수] 조회구분2 (ex. 0: 전체, 1: 매도, 2: 매수)
FK100 (str): 연속조회검색조건100
NK100 (str): 연속조회키100
tr_cont (str): 연속거래여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한",pd.DataFrame: 주식정정취소가능주문조회 데이터,"     df = inquire_psbl_rvsecncl(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, inqr_dvsn_1=""1"", inqr_dvsn_2=""0"")
     print(df)","{
    'ord_gno_brno': '주문채번지점번호',
    'odno': '주문번호',
    'orgn_odno': '원주문번호',
    'ord_dvsn_name': '주문구분명',
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'rvse_cncl_dvsn_name': '정정취소구분명',
    'ord_qty': '주문수량',
    'ord_unpr': '주문단가',
    'ord_tmd': '주문시각',
    'tot_ccld_qty': '총체결수량',
    'tot_ccld_amt': '총체결금액',
    'psbl_qty': '가능수량',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'ord_dvsn_cd': '주문구분코드',
    'mgco_aptm_odno': '운용사지정주문번호',
    'excg_dvsn_cd': '거래소구분코드',
    'excg_id_dvsn_cd': '거래소ID구분코드',
    'excg_id_dvsn_name': '거래소ID구분명',
    'stpm_cndt_pric': '스톱지정가조건가격',
    'stpm_efct_occr_yn': '스톱지정가효력발생여부'
}","[""내가 정정이나 취소할 수 있는 주문 목록 보여줘."", ""아직 체결 안된 내 주문들만 보고 싶어."", ""내가 오전에 낸 삼성전자 매수 주문의 주문번호와 주문수량 알려줘."", ""내 미체결 주문들의 정정취소구분명과 가능수량 보여줘."", ""내 계좌의 모든 미체결 주문을 종목별로 정렬해서 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_psbl_rvsecncl/inquire_psbl_rvsecncl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_psbl_rvsecncl/chk_inquire_psbl_rvsecncl.py
domestic_stock,주문/계좌,매수가능조회,REST,GET,/uapi/domestic-stock/v1/trading/inquire-psbl-order,v1_국내주식-007,inquire_psbl_order,"매수가능 조회 API입니다. 실전계좌/모의계좌의 경우, 한 번의 호출에 최대 1건까지 확인 가능합니다. 1) 매수가능금액 확인 . 미수 사용 X: nrcvb_buy_amt(미수없는매수금액) 확인 . 미수 사용 O: max_buy_amt(최대매수금액) 확인 2) 매수가능수량 확인 . 특정 종목 전량매수 시 가능수량을 확인하실 경우 ORD_DVSN:00(지정가)는 종목증거금율이 반영되지 않습니다. 따라서 ""반드시"" ORD_DVSN:01(시장가)로 지정하여 종목증거금율이 반영된 가능수량을 확인하시기 바랍니다. (다만, 조건부지정가 등 특정 주문구분(ex.IOC)으로 주문 시 가능수량을 확인할 경우 주문 시와 동일한 주문구분(ex.IOC) 입력하여 가능수량 확인) . 미수 사용 X: ORD_DVSN:01(시장가) or 특정 주문구분(ex.IOC)로 지정하여 nrcvb_buy_qty(미수없는매수수량) 확인 . 미수 사용 O: ORD_DVSN:01(시장가) or 특정 주문구분(ex.IOC)로 지정하여 max_buy_qty(최대매수수량) 확인","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
cano (str): [필수] 종합계좌번호 (ex. 계좌번호 체계(8-2)의 앞 8자리)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 계좌번호 체계(8-2)의 뒤 2자리)
pdno (str): [필수] 상품번호 (ex. 종목번호(6자리))
ord_unpr (str): [필수] 주문단가 (ex. 1주당 가격)
ord_dvsn (str): [필수] 주문구분 (ex. 01 : 시장가)
cma_evlu_amt_icld_yn (str): [필수] CMA평가금액포함여부 (ex. Y)
ovrs_icld_yn (str): [필수] 해외포함여부 (ex. N)",pd.DataFrame: 매수가능조회 데이터,"     df = inquire_psbl_order(env_dv=""real"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, pdno=""005930"", ord_unpr=""55000"", ord_dvsn=""01"", cma_evlu_amt_icld_yn=""N"", ovrs_icld_yn=""N"")
     print(df)","{
    'ord_psbl_cash': '주문가능현금',
    'ord_psbl_sbst': '주문가능대용',
    'ruse_psbl_amt': '재사용가능금액',
    'fund_rpch_chgs': '펀드환매대금',
    'psbl_qty_calc_unpr': '가능수량계산단가',
    'nrcvb_buy_amt': '미수없는매수금액',
    'nrcvb_buy_qty': '미수없는매수수량',
    'max_buy_amt': '최대매수금액',
    'max_buy_qty': '최대매수수량',
    'cma_evlu_amt': 'CMA평가금액',
    'ovrs_re_use_amt_wcrc': '해외재사용금액원화',
    'ord_psbl_frcr_amt_wcrc': '주문가능외화금액원화'
}","[""지금 내가 가진 현금으로 삼성전자 몇 주 살 수 있는지 최대매수수량 알려줘."", ""미수 안 쓰고 SK하이닉스 최대 몇 주까지 매수 가능한지 알려줘."", ""시장가로 주문할 때 삼성전자를 몇 주 살 수 있는지 최대매수수량 알려줘."", ""내 CMA 계좌에 있는 돈까지 합쳐서 주식을 얼마나 살 수 있는지 주문가능현금 보여줘."", ""내 계좌의 재사용가능금액 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_psbl_order/inquire_psbl_order.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_psbl_order/chk_inquire_psbl_order.py
domestic_stock,주문/계좌,기간별손익일별합산조회,REST,GET,/uapi/domestic-stock/v1/trading/inquire-period-profit,v1_국내주식-052,inquire_period_profit,"기간별손익일별합산조회 API입니다. 한국투자 HTS(eFriend Plus) > [0856] 기간별 매매손익 화면 에서 ""일별"" 클릭 시의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드
inqr_strt_dt (str): [필수] 조회시작일자
inqr_end_dt (str): [필수] 조회종료일자
sort_dvsn (str): [필수] 정렬구분 (00: 최근 순, 01: 과거 순, 02: 최근 순)
inqr_dvsn (str): [필수] 조회구분 (00)
cblc_dvsn (str): [필수] 잔고구분 (00: 전체)
pdno (str): 상품번호
NK100 (str): 연속조회키100
FK100 (str): 연속조회검색조건100
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: 기간별손익일별합산조회 데이터 (output1, output2)","     df1, df2 = inquire_period_profit(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, inqr_strt_dt=""20230101"", inqr_end_dt=""20240301"", sort_dvsn=""00"", inqr_dvsn=""00"", cblc_dvsn=""00"")
     print(df1)
     print(df2)","{
    'trad_dt': '매매일자',
    'buy_amt': '매수금액',
    'sll_amt': '매도금액',
    'rlzt_pfls': '실현손익',
    'fee': '수수료',
    'loan_int': '대출이자',
    'tl_tax': '제세금',
    'pfls_rt': '손익률',
    'sll_qty1': '매도수량1',
    'buy_qty1': '매수수량1',
    'sll_qty_smtl': '매도수량합계',
    'sll_tr_amt_smtl': '매도거래금액합계',
    'sll_fee_smtl': '매도수수료합계',
    'sll_tltx_smtl': '매도제세금합계',
    'sll_excc_amt_smtl': '매도정산금액합계',
    'buy_qty_smtl': '매수수량합계',
    'buy_tr_amt_smtl': '매수거래금액합계',
    'buy_fee_smtl': '매수수수료합계',
    'buy_tax_smtl': '매수제세금합계',
    'buy_excc_amt_smtl': '매수정산금액합계',
    'tot_qty': '총수량',
    'tot_tr_amt': '총거래금액',
    'tot_fee': '총수수료',
    'tot_tltx': '총제세금',
    'tot_excc_amt': '총정산금액',
    'tot_rlzt_pfls': '총실현손익',
    'loan_int': '대출이자'
}","[""이번 달 내 주식 매매 손익 일별로 합산해서 보여줘."", ""지난 한달간 내가 거래한 총 수수료랑 세금이 얼마야?"", ""어제 내가 주식 팔아서 번 돈이 얼마인지 실현손익 알려줘."", ""지난달 내 총실현손익과 손익률 보여줘."", ""8월 1일부터 오늘까지의 매수금액과 매도금액 합계를 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_period_profit/inquire_period_profit.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_period_profit/chk_inquire_period_profit.py
domestic_stock,주문/계좌,주식잔고조회_실현손익,REST,GET,/uapi/domestic-stock/v1/trading/inquire-balance-rlz-pl,v1_국내주식-041,inquire_balance_rlz_pl,"주식잔고조회_실현손익 API입니다. 한국투자 HTS(eFriend Plus) [0800] 국내 체결기준잔고 화면을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다. (참고: 포럼 - 공지사항 - 신규 API 추가 안내(주식잔고조회_실현손익 외 1건))","cano (str): [필수] 종합계좌번호 (계좌번호 체계(8-2)의 앞 8자리)
acnt_prdt_cd (str): [필수] 계좌상품코드 (계좌번호 체계(8-2)의 뒤 2자리)
afhr_flpr_yn (str): [필수] 시간외단일가여부 (N:기본값, Y:시간외단일가)
inqr_dvsn (str): [필수] 조회구분 (00:전체)
unpr_dvsn (str): [필수] 단가구분 (01:기본값)
fund_sttl_icld_yn (str): [필수] 펀드결제포함여부 (N:포함하지 않음, Y:포함)
fncg_amt_auto_rdpt_yn (str): [필수] 융자금액자동상환여부 (N:기본값)
prcs_dvsn (str): [필수] PRCS_DVSN (00:전일매매포함, 01:전일매매미포함)
ofl_yn (str): 오프라인여부
cost_icld_yn (str): 비용포함여부
FK100 (str): 연속조회검색조건100
NK100 (str): 연속조회키100
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: 주식잔고조회_실현손익 데이터 (output1, output2)","     df1, df2 = inquire_balance_rlz_pl(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, afhr_flpr_yn=""N"", inqr_dvsn=""02"", unpr_dvsn=""01"", fund_sttl_icld_yn=""N"", fncg_amt_auto_rdpt_yn=""N"", prcs_dvsn=""01"")
     print(df1)
     print(df2)","{
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'trad_dvsn_name': '매매구분명',
    'bfdy_buy_qty': '전일매수수량',
    'bfdy_sll_qty': '전일매도수량',
    'thdt_buyqty': '금일매수수량',
    'thdt_sll_qty': '금일매도수량',
    'hldg_qty': '보유수량',
    'ord_psbl_qty': '주문가능수량',
    'pchs_avg_pric': '매입평균가격',
    'pchs_amt': '매입금액',
    'prpr': '현재가',
    'evlu_amt': '평가금액',
    'evlu_pfls_amt': '평가손익금액',
    'evlu_pfls_rt': '평가손익율',
    'evlu_erng_rt': '평가수익율',
    'loan_dt': '대출일자',
    'loan_amt': '대출금액',
    'stln_slng_chgs': '대주매각대금',
    'expd_dt': '만기일자',
    'stck_loan_unpr': '주식대출단가',
    'bfdy_cprs_icdc': '전일대비증감',
    'fltt_rt': '등락율',
    'dnca_tot_amt': '예수금총금액',
    'nxdy_excc_amt': '익일정산금액',
    'prvs_rcdl_excc_amt': '가수도정산금액',
    'cma_evlu_amt': 'CMA평가금액',
    'bfdy_buy_amt': '전일매수금액',
    'thdt_buy_amt': '금일매수금액',
    'nxdy_auto_rdpt_amt': '익일자동상환금액',
    'bfdy_sll_amt': '전일매도금액',
    'thdt_sll_amt': '금일매도금액',
    'd2_auto_rdpt_amt': 'D+2자동상환금액',
    'bfdy_tlex_amt': '전일제비용금액',
    'thdt_tlex_amt': '금일제비용금액',
    'tot_loan_amt': '총대출금액',
    'scts_evlu_amt': '유가평가금액',
    'tot_evlu_amt': '총평가금액',
    'nass_amt': '순자산금액',
    'fncg_gld_auto_rdpt_yn': '융자금자동상환여부',
    'pchs_amt_smtl_amt': '매입금액합계금액',
    'evlu_amt_smtl_amt': '평가금액합계금액',
    'evlu_pfls_smtl_amt': '평가손익합계금액',
    'tot_stln_slng_chgs': '총대주매각대금',
    'bfdy_tot_asst_evlu_amt': '전일총자산평가금액',
    'asst_icdc_amt': '자산증감액',
    'asst_icdc_erng_rt': '자산증감수익율',
    'rlzt_pfls': '실현손익',
    'rlzt_erng_rt': '실현수익율',
    'real_evlu_pfls': '실평가손익',
    'real_evlu_pfls_erng_rt': '실평가손익수익율'
}","[""내 주식 계좌의 실현 손익 포함된 잔고 보여줘."", ""내가 가진 종목들의 평가손익이랑 실현손익을 같이 보고 싶어."", ""내 계좌의 총 평가손익 합계와 실현손익 알려줘."", ""내가 보유한 삼성전자의 평가손익율과 실현수익율 보여줘."", ""내 계좌의 자산증감액과 자산증감수익율 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_balance_rlz_pl/inquire_balance_rlz_pl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_balance_rlz_pl/chk_inquire_balance_rlz_pl.py
domestic_stock,주문/계좌,매도가능수량조회,REST,GET,/uapi/domestic-stock/v1/trading/inquire-psbl-sell,국내주식-165,inquire_psbl_sell,[국내주식] 주문/계좌 매도가능수량조회[국내주식-165] 매도가능수량조회 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호
acnt_prdt_cd (str): 계좌상품코드
pdno (str): 보유종목 코드 ex)000660
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 매도가능수량조회 데이터,"     df = inquire_psbl_sell(""12345678"", ""01"", ""000660"")
     print(df)","{
    'pdno': '상품번호',
    'buy_qty': '매수수량',
    'sll_qty': '매도수량',
    'cblc_qty': '잔고수량',
    'nsvg_qty': '비저축수량',
    'ord_psbl_qty': '주문가능수량',
    'pchs_avg_pric': '매입평균가격',
    'pchs_amt': '매입금액',
    'now_pric': '현재가',
    'evlu_amt': '평가금액',
    'evlu_pfls_amt': '평가손익금액',
    'evlu_pfls_rt': '평가손익율'
}","[""내가 가진 삼성전자 주식 몇 주 팔 수 있어?"", ""SK하이닉스 매도 가능 수량 좀 알려줘."", ""내가 보유한 삼성전자 주식의 평균 매입 단가와 평가손익율 알려줘."", ""SK하이닉스의 현재가와 내 평가금액 알려줘."", ""내 계좌의 모든 보유 종목 매도가능수량 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_psbl_sell/inquire_psbl_sell.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_psbl_sell/chk_inquire_psbl_sell.py
domestic_stock,주문/계좌,주식주문(정정취소),REST,POST,/uapi/domestic-stock/v1/trading/order-rvsecncl,v1_국내주식-003,order_rvsecncl,"주문 건에 대하여 정정 및 취소하는 API입니다. 단, 이미 체결된 건은 정정 및 취소가 불가합니다. ※ 정정은 원주문에 대한 주문단가 혹은 주문구분을 변경하는 사항으로, 정정이 가능한 수량은 원주문수량을 초과 할 수 없습니다. ※ 주식주문(정정취소) 호출 전에 반드시 주식정정취소가능주문조회 호출을 통해 정정취소가능수량(output > psbl_qty)을 확인하신 후 정정취소주문 내시기 바랍니다. ※ POST API의 경우 BODY값의 key값들을 대문자로 작성하셔야 합니다. (EX. ""CANO"" : ""12345678"", ""ACNT_PRDT_CD"": ""01"",...)","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드
krx_fwdg_ord_orgno (str): [필수] 한국거래소전송주문조직번호
orgn_odno (str): [필수] 원주문번호
ord_dvsn (str): [필수] 주문구분
rvse_cncl_dvsn_cd (str): [필수] 정정취소구분코드 (ex. 01:정정,02:취소)
ord_qty (str): [필수] 주문수량
ord_unpr (str): [필수] 주문단가
qty_all_ord_yn (str): [필수] 잔량전부주문여부 (ex. Y:전량, N:일부)
excg_id_dvsn_cd (str): [필수] 거래소ID구분코드 (ex. KRX: 한국거래소, NXT:대체거래소,SOR:SOR)
cndt_pric (Optional[str]): 조건가격",pd.DataFrame: 주식주문(정정취소) 결과 데이터,"     df = order_rvsecncl(env_dv=""real"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, )
     print(df)","{
    'krx_fwdg_ord_orgno': '한국거래소전송주문조직번호',
    'odno': '주문번호',
    'ord_tmd': '주문시각'
}","[""아까 낸 삼성전자 주문 가격 좀 수정해줘."", ""SK하이닉스 매수 주문 취소할게."", ""오전에 낸 삼성전자 주문을 전량 취소하고 싶어."", ""SK하이닉스 매수 주문 가격을 15만원으로 정정해줘."", ""주문 정정하고 새로 받은 주문번호와 주문시각 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_rvsecncl/order_rvsecncl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_rvsecncl/chk_order_rvsecncl.py
domestic_stock,주문/계좌,주식주문(현금),REST,POST,/uapi/domestic-stock/v1/trading/order-cash,v1_국내주식-001,order_cash,"국내주식주문(현금) API 입니다. ※ TTC0802U(현금매수) 사용하셔서 미수매수 가능합니다. 단, 거래하시는 계좌가 증거금40%계좌로 신청이 되어있어야 가능합니다. ※ 신용매수는 별도의 API가 준비되어 있습니다. ※ ORD_QTY(주문수량), ORD_UNPR(주문단가) 등을 String으로 전달해야 함에 유의 부탁드립니다. ※ ORD_UNPR(주문단가)가 없는 주문은 상한가로 주문금액을 선정하고 이후 체결이되면 체결금액로 정산됩니다. ※ POST API의 경우 BODY값의 key값들을 대문자로 작성하셔야 합니다. (EX. ""CANO"" : ""12345678"", ""ACNT_PRDT_CD"": ""01"",...) ※ 종목코드 마스터파일 파이썬 정제코드는 한국투자증권 Github 참고 부탁드립니다. https://github.com/koreainvestment/open-trading-api/tree/main/stocks_info","env_dv (str): [필수] 실전모의구분 (real:실전, demo:모의)
ord_dv (str): [필수] 매도매수구분 (buy:매수, sell:매도)
cano (str): [필수] 종합계좌번호 (종합계좌번호)
acnt_prdt_cd (str): [필수] 계좌상품코드 (상품유형코드)
pdno (str): [필수] 상품번호 (종목코드(6자리) , ETN의 경우 7자리 입력)
ord_dvsn (str): [필수] 주문구분
ord_qty (str): [필수] 주문수량
ord_unpr (str): [필수] 주문단가
excg_id_dvsn_cd (str): [필수] 거래소ID구분코드 (KRX)
sll_type (str): 매도유형 (매도주문 시) (01:일반매도,02:임의매매,05:대차매도)
cndt_pric (str): 조건가격 (스탑지정가호가 주문 시 사용)",pd.DataFrame: 주식주문 결과 데이터,"     df = order_cash(env_dv=""demo"", ord_dv=""buy"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, pdno=""005930"", ord_dvsn=""00"", ord_qty=""1"", ord_unpr=""70000"", excg_id_dvsn_cd=""KRX"")
     print(df)","{
    'KRX_FWDG_ORD_ORGNO': '거래소코드',
    'ODNO': '주문번호',
    'ORD_TMD': '주문시간'
}","[""삼성전자 10주 매수 주문 넣어줘."", ""카카오 주식 시장가로 5주 매도해줘."", ""LG에너지솔루션 1주를 지정가 40만원에 매수 주문해줘."", ""지금 바로 SK하이닉스 1주 살게."", ""주문하고 나서 주문번호랑 주문시간 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_cash/order_cash.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_cash/chk_order_cash.py
domestic_stock,주문/계좌,주식통합증거금 현황,REST,GET,/uapi/domestic-stock/v1/trading/intgr-margin,국내주식-191,intgr_margin,"주식통합증거금 현황 API입니다. 한국투자 HTS(eFriend Plus) > [0867] 통합증거금조회 화면 의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다. ※ 해당 화면은 일반계좌와 통합증거금 신청계좌에 대해서 국내 및 해외 주문가능금액을 간단하게 조회하는 화면입니다. ※ 해외 국가별 상세한 증거금현황을 원하시면 [해외주식] 주문/계좌 > 해외증거금 통화별조회 API를 이용하여 주시기 바랍니다.","cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 01)
cma_evlu_amt_icld_yn (str): [필수] CMA평가금액포함여부 (ex. Y: 포함, N: 미포함)
wcrc_frcr_dvsn_cd (str): [필수] 원화외화구분코드 (ex. 01: 외화기준, 02: 원화기준)
fwex_ctrt_frcr_dvsn_cd (str): [필수] 선도환계약외화구분코드 (ex. 01: 외화기준, 02: 원화기준)",pd.DataFrame: 주식통합증거금 현황 데이터,"     df = intgr_margin(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, cma_evlu_amt_icld_yn=""N"", wcrc_frcr_dvsn_cd=""01"", fwex_ctrt_frcr_dvsn_cd=""01"")
     print(df)","{
    'acmga_rt': '계좌증거금율',
    'acmga_pct100_aptm_rson': '계좌증거금100퍼센트지정사유',
    'stck_cash_objt_amt': '주식현금대상금액',
    'stck_sbst_objt_amt': '주식대용대상금액',
    'stck_evlu_objt_amt': '주식평가대상금액',
    'stck_ruse_psbl_objt_amt': '주식재사용가능대상금액',
    'stck_fund_rpch_chgs_objt_amt': '주식펀드환매대금대상금액',
    'stck_fncg_rdpt_objt_atm': '주식융자상환금대상금액',
    'bond_ruse_psbl_objt_amt': '채권재사용가능대상금액',
    'stck_cash_use_amt': '주식현금사용금액',
    'stck_sbst_use_amt': '주식대용사용금액',
    'stck_evlu_use_amt': '주식평가사용금액',
    'stck_ruse_psbl_amt_use_amt': '주식재사용가능금사용금액',
    'stck_fund_rpch_chgs_use_amt': '주식펀드환매대금사용금액',
    'stck_fncg_rdpt_amt_use_amt': '주식융자상환금사용금액',
    'bond_ruse_psbl_amt_use_amt': '채권재사용가능금사용금액',
    'stck_cash_ord_psbl_amt': '주식현금주문가능금액',
    'stck_sbst_ord_psbl_amt': '주식대용주문가능금액',
    'stck_evlu_ord_psbl_amt': '주식평가주문가능금액',
    'stck_ruse_psbl_ord_psbl_amt': '주식재사용가능주문가능금액',
    'stck_fund_rpch_ord_psbl_amt': '주식펀드환매주문가능금액',
    'bond_ruse_psbl_ord_psbl_amt': '채권재사용가능주문가능금액',
    'rcvb_amt': '미수금액',
    'stck_loan_grta_ruse_psbl_amt': '주식대출보증금재사용가능금액',
    'stck_cash20_max_ord_psbl_amt': '주식현금20최대주문가능금액',
    'stck_cash30_max_ord_psbl_amt': '주식현금30최대주문가능금액',
    'stck_cash40_max_ord_psbl_amt': '주식현금40최대주문가능금액',
    'stck_cash50_max_ord_psbl_amt': '주식현금50최대주문가능금액',
    'stck_cash60_max_ord_psbl_amt': '주식현금60최대주문가능금액',
    'stck_cash100_max_ord_psbl_amt': '주식현금100최대주문가능금액',
    'stck_rsip100_max_ord_psbl_amt': '주식재사용불가100최대주문가능',
    'bond_max_ord_psbl_amt': '채권최대주문가능금액',
    'stck_fncg45_max_ord_psbl_amt': '주식융자45최대주문가능금액',
    'stck_fncg50_max_ord_psbl_amt': '주식융자50최대주문가능금액',
    'stck_fncg60_max_ord_psbl_amt': '주식융자60최대주문가능금액',
    'stck_fncg70_max_ord_psbl_amt': '주식융자70최대주문가능금액',
    'stck_stln_max_ord_psbl_amt': '주식대주최대주문가능금액',
    'lmt_amt': '한도금액',
    'ovrs_stck_itgr_mgna_dvsn_name': '해외주식통합증거금구분명',
    'usd_objt_amt': '미화대상금액',
    'usd_use_amt': '미화사용금액',
    'usd_ord_psbl_amt': '미화주문가능금액',
    'hkd_objt_amt': '홍콩달러대상금액',
    'hkd_use_amt': '홍콩달러사용금액',
    'hkd_ord_psbl_amt': '홍콩달러주문가능금액',
    'jpy_objt_amt': '엔화대상금액',
    'jpy_use_amt': '엔화사용금액',
    'jpy_ord_psbl_amt': '엔화주문가능금액',
    'cny_objt_amt': '위안화대상금액',
    'cny_use_amt': '위안화사용금액',
    'cny_ord_psbl_amt': '위안화주문가능금액',
    'usd_ruse_objt_amt': '미화재사용대상금액',
    'usd_ruse_amt': '미화재사용금액',
    'usd_ruse_ord_psbl_amt': '미화재사용주문가능금액',
    'hkd_ruse_objt_amt': '홍콩달러재사용대상금액',
    'hkd_ruse_amt': '홍콩달러재사용금액',
    'hkd_ruse_ord_psbl_amt': '홍콩달러재사용주문가능금액',
    'jpy_ruse_objt_amt': '엔화재사용대상금액',
    'jpy_ruse_amt': '엔화재사용금액',
    'jpy_ruse_ord_psbl_amt': '엔화재사용주문가능금액',
    'cny_ruse_objt_amt': '위안화재사용대상금액',
    'cny_ruse_amt': '위안화재사용금액',
    'cny_ruse_ord_psbl_amt': '위안화재사용주문가능금액',
    'usd_gnrl_ord_psbl_amt': '미화일반주문가능금액',
    'usd_itgr_ord_psbl_amt': '미화통합주문가능금액',
    'hkd_gnrl_ord_psbl_amt': '홍콩달러일반주문가능금액',
    'hkd_itgr_ord_psbl_amt': '홍콩달러통합주문가능금액',
    'jpy_gnrl_ord_psbl_amt': '엔화일반주문가능금액',
    'jpy_itgr_ord_psbl_amt': '엔화통합주문가능금액',
    'cny_gnrl_ord_psbl_amt': '위안화일반주문가능금액',
    'cny_itgr_ord_psbl_amt': '위안화통합주문가능금액',
    'stck_itgr_cash20_ord_psbl_amt': '주식통합현금20주문가능금액',
    'stck_itgr_cash30_ord_psbl_amt': '주식통합현금30주문가능금액',
    'stck_itgr_cash40_ord_psbl_amt': '주식통합현금40주문가능금액',
    'stck_itgr_cash50_ord_psbl_amt': '주식통합현금50주문가능금액',
    'stck_itgr_cash60_ord_psbl_amt': '주식통합현금60주문가능금액',
    'stck_itgr_cash100_ord_psbl_amt': '주식통합현금100주문가능금액',
    'stck_itgr_100_ord_psbl_amt': '주식통합100주문가능금액',
    'stck_itgr_fncg45_ord_psbl_amt': '주식통합융자45주문가능금액',
    'stck_itgr_fncg50_ord_psbl_amt': '주식통합융자50주문가능금액',
    'stck_itgr_fncg60_ord_psbl_amt': '주식통합융자60주문가능금액',
    'stck_itgr_fncg70_ord_psbl_amt': '주식통합융자70주문가능금액',
    'stck_itgr_stln_ord_psbl_amt': '주식통합대주주문가능금액',
    'bond_itgr_ord_psbl_amt': '채권통합주문가능금액',
    'stck_cash_ovrs_use_amt': '주식현금해외사용금액',
    'stck_sbst_ovrs_use_amt': '주식대용해외사용금액',
    'stck_evlu_ovrs_use_amt': '주식평가해외사용금액',
    'stck_re_use_amt_ovrs_use_amt': '주식재사용금액해외사용금액',
    'stck_fund_rpch_ovrs_use_amt': '주식펀드환매해외사용금액',
    'stck_fncg_rdpt_ovrs_use_amt': '주식융자상환해외사용금액',
    'bond_re_use_ovrs_use_amt': '채권재사용해외사용금액',
    'usd_oth_mket_use_amt': '미화타시장사용금액',
    'jpy_oth_mket_use_amt': '엔화타시장사용금액',
    'cny_oth_mket_use_amt': '위안화타시장사용금액',
    'hkd_oth_mket_use_amt': '홍콩달러타시장사용금액',
    'usd_re_use_oth_mket_use_amt': '미화재사용타시장사용금액',
    'jpy_re_use_oth_mket_use_amt': '엔화재사용타시장사용금액',
    'cny_re_use_oth_mket_use_amt': '위안화재사용타시장사용금액',
    'hkd_re_use_oth_mket_use_amt': '홍콩달러재사용타시장사용금액',
    'hgkg_cny_re_use_amt': '홍콩위안화재사용금액',
    'usd_frst_bltn_exrt': '미국달러최초고시환율',
    'hkd_frst_bltn_exrt': '홍콩달러최초고시환율',
    'jpy_frst_bltn_exrt': '일본엔화최초고시환율',
    'cny_frst_bltn_exrt': '중국위안화최초고시환율'
}","[""내 계좌의 통합증거금 현황 보여줘."", ""내가 가진 원화랑 달러 예수금이 각각 얼마야?"", ""지금 내 계좌로 미국 주식을 얼마나 더 살 수 있는지 주식통합현금100주문가능금액 알려줘."", ""내 계좌의 미수금액과 총위험증거금 보여줘."", ""내 계좌의 해외주식통합증거금구분명 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/intgr_margin/intgr_margin.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/intgr_margin/chk_intgr_margin.py
domestic_stock,주문/계좌,기간별매매손익현황조회,REST,GET,/uapi/domestic-stock/v1/trading/inquire-period-trade-profit,v1_국내주식-060,inquire_period_trade_profit,"기간별매매손익현황조회 API입니다. 한국투자 HTS(eFriend Plus) > [0856] 기간별 매매손익 화면 에서 ""종목별"" 클릭 시의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드
sort_dvsn (str): [필수] 정렬구분 (ex. 00: 최근, 01:과거, 02:최근)
inqr_strt_dt (str): [필수] 조회시작일자
inqr_end_dt (str): [필수] 조회종료일자
cblc_dvsn (str): [필수] 잔고구분 (ex. 00: 전체)
pdno (str): 상품번호
NK100 (str): 연속조회키100
FK100 (str): 연속조회검색조건100
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: 기간별매매손익현황 데이터 (output1, output2)","     df1, df2 = inquire_period_trade_profit(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, sort_dvsn=""02"", inqr_strt_dt=""20230216"", inqr_end_dt=""20240301"", cblc_dvsn=""00"")
     print(df1)
     print(df2)","{
    'trad_dt': '매매일자',
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'trad_dvsn_name': '매매구분명',
    'loan_dt': '대출일자',
    'hldg_qty': '보유수량',
    'pchs_unpr': '매입단가',
    'buy_qty': '매수수량',
    'buy_amt': '매수금액',
    'sll_pric': '매도가격',
    'sll_qty': '매도수량',
    'sll_amt': '매도금액',
    'rlzt_pfls': '실현손익',
    'pfls_rt': '손익률',
    'fee': '수수료',
    'tl_tax': '제세금',
    'loan_int': '대출이자',
    'sll_qty_smtl': '매도수량합계',
    'sll_tr_amt_smtl': '매도거래금액합계',
    'sll_fee_smtl': '매도수수료합계',
    'sll_tltx_smtl': '매도제세금합계',
    'sll_excc_amt_smtl': '매도정산금액합계',
    'buyqty_smtl': '매수수량합계',
    'buy_tr_amt_smtl': '매수거래금액합계',
    'buy_fee_smtl': '매수수수료합계',
    'buy_tax_smtl': '매수제세금합계',
    'buy_excc_amt_smtl': '매수정산금액합계',
    'tot_qty': '총수량',
    'tot_tr_amt': '총거래금액',
    'tot_fee': '총수수료',
    'tot_tltx': '총제세금',
    'tot_excc_amt': '총정산금액',
    'tot_rlzt_pfls': '총실현손익',
    'loan_int': '대출이자',
    'tot_pftrt': '총수익률'
}","[""지난달 내 주식 매매 손익 종목별로 보여줘."", ""올해 내가 삼성전자로 얼마 벌었는지 실현손익 알려줘."", ""어제 내가 판 SK하이닉스의 실현 손익과 손익률 보여줘."", ""이번 달 나의 총실현손익과 총수익률 알려줘."", ""지난주에 거래한 모든 종목의 매매일자, 매수금액, 매도금액 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_period_trade_profit/inquire_period_trade_profit.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_period_trade_profit/chk_inquire_period_trade_profit.py
domestic_stock,주문/계좌,투자계좌자산현황조회,REST,GET,/uapi/domestic-stock/v1/trading/inquire-account-balance,v1_국내주식-048,inquire_account_balance,"투자계좌자산현황조회 API입니다. output1은 한국투자 HTS(eFriend Plus) > [0891] 계좌 자산비중(결제기준) 화면 아래 테이블의 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 19 or 21)
inqr_dvsn_1 (str): 조회구분1
bspr_bf_dt_aply_yn (str): 기준가이전일자적용여부","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터프레임, output2 데이터프레임)","     df1, df2 = inquire_account_balance(""12345678"", ""21"")
     print(df1)
     print(df2)","{
    'pchs_amt': '매입금액',
    'evlu_amt': '평가금액',
    'evlu_pfls_amt': '평가손익금액',
    'crdt_lnd_amt': '신용대출금액',
    'real_nass_amt': '실제순자산금액',
    'whol_weit_rt': '전체비중율',
    'pchs_amt_smtl': '매입금액합계',
    'nass_tot_amt': '순자산총금액',
    'loan_amt_smtl': '대출금액합계',
    'evlu_pfls_amt_smtl': '평가손익금액합계',
    'evlu_amt_smtl': '평가금액합계',
    'tot_asst_amt': '총자산금액',
    'tot_lnda_tot_ulst_lnda': '총대출금액총융자대출금액',
    'cma_auto_loan_amt': 'CMA자동대출금액',
    'tot_mgln_amt': '총담보대출금액',
    'stln_evlu_amt': '대주평가금액',
    'crdt_fncg_amt': '신용융자금액',
    'ocl_apl_loan_amt': 'OCL_APL대출금액',
    'pldg_stup_amt': '질권설정금액',
    'frcr_evlu_tota': '외화평가총액',
    'tot_dncl_amt': '총예수금액',
    'cma_evlu_amt': 'CMA평가금액',
    'dncl_amt': '예수금액',
    'tot_sbst_amt': '총대용금액',
    'thdt_rcvb_amt': '당일미수금액',
    'ovrs_stck_evlu_amt1': '해외주식평가금액1',
    'ovrs_bond_evlu_amt': '해외채권평가금액',
    'mmf_cma_mgge_loan_amt': 'MMFCMA담보대출금액',
    'sbsc_dncl_amt': '청약예수금액',
    'pbst_sbsc_fnds_loan_use_amt': '공모주청약자금대출사용금액',
    'etpr_crdt_grnt_loan_amt': '기업신용공여대출금액'
}","[""내 투자 계좌의 전체 자산 현황 알려줘."", ""내가 가진 주식, 현금, 펀드 비중이 어떻게 돼?"", ""내 계좌의 순자산 총액과 총자산금액 알려줘."", ""내 계좌의 총평가손익금액합계와 총대출금액 보여줘."", ""내 해외주식평가금액1과 해외채권평가금액 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_account_balance/inquire_account_balance.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_account_balance/chk_inquire_account_balance.py
domestic_stock,주문/계좌,퇴직연금 잔고조회,REST,GET,/uapi/domestic-stock/v1/trading/pension/inquire-balance,v1_국내주식-036,pension_inquire_balance,"주식, ETF, ETN만 조회 가능하며 펀드는 조회 불가합니다. ​※ 55번 계좌(DC가입자계좌)의 경우 해당 API 이용이 불가합니다. KIS Developers API의 경우 HTS ID에 반드시 연결되어있어야만 API 신청 및 앱정보 발급이 가능한 서비스로 개발되어서 실물계좌가 아닌 55번 계좌는 API 이용이 불가능한 점 양해 부탁드립니다.","cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 29)
acca_dvsn_cd (str): [필수] 적립금구분코드 (ex. 00)
inqr_dvsn (str): [필수] 조회구분 (ex. 00)
FK100 (str): 연속조회검색조건100
NK100 (str): 연속조회키100
tr_cont (str): 연속 거래 여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: 퇴직연금 잔고 데이터","     df1, df2 = pension_inquire_balance(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, acca_dvsn_cd=""00"", inqr_dvsn=""00"")
     print(df1)
     print(df2)","{
    'cblc_dvsn_name': '잔고구분명',
    'prdt_name': '상품명',
    'pdno': '상품번호',
    'item_dvsn_name': '종목구분명',
    'thdt_buyqty': '금일매수수량',
    'thdt_sll_qty': '금일매도수량',
    'hldg_qty': '보유수량',
    'ord_psbl_qty': '주문가능수량',
    'pchs_avg_pric': '매입평균가격',
    'pchs_amt': '매입금액',
    'prpr': '현재가',
    'evlu_amt': '평가금액',
    'evlu_pfls_amt': '평가손익금액',
    'evlu_erng_rt': '평가수익율',
    'dnca_tot_amt': '예수금총금액',
    'nxdy_excc_amt': '익일정산금액',
    'prvs_rcdl_excc_amt': '가수도정산금액',
    'thdt_buy_amt': '금일매수금액',
    'thdt_sll_amt': '금일매도금액',
    'thdt_tlex_amt': '금일제비용금액',
    'scts_evlu_amt': '유가평가금액',
    'tot_evlu_amt': '총평가금액'
}","[""내 퇴직연금 계좌 잔고 보여줘."", ""내 DC 계좌에 있는 삼성전자 주식 평가수익율 알려줘."", ""내 퇴직연금 계좌에서 주문 가능한 수량이 몇 주야?"", ""내가 보유한 KODEX 200 ETF의 평가손익금액 알려줘."", ""내 퇴직연금 계좌의 총평가금액 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/pension_inquire_balance/pension_inquire_balance.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/pension_inquire_balance/chk_pension_inquire_balance.py
domestic_stock,주문/계좌,퇴직연금 매수가능조회,REST,GET,/uapi/domestic-stock/v1/trading/pension/inquire-psbl-order,v1_국내주식-034,pension_inquire_psbl_order,[국내주식] 주문/계좌 > 퇴직연금 매수가능조회[v1_국내주식-034] ※ 55번 계좌(DC가입자계좌)의 경우 해당 API 이용이 불가합니다. KIS Developers API의 경우 HTS ID에 반드시 연결되어있어야만 API 신청 및 앱정보 발급이 가능한 서비스로 개발되어서 실물계좌가 아닌 55번 계좌는 API 이용이 불가능한 점 양해 부탁드립니다.,"cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 29)
pdno (str): [필수] 상품번호 (ex. 123456)
acca_dvsn_cd (str): [필수] 적립금구분코드 (ex. 00)
cma_evlu_amt_icld_yn (str): [필수] CMA평가금액포함여부 (ex. Y:포함, N:미포함)
ord_unpr (str): [필수] 주문단가
ord_dvsn (str): [필수] 주문구분 (ex. 00: 지정가, 01: 시장가)",pd.DataFrame: 퇴직연금 매수가능조회 데이터,"     df = pension_inquire_psbl_order(
         cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod,
         pdno=""069500"",
         acca_dvsn_cd=""00"",
         cma_evlu_amt_icld_yn=""Y"",
         ord_unpr=""30800"",
         ord_dvsn=""00""
     )
     print(df)","{
    'ord_psbl_cash': '주문가능현금',
    'ruse_psbl_amt': '재사용가능금액',
    'psbl_qty_calc_unpr': '가능수량계산단가',
    'max_buy_amt': '최대매수금액',
    'max_buy_qty': '최대매수수량'
}","[""내 퇴직연금 계좌로 KODEX 200 ETF 얼마나 살 수 있는지 최대매수금액 알려줘."", ""삼성전자 주식을 퇴직연금 계좌로 매수하려고 하는데, 최대 몇 주까지 가능해?"", ""시장가로 주문할 때 KODEX 200 ETF를 몇 주 살 수 있는지 최대매수수량 알려줘."", ""내 퇴직연금 계좌의 주문 가능 현금이 얼마야?"", ""내 퇴직연금 계좌의 재사용가능금액 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/pension_inquire_psbl_order/pension_inquire_psbl_order.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/pension_inquire_psbl_order/chk_pension_inquire_psbl_order.py
domestic_stock,주문/계좌,주식주문(신용),REST,POST,/uapi/domestic-stock/v1/trading/order-credit,v1_국내주식-002,order_credit,"국내주식주문(신용) API입니다. ※ 모의투자는 사용 불가합니다. ※ POST API의 경우 BODY값의 key값들을 대문자로 작성하셔야 합니다. (EX. ""CANO"" : ""12345678"", ""ACNT_PRDT_CD"": ""01"",...)","ord_dv (str): [필수] 매수매도구분 (ex. buy:매수, sell:매도)
cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 01)
pdno (str): [필수] 상품번호 (ex. 123456)
crdt_type (str): [필수] 신용유형 (ex. [매도] 22:유통대주신규, 24:자기대주신규, 25:자기융자상환, 27:유통융자상환 / [매수] 21:자기융자신규, 23:유통융자신규 , 26:유통대주상환, 28:자기대주상환)
loan_dt (str): [필수] 대출일자 (ex. [신용매수] 오늘날짜(yyyyMMdd), [신용매도] 매도할 종목의 대출일자(yyyyMMdd))
ord_dvsn (str): [필수] 주문구분
ord_qty (str): [필수] 주문수량
ord_unpr (str): [필수] 주문단가
excg_id_dvsn_cd (str): 거래소ID구분코드 (ex. KRX:한국거래소, NXT:넥스트레이드, SOR:SOR)
sll_type (str): 매도유형
rsvn_ord_yn (str): 예약주문여부 (ex. Y: 예약주문, N: 신용주문)
emgc_ord_yn (str): 비상주문여부
pgtr_dvsn (str): 프로그램매매구분
mgco_aptm_odno (str): 운용사지정주문번호
lqty_tr_ngtn_dtl_no (str): 대량거래협상상세번호
lqty_tr_agmt_no (str): 대량거래협정번호
lqty_tr_ngtn_id (str): 대량거래협상자Id
lp_ord_yn (str): LP주문여부
mdia_odno (str): 매체주문번호
ord_svr_dvsn_cd (str): 주문서버구분코드
pgm_nmpr_stmt_dvsn_cd (str): 프로그램호가신고구분코드
cvrg_slct_rson_cd (str): 반대매매선정사유코드
cvrg_seq (str): 반대매매순번
cndt_pric (str): 조건가격",pd.DataFrame: 주식주문(신용) 결과 데이터,"     df = order_credit(ord_dv=""buy"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, pdno=""005930"", crdt_type=""21"", loan_dt=""20220810"", ord_dvsn=""00"", ord_qty=""1"", ord_unpr=""55000"")
     print(df)","{
    'krx_fwdg_ord_orgno': '한국거래소전송주문조직번호',
    'odno': '주문번호',
    'ord_tmd': '주문시간'
}","[""삼성전자 신용으로 10주 매수 주문 넣어줘."", ""카카오 주식 대주 상환 주문하고 싶어."", ""자기융자 신규로 삼성전자 10주 매수 주문 넣어줘."", ""오늘 날짜로 삼성전자 신용 매수할게."", ""신용 주문하고 주문번호랑 주문시간 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_credit/order_credit.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_credit/chk_order_credit.py
domestic_stock,주문/계좌,신용매수가능조회,REST,GET,/uapi/domestic-stock/v1/trading/inquire-credit-psamount,v1_국내주식-042,inquire_credit_psamount,신용매수가능조회 API입니다. 신용매수주문 시 주문가능수량과 금액을 확인하실 수 있습니다.,"cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드
pdno (str): [필수] 종목코드
ord_dvsn (str): [필수] 주문구분 (ex. 00 : 지정가, 01 : 시장가, 02 : 조건부지정가, 03 : 최유리지정가, 04 : 최우선지정가, 05 : 장전 시간외, 06 : 장후 시간외, 07 : 시간외 단일가 등)
crdt_type (str): [필수] 신용유형 (ex. 21 : 자기융자신규, 23 : 유통융자신규, 26 : 유통대주상환, 28 : 자기대주상환, 25 : 자기융자상환, 27 : 유통융자상환, 22 : 유통대주신규, 24 : 자기대주신규)
cma_evlu_amt_icld_yn (str): [필수] CMA평가금액포함여부
ovrs_icld_yn (str): [필수] 해외포함여부
ord_unpr (str): 주문단가 (ex. 1주당 가격. 장전/장후 시간외, 시장가의 경우 ""0"" 입력 권고)",pd.DataFrame: 신용매수가능조회 데이터,"     df = inquire_credit_psamount(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, pdno=""005930"", ord_dvsn=""00"", crdt_type=""21"", cma_evlu_amt_icld_yn=""N"", ovrs_icld_yn=""N"")
     print(df)","{
    'ord_psbl_cash': '주문가능현금',
    'ord_psbl_sbst': '주문가능대용',
    'ruse_psbl_amt': '재사용가능금액',
    'fund_rpch_chgs': '펀드환매대금',
    'psbl_qty_calc_unpr': '가능수량계산단가',
    'nrcvb_buy_amt': '미수없는매수금액',
    'nrcvb_buy_qty': '미수없는매수수량',
    'max_buy_amt': '최대매수금액',
    'max_buy_qty': '최대매수수량',
    'cma_evlu_amt': 'CMA평가금액',
    'ovrs_re_use_amt_wcrc': '해외재사용금액원화',
    'ord_psbl_frcr_amt_wcrc': '주문가능외화금액원화'
}","[""삼성전자 신용으로 몇 주까지 살 수 있는지 최대매수금액 알려줘."", ""SK하이닉스 대주 상환 가능한 최대 금액이 얼마야?"", ""시장가로 신용 주문할 때 삼성전자를 몇 주까지 살 수 있는지 최대매수수량 알려줘."", ""내 계좌로 최대로 받을 수 있는 신용융자 금액이 궁금해."", ""내 계좌의 주문가능현금과 주문가능대용금 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_credit_psamount/inquire_credit_psamount.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/inquire_credit_psamount/chk_inquire_credit_psamount.py
domestic_stock,주문/계좌,주식예약주문,REST,POST,/uapi/domestic-stock/v1/trading/order-resv,v1_국내주식-017,order_resv,"국내주식 예약주문 매수/매도 API 입니다. ※ POST API의 경우 BODY값의 key값들을 대문자로 작성하셔야 합니다. (EX. ""CANO"" : ""12345678"", ""ACNT_PRDT_CD"": ""01"",...) ※ 유의사항 1. 예약주문 가능시간 : 15시 40분 ~ 다음 영업일 7시 30분 (단, 서버 초기화 작업 시 예약주문 불가 : 23시 40분 ~ 00시 10분) ※ 예약주문 처리내역은 통보되지 않으므로 주문처리일 장 시작전에 반드시 주문처리 결과를 확인하시기 바랍니다. 2. 예약주문 안내 - 예약종료일 미입력 시 일반예약주문으로 최초 도래하는 영업일에 주문 전송됩니다. - 예약종료일 입력 시 기간예약주문으로 최초 예약주문수량 중 미체결 된 수량에 대해 예약종료일까지 매 영업일 주문이 실행됩니다. (예약종료일은 익영업일부터 달력일 기준으로 공휴일 포함하여 최대 30일이 되는 일자까지 입력가능) - 예약주문 접수 처리순서는 일반/기간예약주문 중 신청일자가 빠른 주문이 우선합니다. 단, 기간예약주문 자동배치시간(약 15시35분 ~ 15시55분)사이 접수되는 주문의 경우 당일에 한해 순서와 상관없이 처리될 수 있습니다. - 기간예약주문 자동배치시간(약 15시35분 ~ 15시55분)에는 예약주문 조회가 제한 될 수 있습니다. - 기간예약주문은 계좌 당 주문건수 최대 1,000건으로 제한됩니다. 3. 예약주문 접수내역 중 아래의 사유 등으로 인해 주문이 거부될 수 있사오니, 주문처리일 장 시작전에 반드시 주문처리 결과를 확인하시기 바랍니다. * 주문처리일 기준 : 매수가능금액 부족, 매도가능수량 부족, 주문수량/호가단위 오류, 대주 호가제한, 신용/대주가능종목 변경, 상/하한폭 변경, 시가형성 종목(신규상장 등)의 시장가, 거래서비스 미신청 등 4. 익일 예상 상/하한가는 조회시점의 현재가로 계산되며 익일의 유/무상증자, 배당, 감자, 합병, 액면변경 등에 의해 변동될 수 있으며 이로 인해 상/하한가를 벗어나 주문이 거부되는 경우가 발생할 수 있사오니, 주문처리일 장 시작전에 반드시 주문처리결과를 확인하시기 바랍니다. 5. 정리매매종목, ELW, 신주인수권증권, 신주인수권증서 등은 가격제한폭(상/하한가) 적용 제외됩니다. 6. 영업일 장 시작 후 [기간예약주문] 내역 취소는 해당시점 이후의 예약주문이 취소되는 것으로, 일반주문으로 이미 전환된 주문에는 영향을 미치지 않습니다. 반드시 장 시작전 주문처리결과를 확인하시기 바랍니다.","cano (str): [필수] 종합계좌번호 (계좌번호 체계(8-2)의 앞 8자리)
acnt_prdt_cd (str): [필수] 계좌상품코드 (계좌번호 체계(8-2)의 뒤 2자리)
pdno (str): [필수] 종목코드(6자리)
ord_qty (str): [필수] 주문수량 (주0문주식수)
ord_unpr (str): [필수] 주문단가 (1주당 가격, 시장가/장전 시간외는 0 입력)
sll_buy_dvsn_cd (str): [필수] 매도매수구분코드 (01 : 매도, 02 : 매수)
ord_dvsn_cd (str): [필수] 주문구분코드 (00 : 지정가, 01 : 시장가, 02 : 조건부지정가, 05 : 장전 시간외)
ord_objt_cblc_dvsn_cd (str): [필수] 주문대상잔고구분코드 (10: 현금, 12~28: 각종 대출/상환코드)
loan_dt (Optional[str]): 대출일자
rsvn_ord_end_dt (Optional[str]): 예약주문종료일자 (YYYYMMDD, 익영업일부터 최대 30일 이내)
ldng_dt (Optional[str]): 대여일자",pd.DataFrame: 예약주문 결과 데이터,"     df = order_resv(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, pdno=""005930"", ord_qty=""1"", ord_unpr=""55000"", sll_buy_dvsn_cd=""02"", ord_dvsn_cd=""00"", ord_objt_cblc_dvsn_cd=""10"")
     print(df)","{
    'RSVN_ORD_SEQ': '예약주문 순번'
}","[""내일 아침에 삼성전자 10주 시장가로 매수 예약해줘."", ""SK하이닉스 5주를 다음주 월요일까지 매일 지정가로 매도 예약하고 싶어."", ""장전 시간외로 삼성전자 1주 매수 예약 걸어줘."", ""내일 장 시작할 때 바로 주문이 나가게 예약할 수 있어?"", ""예약주문 접수하고 예약주문 순번 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_resv/order_resv.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_resv/chk_order_resv.py
domestic_stock,주문/계좌,퇴직연금 미체결내역,REST,GET,/uapi/domestic-stock/v1/trading/pension/inquire-daily-ccld,v1_국내주식-033,pension_inquire_daily_ccld,[국내주식] 주문/계좌 > 퇴직연금 미체결내역[v1_국내주식-033] ※ 55번 계좌(DC가입자계좌)의 경우 해당 API 이용이 불가합니다. KIS Developers API의 경우 HTS ID에 반드시 연결되어있어야만 API 신청 및 앱정보 발급이 가능한 서비스로 개발되어서 실물계좌가 아닌 55번 계좌는 API 이용이 불가능한 점 양해 부탁드립니다.,"cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 29)
user_dvsn_cd (str): [필수] 사용자구분코드 (ex. %%)
sll_buy_dvsn_cd (str): [필수] 매도매수구분코드 (ex. 00: 전체, 01: 매도, 02: 매수)
ccld_nccs_dvsn (str): [필수] 체결미체결구분 (ex. %%: 전체, 01: 체결, 02: 미체결)
inqr_dvsn_3 (str): [필수] 조회구분3 (ex. 00: 전체)
FK100 (str): 연속조회검색조건100
NK100 (str): 연속조회키100
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한",pd.DataFrame: 퇴직연금 미체결내역 데이터,"     df = pension_inquire_daily_ccld(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, user_dvsn_cd=""%%"", sll_buy_dvsn_cd=""00"", ccld_nccs_dvsn=""%%"", inqr_dvsn_3=""00"")
     print(df)","{
    'ord_gno_brno': '주문채번지점번호',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'trad_dvsn_name': '매매구분명',
    'odno': '주문번호',
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'ord_unpr': '주문단가',
    'ord_qty': '주문수량',
    'tot_ccld_qty': '총체결수량',
    'nccs_qty': '미체결수량',
    'ord_dvsn_cd': '주문구분코드',
    'ord_dvsn_name': '주문구분명',
    'orgn_odno': '원주문번호',
    'ord_tmd': '주문시각',
    'objt_cust_dvsn_name': '대상고객구분명',
    'pchs_avg_pric': '매입평균가격'
}","[""내 퇴직연금 계좌의 미체결 내역 보여줘."", ""어제 퇴직연금으로 주문한 삼성전자 체결됐는지 확인해줘."", ""아직 체결 안 된 내 퇴직연금 주문이 몇 주나 남았는지 미체결수량 알려줘."", ""내 퇴직연금 미체결 주문들의 주문구분명과 주문시각 보여줘."", ""내 퇴직연금 계좌의 모든 미체결 내역 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/pension_inquire_daily_ccld/pension_inquire_daily_ccld.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/pension_inquire_daily_ccld/chk_pension_inquire_daily_ccld.py
domestic_stock,주문/계좌,주식예약주문조회,REST,GET,/uapi/domestic-stock/v1/trading/order-resv-ccnl,v1_국내주식-020,order_resv_ccnl,"국내예약주문 처리내역 조회 API 입니다. 실전계좌/모의계좌의 경우, 한 번의 호출에 최대 20건까지 확인 가능하며, 이후의 값은 연속조회를 통해 확인하실 수 있습니다.","rsvn_ord_ord_dt (str): [필수] 예약주문시작일자
rsvn_ord_end_dt (str): [필수] 예약주문종료일자
tmnl_mdia_kind_cd (str): [필수] 단말매체종류코드 (ex. 00)
cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 01)
prcs_dvsn_cd (str): [필수] 처리구분코드 (ex. 0)
cncl_yn (str): [필수] 취소여부 (ex. Y)
rsvn_ord_seq (str): 예약주문순번
pdno (str): 상품번호 (ex. 005930)
sll_buy_dvsn_cd (str): 매도매수구분코드 (ex. 01)
FK200 (str): 연속조회검색조건200
NK200 (str): 연속조회키200
tr_cont (str): 연속거래여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한",pd.DataFrame: 주식예약주문조회 데이터,"     df = order_resv_ccnl(
         rsvn_ord_ord_dt=""20220729"",
         rsvn_ord_end_dt=""20220810"", 
         tmnl_mdia_kind_cd=""00"",
         cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod,
         prcs_dvsn_cd=""0"",
         cncl_yn=""Y""
     )
     print(df)","{
    'rsvn_ord_seq': '예약주문 순번',
    'rsvn_ord_ord_dt': '예약주문주문일자',
    'rsvn_ord_rcit_dt': '예약주문접수일자',
    'pdno': '상품번호',
    'ord_dvsn_cd': '주문구분코드',
    'ord_rsvn_qty': '주문예약수량',
    'tot_ccld_qty': '총체결수량',
    'cncl_ord_dt': '취소주문일자',
    'ord_tmd': '주문시각',
    'ctac_tlno': '연락전화번호',
    'rjct_rson2': '거부사유2',
    'odno': '주문번호',
    'rsvn_ord_rcit_tmd': '예약주문접수시각',
    'kor_item_shtn_name': '한글종목단축명',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'ord_rsvn_unpr': '주문예약단가',
    'tot_ccld_amt': '총체결금액',
    'loan_dt': '대출일자',
    'cncl_rcit_tmd': '취소접수시각',
    'prcs_rslt': '처리결과',
    'ord_dvsn_name': '주문구분명',
    'tmnl_mdia_kind_cd': '단말매체종류코드',
    'rsvn_end_dt': '예약종료일자'
}","[""지난주에 예약한 주식 주문들 내역 좀 보여줘."", ""내가 취소했던 예약 주문 기록도 볼 수 있어?"", ""어제 예약한 주문이 왜 거부됐는지 거부사유 알려줘."", ""지난달에 예약했던 모든 주문의 처리결과 보여줘."", ""예약주문 내역에서 총체결수량과 총체결금액 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_resv_ccnl/order_resv_ccnl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_resv_ccnl/chk_order_resv_ccnl.py
domestic_stock,주문/계좌,기간별계좌권리현황조회,REST,GET,/uapi/domestic-stock/v1/trading/period-rights,국내주식-211,period_rights,"기간별계좌권리현황조회 API입니다. 한국투자 HTS(eFriend Plus) > [7344] 권리유형별 현황조회 화면을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다.","inqr_dvsn (str): [필수] 조회구분 (ex. 03)
cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 01 or 22)
inqr_strt_dt (str): [필수] 조회시작일자 (ex. 20250101)
inqr_end_dt (str): [필수] 조회종료일자 (ex. 20250103)
cust_rncno25 (str): 고객실명확인번호25
hmid (str): 홈넷ID
rght_type_cd (str): 권리유형코드
pdno (str): 상품번호
prdt_type_cd (str): 상품유형코드
NK100 (str): 연속조회키100
FK100 (str): 연속조회검색조건100
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한",pd.DataFrame: 기간별계좌권리현황 데이터,"     df = period_rights(inqr_dvsn=""03"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, inqr_strt_dt=""20250101"", inqr_end_dt=""20250103"")
     print(df)","{
    'acno10': '계좌번호10',
    'rght_type_cd': '권리유형코드',
    'bass_dt': '기준일자',
    'rght_cblc_type_cd': '권리잔고유형코드',
    'rptt_pdno': '대표상품번호',
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'shtn_pdno': '단축상품번호',
    'prdt_name': '상품명',
    'cblc_qty': '잔고수량',
    'last_alct_qty': '최종배정수량',
    'excs_alct_qty': '초과배정수량',
    'tot_alct_qty': '총배정수량',
    'last_ftsk_qty': '최종단수주수량',
    'last_alct_amt': '최종배정금액',
    'last_ftsk_chgs': '최종단수주대금',
    'rdpt_prca': '상환원금',
    'dlay_int_amt': '지연이자금액',
    'lstg_dt': '상장일자',
    'sbsc_end_dt': '청약종료일자',
    'cash_dfrm_dt': '현금지급일자',
    'rqst_qty': '신청수량',
    'rqst_amt': '신청금액',
    'rqst_dt': '신청일자',
    'rfnd_dt': '환불일자',
    'rfnd_amt': '환불금액',
    'lstg_stqt': '상장주수',
    'tax_amt': '세금금액',
    'sbsc_unpr': '청약단가'
}","[""이번 달 내 계좌의 권리 발생 현황 알려줘."", ""내가 가진 종목 중에 배당락일이 다가오는게 있는지 궁금해."", ""삼성전자 무상증자로 받은 주식이 언제 입고되는지 최종배정수량과 함께 알려줘."", ""내가 보유한 종목들의 현금지급일자 알려줘."", ""내 계좌의 모든 권리 발생 내역과 기준일자 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/period_rights/period_rights.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/period_rights/chk_period_rights.py
domestic_stock,주문/계좌,퇴직연금 예수금조회,REST,GET,/uapi/domestic-stock/v1/trading/pension/inquire-deposit,v1_국내주식-035,pension_inquire_deposit,​※ 55번 계좌(DC가입자계좌)의 경우 해당 API 이용이 불가합니다. KIS Developers API의 경우 HTS ID에 반드시 연결되어있어야만 API 신청 및 앱정보 발급이 가능한 서비스로 개발되어서 실물계좌가 아닌 55번 계좌는 API 이용이 불가능한 점 양해 부탁드립니다.,"cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 29)
acca_dvsn_cd (str): [필수] 적립금구분코드 (ex. 00)",pd.DataFrame: 퇴직연금 예수금 데이터,"     df = pension_inquire_deposit(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, acca_dvsn_cd=""00"")
     print(df)","{
    'dnca_tota': '예수금총액',
    'nxdy_excc_amt': '익일정산액',
    'nxdy_sttl_amt': '익일결제금액',
    'nx2_day_sttl_amt': '2익일결제금액'
}","[""내 퇴직연금 계좌 예수금이 얼마야?"", ""내 DC 계좌의 총 예수금이 궁금해."", ""내 퇴직연금 계좌의 익일정산액과 2익일결제금액 알려줘."", ""내 퇴직연금 계좌의 예수금총액 보여줘."", ""내 퇴직연금 계좌의 예수금 현황 조회해줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/pension_inquire_deposit/pension_inquire_deposit.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/pension_inquire_deposit/chk_pension_inquire_deposit.py
domestic_stock,주문/계좌,퇴직연금 체결기준잔고,REST,GET,/uapi/domestic-stock/v1/trading/pension/inquire-present-balance,v1_국내주식-032,pension_inquire_present_balance,[국내주식] 주문/계좌 > 퇴직연금 체결기준잔고[v1_국내주식-032] ※ 55번 계좌(DC가입자계좌)의 경우 해당 API 이용이 불가합니다. KIS Developers API의 경우 HTS ID에 반드시 연결되어있어야만 API 신청 및 앱정보 발급이 가능한 서비스로 개발되어서 실물계좌가 아닌 55번 계좌는 API 이용이 불가능한 점 양해 부탁드립니다.,"cano (str): [필수] 종합계좌번호 (ex. '12345678')
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. '29')
user_dvsn_cd (str): [필수] 상품번호 (ex. '00')
FK100 (str): 연속조회검색조건100
NK100 (str): 연속조회키100","Tuple[pd.DataFrame, pd.DataFrame]: (output1, output2) 데이터프레임 튜플","     df1, df2 = pension_inquire_present_balance(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, user_dvsn_cd=""00"")
     print(df1)
     print(df2)","{
    'cblc_dvsn': '잔고구분',
    'cblc_dvsn_name': '잔고구분명',
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'hldg_qty': '보유수량',
    'slpsb_qty': '매도가능수량',
    'pchs_avg_pric': '매입평균가격',
    'evlu_pfls_amt': '평가손익금액',
    'evlu_pfls_rt': '평가손익율',
    'prpr': '현재가',
    'evlu_amt': '평가금액',
    'pchs_amt': '매입금액',
    'cblc_weit': '잔고비중',
    'pchs_amt_smtl_amt': '매입금액합계금액',
    'evlu_amt_smtl_amt': '평가금액합계금액',
    'evlu_pfls_smtl_amt': '평가손익합계금액',
    'trad_pfls_smtl': '매매손익합계',
    'thdt_tot_pfls_amt': '당일총손익금액',
    'pftrt': '수익률'
}","[""내 퇴직연금 계좌의 체결 기준 잔고 보여줘."", ""내가 가진 펀드들 수익률 좀 확인하고 싶어."", ""내 퇴직연금 계좌의 총 평가손익 합계와 수익률 알려줘."", ""내가 보유한 KODEX 200 ETF의 평가손익율과 잔고비중 알려줘."", ""내 퇴직연금 계좌의 당일총손익금액 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/pension_inquire_present_balance/pension_inquire_present_balance.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/pension_inquire_present_balance/chk_pension_inquire_present_balance.py
domestic_stock,주문/계좌,주식예약주문정정취소,REST,POST,/uapi/domestic-stock/v1/trading/order-resv-rvsecncl,"v1_국내주식-018,019",order_resv_rvsecncl,"국내주식 예약주문 정정/취소 API 입니다. *  정정주문은 취소주문에 비해 필수 입력값이 추가 됩니다. 하단의 입력값을 참조하시기 바랍니다. ※ POST API의 경우 BODY값의 key값들을 대문자로 작성하셔야 합니다. (EX. ""CANO"" : ""12345678"", ""ACNT_PRDT_CD"": ""01"",...)","cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드
rsvn_ord_seq (str): [필수] 예약주문순번
rsvn_ord_orgno (str): [필수] 예약주문조직번호
rsvn_ord_ord_dt (str): [필수] 예약주문주문일자
ord_type (str): [필수] 주문구분 (ex. cancel:취소, modify:정정)
pdno (Optional[str]): 종목코드
ord_qty (Optional[str]): 주문수량
ord_unpr (Optional[str]): 주문단가
sll_buy_dvsn_cd (Optional[str]): 매도매수구분코드 (ex. 01:매도, 02:매수)
ord_dvsn_cd (Optional[str]): 주문구분코드 (ex. 00:지정가, 01:시장가, 02:조건부지정가, 05:장전 시간외)
ord_objt_cblc_dvsn_cd (Optional[str]): 주문대상잔고구분코드 (ex. 10 : 현금, 12 : 주식담보대출, ... 28 : 자기대주상환)
loan_dt (Optional[str]): 대출일자
rsvn_ord_end_dt (Optional[str]): 예약주문종료일자
ctal_tlno (Optional[str]): 연락전화번호",pd.DataFrame: 주식예약주문정정취소 결과 데이터,"     df = order_resv_rvsecncl(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, rsvn_ord_seq=""88793"", rsvn_ord_orgno=""123"", rsvn_ord_ord_dt=""20250113"", ord_type=""cancel"")
     print(df)","{
    'nrml_prcs_yn': '정상처리여부'
}","[""아까 예약한 삼성전자 주문 취소해줘."", ""예약 주문 가격을 수정하고 싶어."", ""오전에 예약한 SK하이닉스 주문을 취소하고 싶어."", ""삼성전자 예약 주문 가격을 75000원으로 정정해줘."", ""예약주문 정정이 성공적으로 처리됐는지 확인해줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_resv_rvsecncl/order_resv_rvsecncl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_stock/order_resv_rvsecncl/chk_order_resv_rvsecncl.py
domestic_bond,기본시세,장내채권현재가(호가),REST,GET,/uapi/domestic-bond/v1/quotations/inquire-asking-price,국내주식-132,inquire_asking_price,[장내채권] 기본시세 장내채권현재가(호가)[국내주식-132] 장내채권현재가(호가) API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): 시장 분류 코드 (B 입력)
fid_input_iscd (str): 채권종목코드 (ex KR2033022D33)
tr_cont (str): 연속 거래 여부 (기본값: """")
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임 (기본값: None)
depth (int): 현재 재귀 깊이 (기본값: 0)
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 장내채권현재가(호가) 데이터,"     df = inquire_asking_price(fid_cond_mrkt_div_code=""B"", fid_input_iscd=""KR2033022D33"")
     print(df)","{
    'aspr_acpt_hour': '호가 접수 시간',
    'bond_askp1': '채권 매도호가1',
    'bond_askp2': '채권 매도호가2',
    'bond_askp3': '채권 매도호가3',
    'bond_askp4': '채권 매도호가4',
    'bond_askp5': '채권 매도호가5',
    'bond_bidp1': '채권 매수호가1',
    'bond_bidp2': '채권 매수호가2',
    'bond_bidp3': '채권 매수호가3',
    'bond_bidp4': '채권 매수호가4',
    'bond_bidp5': '채권 매수호가5',
    'askp_rsqn1': '매도호가 잔량1',
    'askp_rsqn2': '매도호가 잔량2',
    'askp_rsqn3': '매도호가 잔량3',
    'askp_rsqn4': '매도호가 잔량4',
    'askp_rsqn5': '매도호가 잔량5',
    'bidp_rsqn1': '매수호가 잔량1',
    'bidp_rsqn2': '매수호가 잔량2',
    'bidp_rsqn3': '매수호가 잔량3',
    'bidp_rsqn4': '매수호가 잔량4',
    'bidp_rsqn5': '매수호가 잔량5',
    'total_askp_rsqn': '총 매도호가 잔량',
    'total_bidp_rsqn': '총 매수호가 잔량',
    'ntby_aspr_rsqn': '순매수 호가 잔량',
    'seln_ernn_rate1': '매도 수익 비율1',
    'seln_ernn_rate2': '매도 수익 비율2',
    'seln_ernn_rate3': '매도 수익 비율3',
    'seln_ernn_rate4': '매도 수익 비율4',
    'seln_ernn_rate5': '매도 수익 비율5',
    'shnu_ernn_rate1': '매수2 수익 비율1',
    'shnu_ernn_rate2': '매수2 수익 비율2',
    'shnu_ernn_rate3': '매수2 수익 비율3',
    'shnu_ernn_rate4': '매수2 수익 비율4',
    'shnu_ernn_rate5': '매수2 수익 비율5'
}","[""국고채 3년물 현재 호가창 보여줘."", ""특정 회사채의 매수/매도 호가 상황이 궁금해."", ""국고채 10년물의 매도호가 잔량과 매수호가 잔량 알려줘."", ""지금 이 채권을 사면 수익비율이 얼마나 돼?"", ""국고채 3년물 호가창에서 총 매도호가 잔량 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_asking_price/inquire_asking_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_asking_price/chk_inquire_asking_price.py
domestic_bond,기본시세,장내채권 발행정보,REST,GET,/uapi/domestic-bond/v1/quotations/issue-info,국내주식-156,issue_info,[장내채권] 기본시세 장내채권 발행정보[국내주식-156] 장내채권 발행정보 API를 호출하여 DataFrame으로 반환합니다.,"pdno (str): 채권 종목번호(ex. KR6449111CB8)
prdt_type_cd (str): Unique key(302)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 장내채권 발행정보 데이터,"     df = issue_info(""KR6449111CB8"", ""302"")
     print(df)","{
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'prdt_name': '상품명',
    'prdt_eng_name': '상품영문명',
    'ivst_heed_prdt_yn': '투자유의상품여부',
    'exts_yn': '연장여부',
    'bond_clsf_cd': '채권분류코드',
    'bond_clsf_kor_name': '채권분류한글명',
    'papr': '액면가',
    'int_mned_dvsn_cd': '이자월말구분코드',
    'rvnu_shap_cd': '매출형태코드',
    'issu_amt': '발행금액',
    'lstg_rmnd': '상장잔액',
    'int_dfrm_mcnt': '이자지급개월수',
    'bond_int_dfrm_mthd_cd': '채권이자지급방법코드',
    'splt_rdpt_rcnt': '분할상환횟수',
    'prca_dfmt_term_mcnt': '원금거치기간개월수',
    'int_anap_dvsn_cd': '이자선후급구분코드',
    'bond_rght_dvsn_cd': '채권권리구분코드',
    'prdt_pclc_text': '상품특성내용',
    'prdt_abrv_name': '상품약어명',
    'prdt_eng_abrv_name': '상품영문약어명',
    'sprx_psbl_yn': '분리과세가능여부',
    'pbff_pplc_ofrg_mthd_cd': '공모사모모집방법코드',
    'cmco_cd': '주간사코드',
    'issu_istt_cd': '발행기관코드',
    'issu_istt_name': '발행기관명',
    'pnia_dfrm_agcy_istt_cd': '원리금지급대행기관코드',
    'dsct_ec_rt': '할인할증율',
    'srfc_inrt': '표면이율',
    'expd_rdpt_rt': '만기상환율',
    'expd_asrc_erng_rt': '만기보장수익율',
    'bond_grte_istt_name': '채권보증기관명',
    'int_dfrm_day_type_cd': '이자지급일유형코드',
    'ksd_int_calc_unit_cd': '증권예탁결제원이자계산단위코드',
    'int_wunt_uder_prcs_dvsn_cd': '이자원화단위미만처리구분코드',
    'rvnu_dt': '매출일자',
    'issu_dt': '발행일자',
    'lstg_dt': '상장일자',
    'expd_dt': '만기일자',
    'rdpt_dt': '상환일자',
    'sbst_pric': '대용가격',
    'rgbf_int_dfrm_dt': '직전이자지급일자',
    'nxtm_int_dfrm_dt': '차기이자지급일자',
    'frst_int_dfrm_dt': '최초이자지급일자',
    'ecis_pric': '행사가격',
    'rght_stck_std_pdno': '권리주식표준상품번호',
    'ecis_opng_dt': '행사개시일자',
    'ecis_end_dt': '행사종료일자',
    'bond_rvnu_mthd_cd': '채권매출방법코드',
    'oprt_stfno': '조작직원번호',
    'oprt_stff_name': '조작직원명',
    'rgbf_int_dfrm_wday': '직전이자지급요일',
    'nxtm_int_dfrm_wday': '차기이자지급요일',
    'kis_crdt_grad_text': '한국신용평가신용등급내용',
    'kbp_crdt_grad_text': '한국채권평가신용등급내용',
    'nice_crdt_grad_text': '한국신용정보신용등급내용',
    'fnp_crdt_grad_text': '에프앤자산평가신용등급내용',
    'dpsi_psbl_yn': '예탁가능여부',
    'pnia_int_calc_unpr': '원리금이자계산단가',
    'prcm_idx_bond_yn': '물가지수채권여부',
    'expd_exts_srdp_rcnt': '만기연장분할상환횟수',
    'expd_exts_srdp_rt': '만기연장분할상환율',
    'loan_psbl_yn': '대출가능여부',
    'grte_dvsn_cd': '보증구분코드',
    'fnrr_rank_dvsn_cd': '선후순위구분코드',
    'krx_lstg_abol_dvsn_cd': '한국거래소상장폐지구분코드',
    'asst_rqdi_dvsn_cd': '자산유동화구분코드',
    'opcb_dvsn_cd': '옵션부사채구분코드',
    'crfd_item_yn': '크라우드펀딩종목여부',
    'crfd_item_rstc_cclc_dt': '크라우드펀딩종목제한해지일자',
    'bond_nmpr_unit_pric': '채권호가단위가격',
    'ivst_heed_bond_dvsn_name': '투자유의채권구분명',
    'add_erng_rt': '추가수익율',
    'add_erng_rt_aply_dt': '추가수익율적용일자',
    'bond_tr_stop_dvsn_cd': '채권거래정지구분코드',
    'ivst_heed_bond_dvsn_cd': '투자유의채권구분코드',
    'pclr_cndt_text': '특이조건내용',
    'hbbd_yn': '하이브리드채권여부',
    'cdtl_cptl_scty_type_cd': '조건부자본증권유형코드',
    'elec_scty_yn': '전자증권여부',
    'sq1_clop_ecis_opng_dt': '1차콜옵션행사개시일자',
    'frst_erlm_stfno': '최초등록직원번호',
    'frst_erlm_dt': '최초등록일자',
    'frst_erlm_tmd': '최초등록시각',
    'tlg_rcvg_dtl_dtime': '전문수신상세일시'
}","[""이 회사채의 발행 정보가 궁금해."", ""국고채 10년물의 표면이율이 몇 프로야?"", ""이 채권의 만기일과 만기상환율 알려줘."", ""이 회사채의 신용등급 내용 보여줘."", ""국고채 10년물의 발행기관명 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/issue_info/issue_info.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/issue_info/chk_issue_info.py
domestic_bond,기본시세,장내채권현재가(시세),REST,GET,/uapi/domestic-bond/v1/quotations/inquire-price,국내주식-200,inquire_price,[장내채권] 기본시세 장내채권현재가(시세)[국내주식-200] 장내채권현재가(시세) API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): 조건시장분류코드 (예: 'B')
fid_input_iscd (str): 입력종목코드 (예: 'KR2033022D33')
tr_cont (str): 연속 거래 여부 (기본값: """")
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임 (기본값: None)
depth (int): 현재 재귀 깊이 (기본값: 0)
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 장내채권현재가(시세) 데이터,"     df = inquire_price('B', 'KR2033022D33')
     print(df)","{
    'stnd_iscd': '표준종목코드',
    'hts_kor_isnm': 'HTS한글종목명',
    'bond_prpr': '채권현재가',
    'prdy_vrss_sign': '전일대비부호',
    'bond_prdy_vrss': '채권전일대비',
    'prdy_ctrt': '전일대비율',
    'acml_vol': '누적거래량',
    'bond_prdy_clpr': '채권전일종가',
    'bond_oprc': '채권시가2',
    'bond_hgpr': '채권고가',
    'bond_lwpr': '채권저가',
    'ernn_rate': '수익비율',
    'oprc_ert': '시가2수익률',
    'hgpr_ert': '최고가수익률',
    'lwpr_ert': '최저가수익률',
    'bond_mxpr': '채권상한가',
    'bond_llam': '채권하한가'
}","[""국고채 5년물 현재가 얼마야?"", ""오늘 회사채 시세가 어떻게 변했는지 궁금해."", ""오늘 이 채권의 최고가, 최저가, 그리고 수익비율 알려줘."", ""국고채 3년물의 오늘 시가와 전일종가 알려줘."", ""이 회사채의 오늘 누적거래량 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_price/inquire_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_price/chk_inquire_price.py
domestic_bond,기본시세,장내채권 기본조회,REST,GET,/uapi/domestic-bond/v1/quotations/search-bond-info,국내주식-129,search_bond_info,[장내채권] 기본시세 장내채권 기본조회[국내주식-129] 장내채권 기본조회 API를 호출하여 DataFrame으로 반환합니다.,"pdno (str): 상품번호 (필수)
prdt_type_cd (str): 상품유형코드 (필수)
tr_cont (str): 연속 거래 여부 (기본값: """")
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 장내채권 기본조회 데이터,"     df = search_bond_info(""KR2033022D33"", ""302"")
     print(df)","{
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'ksd_bond_item_name': '증권예탁결제원채권종목명',
    'ksd_bond_item_eng_name': '증권예탁결제원채권종목영문명',
    'ksd_bond_lstg_type_cd': '증권예탁결제원채권상장유형코드',
    'ksd_ofrg_dvsn_cd': '증권예탁결제원모집구분코드',
    'ksd_bond_int_dfrm_dvsn_cd': '증권예탁결제원채권이자지급구분',
    'issu_dt': '발행일자',
    'rdpt_dt': '상환일자',
    'rvnu_dt': '매출일자',
    'iso_crcy_cd': '통화코드',
    'mdwy_rdpt_dt': '중도상환일자',
    'ksd_rcvg_bond_dsct_rt': '증권예탁결제원수신채권할인율',
    'ksd_rcvg_bond_srfc_inrt': '증권예탁결제원수신채권표면이율',
    'bond_expd_rdpt_rt': '채권만기상환율',
    'ksd_prca_rdpt_mthd_cd': '증권예탁결제원원금상환방법코드',
    'int_caltm_mcnt': '이자계산기간개월수',
    'ksd_int_calc_unit_cd': '증권예탁결제원이자계산단위코드',
    'uval_cut_dvsn_cd': '절상절사구분코드',
    'uval_cut_dcpt_dgit': '절상절사소수점자릿수',
    'ksd_dydv_caltm_aply_dvsn_cd': '증권예탁결제원일할계산기간적용',
    'dydv_calc_dcnt': '일할계산일수',
    'bond_expd_asrc_erng_rt': '채권만기보장수익율',
    'padf_plac_hdof_name': '원리금지급장소본점명',
    'lstg_dt': '상장일자',
    'lstg_abol_dt': '상장폐지일자',
    'ksd_bond_issu_mthd_cd': '증권예탁결제원채권발행방법코드',
    'laps_indf_yn': '경과이자지급여부',
    'ksd_lhdy_pnia_dfrm_mthd_cd': '증권예탁결제원공휴일원리금지급',
    'frst_int_dfrm_dt': '최초이자지급일자',
    'ksd_prcm_lnkg_gvbd_yn': '증권예탁결제원물가연동국고채여',
    'dpsi_end_dt': '예탁종료일자',
    'dpsi_strt_dt': '예탁시작일자',
    'dpsi_psbl_yn': '예탁가능여부',
    'atyp_rdpt_bond_erlm_yn': '비정형상환채권등록여부',
    'dshn_occr_yn': '부도발생여부',
    'expd_exts_yn': '만기연장여부',
    'pclr_ptcr_text': '특이사항내용',
    'dpsi_psbl_excp_stat_cd': '예탁가능예외상태코드',
    'expd_exts_srdp_rcnt': '만기연장분할상환횟수',
    'expd_exts_srdp_rt': '만기연장분할상환율',
    'expd_rdpt_rt': '만기상환율',
    'expd_asrc_erng_rt': '만기보장수익율',
    'bond_int_dfrm_mthd_cd': '채권이자지급방법코드',
    'int_dfrm_day_type_cd': '이자지급일유형코드',
    'prca_dfmt_term_mcnt': '원금거치기간개월수',
    'splt_rdpt_rcnt': '분할상환횟수',
    'rgbf_int_dfrm_dt': '직전이자지급일자',
    'nxtm_int_dfrm_dt': '차기이자지급일자',
    'sprx_psbl_yn': '분리과세가능여부',
    'ictx_rt_dvsn_cd': '소득세율구분코드',
    'bond_clsf_cd': '채권분류코드',
    'bond_clsf_kor_name': '채권분류한글명',
    'int_mned_dvsn_cd': '이자월말구분코드',
    'pnia_int_calc_unpr': '원리금이자계산단가',
    'frn_intr': 'FRN금리',
    'aply_day_prcm_idx_lnkg_cefc': '적용일물가지수연동계수',
    'ksd_expd_dydv_calc_bass_cd': '증권예탁결제원만기일할계산기준',
    'expd_dydv_calc_dcnt': '만기일할계산일수',
    'ksd_cbbw_dvsn_cd': '증권예탁결제원신종사채구분코드',
    'crfd_item_yn': '크라우드펀딩종목여부',
    'pnia_bank_ofdy_dfrm_mthd_cd': '원리금은행휴무일지급방법코드',
    'qib_yn': 'QIB여부',
    'qib_cclc_dt': 'QIB해지일자',
    'csbd_yn': '영구채여부',
    'csbd_cclc_dt': '영구채해지일자',
    'ksd_opcb_yn': '증권예탁결제원옵션부사채여부',
    'ksd_sodn_yn': '증권예탁결제원후순위채권여부',
    'ksd_rqdi_scty_yn': '증권예탁결제원유동화증권여부',
    'elec_scty_yn': '전자증권여부',
    'rght_ecis_mbdy_dvsn_cd': '권리행사주체구분코드',
    'int_rkng_mthd_dvsn_cd': '이자산정방법구분코드',
    'ofrg_dvsn_cd': '모집구분코드',
    'ksd_tot_issu_amt': '증권예탁결제원총발행금액',
    'next_indf_chk_ecls_yn': '다음이자지급체크제외여부',
    'ksd_bond_intr_dvsn_cd': '증권예탁결제원채권금리구분코드',
    'ksd_inrt_aply_dvsn_cd': '증권예탁결제원이율적용구분코드',
    'krx_issu_istt_cd': 'KRX발행기관코드',
    'ksd_indf_frqc_uder_calc_cd': '증권예탁결제원이자지급주기미만',
    'ksd_indf_frqc_uder_calc_dcnt': '증권예탁결제원이자지급주기미만',
    'tlg_rcvg_dtl_dtime': '전문수신상세일시'
}","[""이 회사채의 기본 정보 조회해줘."", ""국고채 3년물의 표준코드가 어떻게 돼?"", ""이 채권의 이자 지급 주기와 최초이자지급일자 알려줘."", ""국고채 5년물의 채권분류한글명 보여줘."", ""이 회사채의 상장일과 상장폐지일자 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/search_bond_info/search_bond_info.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/search_bond_info/chk_search_bond_info.py
domestic_bond,기본시세,장내채권현재가(체결),REST,GET,/uapi/domestic-bond/v1/quotations/inquire-ccnl,국내주식-201,inquire_ccnl,[장내채권] 기본시세 장내채권현재가(체결)[국내주식-201] 장내채권현재가(체결) API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): 조건시장분류코드 (예: 'B')
fid_input_iscd (str): 입력종목코드 (예: 'KR2033022D33')
tr_cont (str): 연속 거래 여부 (기본값: """")
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임 (기본값: None)
depth (int): 현재 재귀 깊이 (기본값: 0)
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 장내채권현재가(체결) 데이터,"     df = inquire_ccnl('B', 'KR2033022D33')
     print(df)","{
    'output1': '응답상세',
    'stck_cntg_hour': '주식 체결 시간',
    'bond_prpr': '채권 현재가',
    'bond_prdy_vrss': '채권 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'cntg_vol': '체결 거래량',
    'acml_vol': '누적 거래량'
}","[""오늘 국고채 3년물 체결 내역 보여줘."", ""이 회사채가 오늘 얼마에 거래됐는지 궁금해."", ""오늘 이 채권의 누적 거래량과 현재가 알려줘."", ""국고채 5년물의 시간대별 체결가와 체결 거래량 보여줘."", ""이 회사채의 전일 대비율 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_ccnl/inquire_ccnl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_ccnl/chk_inquire_ccnl.py
domestic_bond,기본시세,장내채권현재가(일별),REST,GET,/uapi/domestic-bond/v1/quotations/inquire-daily-price,국내주식-202,inquire_daily_price,[장내채권] 기본시세 장내채권현재가(일별)[국내주식-202] 장내채권현재가(일별) API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): 조건시장분류코드 (예: 'B')
fid_input_iscd (str): 입력종목코드 (예: 'KR2033022D33')
tr_cont (str): 연속 거래 여부 (기본값: """")
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임 (기본값: None)
depth (int): 현재 재귀 깊이 (기본값: 0)
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 장내채권현재가(일별) 데이터,"     df = inquire_daily_price('B', 'KR2033022D33')
     print(df)","{
    'output1': '응답상세',
    'stck_bsop_date': '주식영업일자',
    'bond_prpr': '채권현재가',
    'bond_prdy_vrss': '채권전일대비',
    'prdy_vrss_sign': '전일대비부호',
    'prdy_ctrt': '전일대비율',
    'acml_vol': '누적거래량',
    'bond_oprc': '채권시가2',
    'bond_hgpr': '채권고가',
    'bond_lwpr': '채권저가'
}","[""오늘 국고채 10년물 일별 시세 보여줘."", ""이 회사채의 최근 한달간 가격 추이가 궁금해."", ""어제 이 채권 종가와 누적거래량 알려줘."", ""국고채 3년물의 일별 시가, 고가, 저가, 종가 데이터 줘."", ""이 회사채의 전일대비율 일별로 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_daily_price/inquire_daily_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_daily_price/chk_inquire_daily_price.py
domestic_bond,기본시세,장내채권 평균단가조회,REST,GET,/uapi/domestic-bond/v1/quotations/avg-unit,국내주식-158,avg_unit,[장내채권] 기본시세 장내채권 평균단가조회[국내주식-158] 장내채권 평균단가조회 API를 호출하여 DataFrame으로 반환합니다.,"inqr_strt_dt (str): 조회 시작 일자 (예: '20230101')
inqr_end_dt (str): 조회 종료 일자 (예: '20230131')
pdno (str): 상품번호, 공백: 전체, 특정종목 조회시 : 종목코드
prdt_type_cd (str): 상품유형코드 (예: '302')
vrfc_kind_cd (str): 검증종류코드 (예: '00')
NK30 (str): 연속조회키30, 공백 허용
FK100 (str): 연속조회검색조건100, 공백 허용
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
dataframe3 (Optional[pd.DataFrame]): 누적 데이터프레임 (output3)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame, pd.DataFrame]: 장내채권 평균단가조회 데이터","     df1, df2, df3 = avg_unit(
         inqr_strt_dt='20230101',
         inqr_end_dt='20230131',
         pdno='KR2033022D33',
         prdt_type_cd='302',
         vrfc_kind_cd='00',
     )
     print(df1)
     print(df2)
     print(df3)","{
    'evlu_dt': '평가일자',
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'kis_unpr': '한국신용평가단가',
    'kbp_unpr': '한국채권평가단가',
    'nice_evlu_unpr': '한국신용정보평가단가',
    'fnp_unpr': '에프앤자산평가단가',
    'avg_evlu_unpr': '평균평가단가',
    'kis_crdt_grad_text': '한국신용평가신용등급내용',
    'kbp_crdt_grad_text': '한국채권평가신용등급내용',
    'nice_crdt_grad_text': '한국신용정보신용등급내용',
    'fnp_crdt_grad_text': '에프앤자산평가신용등급내용',
    'chng_yn': '변경여부',
    'kis_erng_rt': '한국신용평가수익율',
    'kbp_erng_rt': '한국채권평가수익율',
    'nice_evlu_erng_rt': '한국신용정보평가수익율',
    'fnp_erng_rt': '에프앤자산평가수익율',
    'avg_evlu_erng_rt': '평균평가수익율',
    'kis_rf_unpr': '한국신용평가RF단가',
    'kbp_rf_unpr': '한국채권평가RF단가',
    'nice_evlu_rf_unpr': '한국신용정보평가RF단가',
    'avg_evlu_rf_unpr': '평균평가RF단가',
    'evlu_dt': '평가일자',
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'kis_evlu_amt': '한국신용평가평가금액',
    'kbp_evlu_amt': '한국채권평가평가금액',
    'nice_evlu_amt': '한국신용정보평가금액',
    'fnp_evlu_amt': '에프앤자산평가평가금액',
    'avg_evlu_amt': '평균평가금액',
    'chng_yn': '변경여부',
    'output3': '응답상세',
    'evlu_dt': '평가일자',
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'kis_crcy_cd': '한국신용평가통화코드',
    'kis_evlu_unit_pric': '한국신용평가평가단위가격',
    'kis_evlu_pric': '한국신용평가평가가격',
    'kbp_crcy_cd': '한국채권평가통화코드',
    'kbp_evlu_unit_pric': '한국채권평가평가단위가격',
    'kbp_evlu_pric': '한국채권평가평가가격',
    'nice_crcy_cd': '한국신용정보통화코드',
    'nice_evlu_unit_pric': '한국신용정보평가단위가격',
    'nice_evlu_pric': '한국신용정보평가가격',
    'avg_evlu_unit_pric': '평균평가단위가격',
    'avg_evlu_pric': '평균평가가격',
    'chng_yn': '변경여부'
}","[""이 회사채의 민평 금리가 궁금해."", ""국고채 3년물의 최근 한달간 평균 평가 단가 추이를 알고 싶어."", ""어제 자 기준으로 이 채권의 평균평가수익율 알려줘."", ""국고채 5년물의 4개 평가사별 평가단가와 평균평가단가 보여줘."", ""이 회사채의 신용등급 내용과 평균평가수익율 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/avg_unit/avg_unit.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/avg_unit/chk_avg_unit.py
domestic_bond,주문/계좌,장내채권 주문체결내역,REST,GET,/uapi/domestic-bond/v1/trading/inquire-daily-ccld,국내주식-127,inquire_daily_ccld,[장내채권] 주문/계좌 장내채권 주문체결내역[국내주식-127] 장내채권 주문체결내역 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호
acnt_prdt_cd (str): 계좌상품코드
inqr_strt_dt (str): 조회시작일자 (1주일 이내)
inqr_end_dt (str): 조회종료일자 (조회 당일)
sll_buy_dvsn_cd (str): 매도매수구분코드 (%(전체), 01(매도), 02(매수))
sort_sqn_dvsn (str): 정렬순서구분 (01(주문순서), 02(주문역순))
pdno (str): 상품번호
nccs_yn (str): 미체결여부 (N(전체), C(체결), Y(미체결))
ctx_area_nk200 (str): 연속조회키200
ctx_area_fk200 (str): 연속조회검색조건200
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 장내채권 주문체결내역 데이터","     df1, df2 = inquire_daily_ccld(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         inqr_strt_dt='20230101',
         inqr_end_dt='20230107',
         sll_buy_dvsn_cd='01',
         sort_sqn_dvsn='01',
         pdno='000000000001',
         nccs_yn='N',
         ctx_area_nk200='',
         ctx_area_fk200=''
     )
     print(df1)
     print(df2)","{
    'tot_ord_qty': '총주문수량',
    'tot_ccld_qty_smtl': '총체결수량합계',
    'tot_bond_ccld_avg_unpr': '총채권체결평균단가',
    'tot_ccld_amt_smtl': '총체결금액합계',
    'ord_dt': '주문일자',
    'odno': '주문번호',
    'orgn_odno': '원주문번호',
    'ord_dvsn_name': '주문구분명',
    'sll_buy_dvsn_cd_name': '매도매수구분코드명',
    'shtn_pdno': '단축상품번호',
    'prdt_abrv_name': '상품약어명',
    'ord_qty': '주문수량',
    'bond_ord_unpr': '채권주문단가',
    'ord_tmd': '주문시각',
    'tot_ccld_qty': '총체결수량',
    'bond_avg_unpr': '채권평균단가',
    'tot_ccld_amt': '총체결금액',
    'loan_dt': '대출일자',
    'buy_dt': '매수일자',
    'samt_mket_ptci_yn_name': '소액시장참여여부명',
    'sprx_psbl_yn_ifom': '분리과세가능여부알림',
    'ord_mdia_dvsn_name': '주문매체구분묭',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'nccs_qty': '미체결수량',
    'ord_gno_brno': '주문채번지점번호'
}","[""내 계좌의 오늘 채권 주문 체결 내역 보여줘."", ""지난주에 내가 매도한 채권 내역만 조회하고 싶어."", ""내가 어제 산 회사채의 평균 체결 단가와 총체결금액 알려줘."", ""내 계좌의 미체결 채권 주문이 있는지 확인해줘."", ""오늘 체결된 내 채권 주문의 총체결수량합계 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_daily_ccld/inquire_daily_ccld.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_daily_ccld/chk_inquire_daily_ccld.py
domestic_bond,주문/계좌,장내채권 매수가능조회,REST,GET,/uapi/domestic-bond/v1/trading/inquire-psbl-order,국내주식-199,inquire_psbl_order,[장내채권] 주문/계좌 장내채권 매수가능조회[국내주식-199] 장내채권 매수가능조회 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호 (필수)
acnt_prdt_cd (str): 계좌상품코드 (필수)
pdno (str): 채권종목코드(ex KR2033022D33)
bond_ord_unpr (str): 채권주문단가 (필수)
tr_cont (str): 연속 거래 여부 (기본값: """")
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 장내채권 매수가능조회 데이터,"     df = inquire_psbl_order(""12345678"", ""01"", ""KR2033022D33"", ""1000"")
     print(df)","{
    'ord_psbl_cash': '주문가능현금',
    'ord_psbl_sbst': '주문가능대용',
    'ruse_psbl_amt': '재사용가능금액',
    'bond_ord_unpr2': '채권주문단가2',
    'buy_psbl_amt': '매수가능금액',
    'buy_psbl_qty': '매수가능수량',
    'cma_evlu_amt': 'CMA평가금액'
}","[""지금 내가 가진 현금으로 이 회사채 얼마나 살 수 있는지 매수가능금액 알려줘."", ""국고채 10년물 매수 가능한 최대 금액이 궁금해."", ""내 계좌에 있는 돈으로 이 채권을 몇 주나 살 수 있는지 매수가능수량 알려줘."", ""내 계좌의 주문가능현금과 주문가능대용금 알려줘."", ""CMA평가금액 포함해서 매수가능금액 조회해줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_psbl_order/inquire_psbl_order.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_psbl_order/chk_inquire_psbl_order.py
domestic_bond,주문/계좌,장내채권 잔고조회,REST,GET,/uapi/domestic-bond/v1/trading/inquire-balance,국내주식-198,inquire_balance,[장내채권] 주문/계좌 장내채권 잔고조회[국내주식-198] 장내채권 잔고조회 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호
acnt_prdt_cd (str): 계좌상품코드
inqr_cndt (str): 조회조건 (00: 전체, 01: 상품번호단위)
pdno (str): 상품번호 (공백 허용)
buy_dt (str): 매수일자 (공백 허용)
FK200 (str): 연속조회검색조건200
NK200 (str): 연속조회키200
tr_cont (str): 연속 거래 여부 (기본값: """")
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 장내채권 잔고조회 데이터,"     df = inquire_balance(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         inqr_cndt='00',
         pdno='',
         buy_dt='',
     )
     print(df)","{
    'pdno': '상품번호',
    'buy_dt': '매수일자',
    'buy_sqno': '매수일련번호',
    'cblc_qty': '잔고수량',
    'agrx_qty': '종합과세수량',
    'sprx_qty': '분리과세수량',
    'exdt': '만기일',
    'buy_erng_rt': '매수수익율',
    'buy_unpr': '매수단가',
    'buy_amt': '매수금액',
    'ord_psbl_qty': '주문가능수량'
}","[""내 채권 계좌 잔고 보여줘."", ""내가 보유한 채권들 목록이랑 잔고수량 좀 알려줘."", ""내가 보유한 이 회사채의 매수 단가와 매수수익율 알려줘."", ""내 계좌의 모든 보유 채권 주문가능수량 보여줘."", ""내가 보유한 국고채 3년물의 만기일 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_balance/inquire_balance.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_balance/chk_inquire_balance.py
domestic_bond,주문/계좌,장내채권 정정취소주문,REST,POST,/uapi/domestic-bond/v1/trading/order-rvsecncl,국내주식-125,order_rvsecncl,[장내채권] 주문/계좌 장내채권 정정취소주문[국내주식-125] 장내채권 정정취소주문 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호
acnt_prdt_cd (str): 계좌상품코드
pdno (str): 상품번호
orgn_odno (str): 원주문번호
ord_qty2 (str): 주문수량2
bond_ord_unpr (str): 채권주문단가
qty_all_ord_yn (str): 잔량전부주문여부
rvse_cncl_dvsn_cd (str): 정정취소구분코드
mgco_aptm_odno (str, optional): 운용사지정주문번호. Defaults to """".
ord_svr_dvsn_cd (str, optional): 주문서버구분코드. Defaults to ""0"".
ctac_tlno (str, optional): 연락전화번호. Defaults to """".",Optional[pd.DataFrame]: 장내채권 정정취소주문 데이터,"     df = order_rvsecncl(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         pdno=""KR6095572D81"",
         orgn_odno=""0000015402"",
         ord_qty2=""2"",
         bond_ord_unpr=""10460"",
         qty_all_ord_yn=""Y"",
         rvse_cncl_dvsn_cd=""01""
     )
     print(df)","{
    'KRX_FWDG_ORD_ORGNO': '한국거래소전송주문조직번호',
    'ODNO': '주문번호',
    'ORD_TMD': '주문시각'
}","[""아까 낸 채권 주문 가격 좀 수정해줘."", ""오전에 낸 국고채 매수 주문 취소할게."", ""오전에 낸 회사채 주문을 전량 취소하고 싶어."", ""국고채 매수 주문 가격을 10500원으로 정정해줘."", ""채권 주문 정정하고 새로 받은 주문번호와 주문시각 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/order_rvsecncl/order_rvsecncl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/order_rvsecncl/chk_order_rvsecncl.py
domestic_bond,주문/계좌,장내채권 매수주문,REST,POST,/uapi/domestic-bond/v1/trading/buy,국내주식-124,buy,[장내채권] 주문/계좌 장내채권 매수주문[국내주식-124] 장내채권 매수주문 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호 (8자리)
acnt_prdt_cd (str): 계좌상품코드 (2자리)
pdno (str): 상품번호 (12자리)
ord_qty2 (str): 주문수량2 (19자리)
bond_ord_unpr (str): 채권주문단가 (182자리)
samt_mket_ptci_yn (str): 소액시장참여여부 ('Y' or 'N')
bond_rtl_mket_yn (str): 채권소매시장여부 ('Y' or 'N')
idcr_stfno (str, optional): 유치자직원번호 (6자리). Defaults to """".
mgco_aptm_odno (str, optional): 운용사지정주문번호 (12자리). Defaults to """".
ord_svr_dvsn_cd (str, optional): 주문서버구분코드. Defaults to """".
ctac_tlno (str, optional): 연락전화번호. Defaults to """".",Optional[pd.DataFrame]: 장내채권 매수주문 데이터,"     df = buy(
         cano=trenv.my_acct, 
         acnt_prdt_cd=trenv.my_prod,
         pdno=""KR1234567890"", 
         ord_qty2=""10"", 
         bond_ord_unpr=""10000"",
         samt_mket_ptci_yn=""N"",
         bond_rtl_mket_yn=""Y""
     )
     print(df)","{
    'KRX_FWDG_ORD_ORGNO': '한국거래소전송주문조직번호',
    'ODNO': '주문번호',
    'ORD_TMD': '주문시각'
}","[""국고채 3년물 1000만원어치 매수 주문 넣어줘."", ""이 회사채 소액시장참여여부 'Y'로 해서 매수 주문 넣어줘."", ""지금 바로 이 국고채 살게."", ""채권 매수 주문 넣고 주문번호랑 주문시각 알려줘."", ""국고채 5년물 500만원 매수 주문해줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/buy/buy.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/buy/chk_buy.py
domestic_bond,주문/계좌,채권정정취소가능주문조회,REST,GET,/uapi/domestic-bond/v1/trading/inquire-psbl-rvsecncl,국내주식-126,inquire_psbl_rvsecncl,[장내채권] 주문/계좌 채권정정취소가능주문조회[국내주식-126] 채권정정취소가능주문조회 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호 (예: '12345678')
acnt_prdt_cd (str): 계좌상품코드 (예: '01')
ord_dt (str): 주문일자 (예: '20230101')
odno (str): 주문번호 (예: '0000000001')
ctx_area_fk200 (str): 연속조회검색조건200 (예: '조건값')
ctx_area_nk200 (str): 연속조회키200 (예: '키값')
tr_cont (str): 연속 거래 여부 (기본값: """")
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 채권정정취소가능주문조회 데이터,"     df = inquire_psbl_rvsecncl(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ord_dt='20230101',
         odno='0000000001',
         ctx_area_fk200='조건값',
         ctx_area_nk200='키값'
     )
     print(df)","{
    'odno': '주문번호',
    'pdno': '상품번호',
    'rvse_cncl_dvsn_name': '정정취소구분명',
    'ord_qty': '주문수량',
    'bond_ord_unpr': '채권주문단가',
    'ord_tmd': '주문시각',
    'tot_ccld_qty': '총체결수량',
    'tot_ccld_amt': '총체결금액',
    'ord_psbl_qty': '주문가능수량',
    'orgn_odno': '원주문번호',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'ord_dvsn_cd': '주문구분코드',
    'mgco_aptm_odno': '운용사지정주문번호',
    'samt_mket_ptci_yn': '소액시장참여여부'
}","[""내가 정정이나 취소할 수 있는 채권 주문 목록 보여줘."", ""아직 체결 안된 내 채권 주문들만 보고 싶어."", ""내가 오전에 낸 국고채 매수 주문의 주문번호와 주문수량 알려줘."", ""내 미체결 채권 주문들의 주문가능수량 보여줘."", ""내 계좌의 모든 미체결 채권 주문을 상품별로 정렬해서 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_psbl_rvsecncl/inquire_psbl_rvsecncl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/inquire_psbl_rvsecncl/chk_inquire_psbl_rvsecncl.py
domestic_bond,주문/계좌,장내채권 매도주문,REST,POST,/uapi/domestic-bond/v1/trading/sell,국내주식-123,sell,[장내채권] 주문/계좌 장내채권 매도주문[국내주식-123] 장내채권 매도주문 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호
acnt_prdt_cd (str): 계좌상품코드
ord_dvsn (str): 주문구분
pdno (str): 상품번호
ord_qty2 (str): 주문수량2
bond_ord_unpr (str): 채권주문단가
sprx_yn (str): 분리과세여부
samt_mket_ptci_yn (str): 소액시장참여여부
sll_agco_opps_sll_yn (str): 매도대행사반대매도여부
bond_rtl_mket_yn (str): 채권소매시장여부
buy_dt (str, optional): 매수일자. Defaults to """".
buy_seq (str, optional): 매수순번. Defaults to """".
mgco_aptm_odno (str, optional): 운용사지정주문번호. Defaults to """".
ord_svr_dvsn_cd (str, optional): 주문서버구분코드. Defaults to ""0"".
ctac_tlno (str, optional): 연락전화번호. Defaults to """".",Optional[pd.DataFrame]: 장내채권 매도주문 데이터,"     df = sell(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ord_dvsn=""01"",
         pdno=""KR6095572D81"",
         ord_qty2=""1"",
         bond_ord_unpr=""10000.0"",
         sprx_yn=""N"",
         samt_mket_ptci_yn=""N"",
         sll_agco_opps_sll_yn=""N"",
         bond_rtl_mket_yn=""N""
     )
     print(df)","{
    'KRX_FWDG_ORD_ORGNO': '한국거래소전송주문조직번호',
    'ODNO': '주문번호',
    'ORD_TMD': '주문시각'
}","[""내가 보유한 이 회사채 1000만원어치 매도 주문 넣어줘."", ""국고채 3년물 분리과세 'Y'로 매도 신청할게."", ""가지고 있는 이 회사채 전량 매도할게."", ""국고채 5년물 500만원 매도 주문해줘."", ""채권 매도 주문하고 주문번호랑 주문시각 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/sell/sell.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/domestic_bond/sell/chk_sell.py
overseas_futureoption,기본시세,해외선물 분봉조회,REST,GET,/uapi/overseas-futureoption/v1/quotations/inquire-time-futurechartprice,해외선물-016,inquire_time_futurechartprice,[해외선물옵션] 기본시세 해외선물 분봉조회[해외선물-016] 해외선물 분봉조회 API를 호출하여 DataFrame으로 반환합니다.,"srs_cd (str): ex) CNHU24 ※ 종목코드 ""포럼 > FAQ > 종목정보 다운로드(해외) - 해외지수선물"" 참고
exch_cd (str): CME
start_date_time (str): 공백
close_date_time (str): ex) 20230823
qry_tp (str): Q : 최초조회시 , P : 다음키(INDEX_KEY) 입력하여 조회시
qry_cnt (str): 120 (조회갯수)
qry_gap (str): 5 (분간격)
index_key (str): 다음조회(QRY_TP를 P로 입력) 시, 이전 호출의 ""output1 > index_key"" 기입하여 조회
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외선물 분봉조회 데이터","     df1, df2 = inquire_time_futurechartprice(
         srs_cd=""BONU25"",
         exch_cd=""EUREX"",
         start_date_time=""20250101"",
         close_date_time=""20250702"",
         qry_tp=""Q"",
         qry_cnt=""120"",
         qry_gap=""1"",
         index_key=""""
     )
     print(df1)
     print(df2)","{
    'ret_cnt': '자료개수',
    'last_n_cnt': 'N틱최종개수',
    'index_key': '이전조회KEY',
    'data_date': '일자',
    'data_time': '시각',
    'open_price': '시가',
    'high_price': '고가',
    'low_price': '저가',
    'last_price': '체결가격',
    'last_qntt': '체결수량',
    'vol': '누적거래수량',
    'prev_diff_flag': '전일대비구분',
    'prev_diff_price': '전일대비가격',
    'prev_diff_rate': '전일대비율'
}","[""WTI 원유 선물 5분봉 차트 보여줘."", ""유로화 선물 오늘 분봉 흐름이 어땠어?"", ""오늘 오전장 E-mini S&P500 선물의 최고가, 최저가, 그리고 누적거래수량 보여줘."", ""WTI 원유 선물의 전일대비가격과 전일대비율을 분봉으로 보여줘."", ""E-mini 나스닥100 선물 1분봉 데이터와 체결수량 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_time_futurechartprice/inquire_time_futurechartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_time_futurechartprice/chk_inquire_time_futurechartprice.py
overseas_futureoption,기본시세,해외선물종목현재가,REST,GET,/uapi/overseas-futureoption/v1/quotations/inquire-price,v1_해외선물-009,inquire_price,[해외선물옵션] 기본시세 해외선물종목현재가[v1_해외선물-009] 해외선물종목현재가 API를 호출하여 DataFrame으로 반환합니다.,"srs_cd (str): 종목코드 (예: CNHU24)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외선물종목현재가 데이터,"     df = inquire_price(srs_cd=""CNHU24"")
     print(df)","{
    'proc_date': '최종처리일자',
    'high_price': '고가',
    'proc_time': '최종처리시각',
    'open_price': '시가',
    'trst_mgn': '증거금',
    'low_price': '저가',
    'last_price': '현재가',
    'vol': '누적거래수량',
    'prev_diff_flag': '전일대비구분',
    'prev_diff_price': '전일대비가격',
    'prev_diff_rate': '전일대비율',
    'bid_qntt': '매수1수량',
    'bid_price': '매수1호가',
    'ask_qntt': '매도1수량',
    'ask_price': '매도1호가',
    'prev_price': '전일종가',
    'exch_cd': '거래소코드',
    'crc_cd': '거래통화',
    'trd_fr_date': '상장일',
    'expr_date': '만기일',
    'trd_to_date': '최종거래일',
    'remn_cnt': '잔존일수',
    'last_qntt': '체결량',
    'tot_ask_qntt': '총매도잔량',
    'tot_bid_qntt': '총매수잔량',
    'tick_size': '틱사이즈',
    'open_date': '장개시일자',
    'open_time': '장개시시각',
    'close_date': '장종료일자',
    'close_time': '장종료시각',
    'sbsnsdate': '영업일자',
    'sttl_price': '정산가'
}","[""WTI 원유 선물 현재가 얼마야?"", ""E-mini 나스닥100 선물 시세 좀 알려줘."", ""지금 유로화 선물의 매수 1호가, 매도 1호가, 그리고 총매수/매도잔량 알려줘."", ""WTI 원유 선물의 오늘 시가, 고가, 저가, 현재가 보여줘."", ""E-mini S&P500 선물의 만기일과 잔존일수 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_price/inquire_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_price/chk_inquire_price.py
overseas_futureoption,기본시세,해외옵션 호가,REST,GET,/uapi/overseas-futureoption/v1/quotations/opt-asking-price,해외선물-033,opt_asking_price,[해외선물옵션] 기본시세 해외옵션 호가[해외선물-033] 해외옵션 호가 API를 호출하여 DataFrame으로 반환합니다.,"srs_cd (str): 종목명 (예: 'OTXM24 C22000')
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외옵션 호가 데이터","     df1, df2 = opt_asking_price(srs_cd=""OTXM24 C22000"")
     print(df1)
     print(df2)","{
    'open_price': '시가',
    'high_price': '고가',
    'lowp_rice': '저가',
    'last_price': '현재가',
    'sttl_price': '정산가',
    'vol': '거래량',
    'prev_diff_price': '전일대비가',
    'prev_diff_rate': '전일대비율',
    'quot_date': '호가수신일자',
    'quot_time': '호가수신시각',
    'bid_qntt': '매수수량',
    'bid_num': '매수번호',
    'bid_price': '매수호가',
    'ask_qntt': '매도수량',
    'ask_num': '매도번호',
    'ask_price': '매도호가'
}","[""E-mini S&P500 옵션 호가창 보여줘."", ""WTI 원유 옵션 현재 매수/매도 호가 상황이 궁금해."", ""E-mini 나스닥100 옵션의 시가, 고가, 저가, 현재가 보여줘."", ""WTI 원유 옵션의 매수호가와 매수수량 알려줘."", ""E-mini S&P500 옵션의 전일대비가와 전일대비율 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/opt_asking_price/opt_asking_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/opt_asking_price/chk_opt_asking_price.py
overseas_futureoption,기본시세,해외선물 체결추이(일간),REST,GET,/uapi/overseas-futureoption/v1/quotations/daily-ccnl,해외선물-018,daily_ccnl,[해외선물옵션] 기본시세 해외선물 체결추이(일간)[해외선물-018] 해외선물 체결추이(일간) API를 호출하여 DataFrame으로 반환합니다.,"srs_cd (str): 종목코드 (예: 6AM24)
exch_cd (str): 거래소코드 (예: CME)
start_date_time (str): 조회시작일시 (공백)
close_date_time (str): 조회종료일시 (예: 20240402)
qry_tp (str): 조회구분 (Q: 최초조회시, P: 다음키(INDEX_KEY) 입력하여 조회시)
qry_cnt (str): 요청개수 (예: 30, 최대 40)
qry_gap (str): 묶음개수 (공백, 분만 사용)
index_key (str): 이전조회KEY (공백)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외선물 체결추이(일간) 데이터","     df1, df2 = daily_ccnl(
         srs_cd=""6AM24"",
         exch_cd=""CME"",
         start_date_time="""",
         close_date_time=""20240402"",
         qry_tp=""Q"",
         qry_cnt=""30"",
         qry_gap="""",
         index_key=""""
     )
     print(df1)
     print(df2)","{
    'tret_cnt': '자료개수',
    'last_n_cnt': 'N틱최종개수',
    'index_key': '이전조회KEY',
    'data_date': '일자',
    'data_time': '시각',
    'open_price': '시가',
    'high_price': '고가',
    'low_price': '저가',
    'last_price': '체결가격',
    'last_qntt': '체결수량',
    'vol': '누적거래수량',
    'prev_diff_flag': '전일대비구분',
    'prev_diff_price': '전일대비가격',
    'prev_diff_rate': '전일대비율'
}","[""E-mini S&P500 선물 어제 일봉 데이터 보여줘."", ""WTI 원유 선물 최근 일주일간 가격 추이와 누적거래수량 보여줘."", ""어제 유로화 선물 종가와 전일대비가격 알려줘."", ""E-mini 나스닥100 선물의 어제 시가, 고가, 저가, 종가 데이터 줘."", ""지난주 WTI 원유 선물의 일별 체결가격 추이 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/daily_ccnl/daily_ccnl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/daily_ccnl/chk_daily_ccnl.py
overseas_futureoption,기본시세,해외옵션 상품기본정보,REST,GET,/uapi/overseas-futureoption/v1/quotations/search-opt-detail,해외선물-041,search_opt_detail,"해외옵션 상품기본정보 API입니다. (중요) 해외옵션시세 출력값을 해석하실 때 focode.mst(해외지수옵션 종목마스터파일), fostkcode.mst(해외주식옵션 종목마스터파일)에 있는 sCalcDesz(계산 소수점) 값을 활용하셔야 정확한 값을 받아오실 수 있습니다. - focode.mst(해외지수옵션 종목마스터파일), (해외주식옵션 종목마스터파일) 다운로드 방법 1) focode.mst(해외지수옵션 종목마스터파일) : 포럼 > FAQ > 종목정보 다운로드(해외) - 해외지수옵션 클릭하여 다운로드 후 Github의 헤더정보(https://github.com/koreainvestment/open-trading-api/blob/main/stocks_info/해외옵션정보.h)를 참고하여 해석 2) fostkcode.mst(해외주식옵션 종목마스터파일) : 포럼 > FAQ > 종목정보 다운로드(해외) - 해외주식옵션 클릭하여 다운로드 후 Github의 헤더정보(https://github.com/koreainvestment/open-trading-api/blob/main/stocks_info/해외주식옵션정보.h)를 참고하여 해석 - 소수점 계산 시, focode.mst(해외지수옵션 종목마스터파일), fostkcode.mst(해외주식옵션 종목마스터파일)의 sCalcDesz(계산 소수점) 값 참고 EX) focode.mst 파일의 sCalcDesz(계산 소수점) 값 품목코드 OES 계산소수점 -2 → 시세 7525 수신 시 75.25 로 해석 품목코드 O6E 계산소수점 -4 → 시세 54.0 수신 시 0.0054 로 해석","qry_cnt (str): [필수] 요청개수 (ex. SRS_CD_N 개수)
srs_cd_01 (str): [필수] 종목코드1
srs_cd_02 (Optional[str]): 종목코드2
srs_cd_03 (Optional[str]): 종목코드3
srs_cd_04 (Optional[str]): 종목코드4
srs_cd_05 (Optional[str]): 종목코드5
srs_cd_06 (Optional[str]): 종목코드6
srs_cd_07 (Optional[str]): 종목코드7
srs_cd_08 (Optional[str]): 종목코드8
srs_cd_09 (Optional[str]): 종목코드9
srs_cd_10 (Optional[str]): 종목코드10
srs_cd_11 (Optional[str]): 종목코드11
srs_cd_12 (Optional[str]): 종목코드12
srs_cd_13 (Optional[str]): 종목코드13
srs_cd_14 (Optional[str]): 종목코드14
srs_cd_15 (Optional[str]): 종목코드15
srs_cd_16 (Optional[str]): 종목코드16
srs_cd_17 (Optional[str]): 종목코드17
srs_cd_18 (Optional[str]): 종목코드18
srs_cd_19 (Optional[str]): 종목코드19
srs_cd_20 (Optional[str]): 종목코드20
srs_cd_21 (Optional[str]): 종목코드21
srs_cd_22 (Optional[str]): 종목코드22
srs_cd_23 (Optional[str]): 종목코드23
srs_cd_24 (Optional[str]): 종목코드24
srs_cd_25 (Optional[str]): 종목코드25
srs_cd_26 (Optional[str]): 종목코드26
srs_cd_27 (Optional[str]): 종목코드27
srs_cd_28 (Optional[str]): 종목코드28
srs_cd_29 (Optional[str]): 종목코드29
srs_cd_30 (Optional[str]): 종목코드30",pd.DataFrame: 해외옵션 상품기본정보 데이터,"     df = search_opt_detail(qry_cnt=""1"", srs_cd_01=""6AM24"")
     print(df)","{
    'exch_cd': '거래소코드',
    'clas_cd': '품목종류',
    'crc_cd': '거래통화',
    'sttl_price': '정산가',
    'sttl_date': '정산일',
    'trst_mgn': '증거금',
    'disp_digit': '가격표시진법',
    'tick_sz': '틱사이즈',
    'tick_val': '틱가치',
    'mrkt_open_date': '장개시일자',
    'mrkt_open_time': '장개시시각',
    'mrkt_close_date': '장마감일자',
    'mrkt_close_time': '장마감시각',
    'trd_fr_date': '상장일',
    'expr_date': '만기일',
    'trd_to_date': '최종거래일',
    'remn_cnt': '잔존일수',
    'stat_tp': '매매여부',
    'ctrt_size': '계약크기',
    'stl_tp': '최종결제구분',
    'frst_noti_date': '최초식별일'
}","[""E-mini 나스닥100 옵션의 상세 정보 알려줘."", ""WTI 원유 옵션의 증거금과 틱가치 알려줘."", ""E-mini S&P500 옵션의 만기일과 최종거래일 알려줘."", ""WTI 원유 옵션의 계약크기와 최종결제구분 알려줘."", ""E-mini 나스닥100 옵션의 장개시시각과 장마감시각 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/search_opt_detail/search_opt_detail.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/search_opt_detail/chk_search_opt_detail.py
overseas_futureoption,기본시세,해외옵션종목현재가,REST,GET,/uapi/overseas-futureoption/v1/quotations/opt-price,해외선물-035,opt_price,"해외옵션종목현재가 API입니다. (중요) 해외옵션시세 출력값을 해석하실 때 focode.mst(해외지수옵션 종목마스터파일), fostkcode.mst(해외주식옵션 종목마스터파일)에 있는 sCalcDesz(계산 소수점) 값을 활용하셔야 정확한 값을 받아오실 수 있습니다. - focode.mst(해외지수옵션 종목마스터파일), (해외주식옵션 종목마스터파일) 다운로드 방법 1) focode.mst(해외지수옵션 종목마스터파일) : 포럼 > FAQ > 종목정보 다운로드(해외) - 해외지수옵션 클릭하여 다운로드 후 Github의 헤더정보(https://github.com/koreainvestment/open-trading-api/blob/main/stocks_info/해외옵션정보.h)를 참고하여 해석 2) fostkcode.mst(해외주식옵션 종목마스터파일) : 포럼 > FAQ > 종목정보 다운로드(해외) - 해외주식옵션 클릭하여 다운로드 후 Github의 헤더정보(https://github.com/koreainvestment/open-trading-api/blob/main/stocks_info/해외주식옵션정보.h)를 참고하여 해석 - 소수점 계산 시, focode.mst(해외지수옵션 종목마스터파일), fostkcode.mst(해외주식옵션 종목마스터파일)의 sCalcDesz(계산 소수점) 값 참고 EX) focode.mst 파일의 sCalcDesz(계산 소수점) 값 품목코드 OES 계산소수점 -2 → 시세 7525 수신 시 75.25 로 해석 품목코드 O6E 계산소수점 -4 → 시세 54.0 수신 시 0.0054 로 해석",srs_cd (str): [필수] 종목코드,pd.DataFrame: 해외옵션종목현재가 데이터,"     df = opt_price(srs_cd=""DXM24"")
     print(df)","{
    'proc_date': '최종처리일자',
    'proc_time': '최종처리시각',
    'open_price': '시가',
    'high_price': '고가',
    'low_price': '저가',
    'last_price': '현재가',
    'vol': '누적거래수량',
    'prev_diff_flag': '전일대비구분',
    'prev_diff_price': '전일대비가격',
    'prev_diff_rate': '전일대비율',
    'bid_qntt': '매수1수량',
    'bid_price': '매수1호가',
    'ask_qntt': '매도1수량',
    'ask_price': '매도1호가',
    'trst_mgn': '증거금',
    'exch_cd': '거래소코드',
    'crc_cd': '거래통화',
    'trd_fr_date': '상장일',
    'expr_date': '만기일',
    'trd_to_date': '최종거래일',
    'remn_cnt': '잔존일수',
    'last_qntt': '체결량',
    'tot_ask_qntt': '총매도잔량',
    'tot_bid_qntt': '총매수잔량',
    'tick_size': '틱사이즈',
    'open_date': '장개시일자',
    'open_time': '장개시시각',
    'close_date': '장종료일자',
    'close_time': '장종료시각',
    'sbsnsdate': '영업일자',
    'sttl_price': '정산가'
}","[""E-mini 나스닥100 옵션 현재가 얼마야?"", ""WTI 원유 옵션 시세 좀 알려줘."", ""지금 이 옵션의 매수 1호가, 매도 1호가, 그리고 누적거래수량 알려줘."", ""E-mini S&P500 옵션의 오늘 시가, 고가, 저가, 현재가 보여줘."", ""WTI 원유 옵션의 만기일과 잔존일수 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/opt_price/opt_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/opt_price/chk_opt_price.py
overseas_futureoption,기본시세,해외선물 호가,REST,GET,/uapi/overseas-futureoption/v1/quotations/inquire-asking-price,해외선물-031,inquire_asking_price,[해외선물옵션] 기본시세 해외선물 호가[해외선물-031] 해외선물 호가 API를 호출하여 DataFrame으로 반환합니다.,"srs_cd (str): 종목코드
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외선물 호가 데이터","     df1, df2 = inquire_asking_price(srs_cd=""EXAMPLE_SRS_CD"")
     print(df1)
     print(df2)","{
    'open_price': '시가',
    'high_price': '고가',
    'lowp_rice': '저가',
    'last_price': '현재가',
    'prev_price': '전일종가',
    'vol': '거래량',
    'prev_diff_price': '전일대비가',
    'prev_diff_rate': '전일대비율',
    'quot_date': '호가수신일자',
    'quot_time': '호가수신시각',
    'bid_qntt': '매수수량',
    'bid_num': '매수번호',
    'bid_price': '매수호가',
    'ask_qntt': '매도수량',
    'ask_num': '매도번호',
    'ask_price': '매도호가'
}","[""E-mini S&P500 선물 호가창 보여줘."", ""WTI 원유 선물 현재 매수/매도 호가 상황이 궁금해."", ""지금 이 선물을 팔려면 얼마에 주문해야하는지 매도호가 알려줘."", ""E-mini 나스닥100 선물의 매수호가와 매수수량 알려줘."", ""WTI 원유 선물의 전일대비가와 전일대비율 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_asking_price/inquire_asking_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_asking_price/chk_inquire_asking_price.py
overseas_futureoption,기본시세,해외선물 상품기본정보,REST,GET,/uapi/overseas-futureoption/v1/quotations/search-contract-detail,해외선물-023,search_contract_detail,############################################################################################## # [해외선물옵션] 기본시세 > 해외선물 상품기본정보[해외선물-023] ############################################################################################## [해외선물옵션] 기본시세 해외선물 상품기본정보[해외선물-023] 해외선물 상품기본정보 API를 호출하여 DataFrame으로 반환합니다.,"qry_cnt (str): 입력한 코드 개수
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)
**kwargs: srs_cd_01, srs_cd_02, ... srs_cd_32 품목종류 코드들",Optional[pd.DataFrame]: 해외선물 상품기본정보 데이터,"     df = search_contract_detail(
         qry_cnt=""3"",
         srs_cd_01=""SRS001"",
         srs_cd_02=""SRS002"",
         srs_cd_03=""SRS003""
     )
     print(df)","{
    'exch_cd': '거래소코드',
    'clas_cd': '품목종류',
    'crc_cd': '거래통화',
    'sttl_price': '정산가',
    'sttl_date': '정산일',
    'trst_mgn': '증거금',
    'disp_digit': '가격표시진법',
    'tick_sz': '틱사이즈',
    'tick_val': '틱가치',
    'mrkt_open_date': '장개시일자',
    'mrkt_open_time': '장개시시각',
    'mrkt_close_date': '장마감일자',
    'mrkt_close_time': '장마감시각',
    'trd_fr_date': '상장일',
    'expr_date': '만기일',
    'trd_to_date': '최종거래일',
    'remn_cnt': '잔존일수',
    'stat_tp': '매매여부',
    'ctrt_size': '계약크기',
    'stl_tp': '최종결제구분',
    'frst_noti_date': '최초식별일',
    'sub_exch_nm': '서브거래소코드'
}","[""E-mini 나스닥100 선물의 상세 정보 알려줘."", ""WTI 원유 선물의 증거금과 틱가치 알려줘."", ""E-mini S&P500 선물의 만기일과 최종거래일 알려줘."", ""WTI 원유 선물의 계약크기와 최초식별일 알려줘."", ""E-mini 나스닥100 선물의 장개시시각과 장마감시각 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/search_contract_detail/search_contract_detail.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/search_contract_detail/chk_search_contract_detail.py
overseas_futureoption,주문/계좌,해외선물옵션 당일주문내역조회,REST,GET,/uapi/overseas-futureoption/v1/trading/inquire-ccld,v1_해외선물-004,inquire_ccld,[해외선물옵션] 주문/계좌 해외선물옵션 당일주문내역조회[v1_해외선물-004] 해외선물옵션 당일주문내역조회 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ccld_nccs_dvsn (str): 01:전체 / 02:체결 / 03:미체결
sll_buy_dvsn_cd (str): %%:전체 / 01:매도 / 02:매수
fuop_dvsn (str): 00:전체 / 01:선물 / 02:옵션
ctx_area_fk200 (str): 연속조회검색조건200
ctx_area_nk200 (str): 연속조회키200
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외선물옵션 당일주문내역조회 데이터,"     df = inquire_ccld(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ccld_nccs_dvsn=""01"",
         sll_buy_dvsn_cd=""01"",
         fuop_dvsn=""00"",
         ctx_area_fk200="""",
         ctx_area_nk200=""""
     )
     print(df)","{
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'ord_dt': '주문일자',
    'odno': '주문번호',
    'orgn_ord_dt': '원주문일자',
    'orgn_odno': '원주문번호',
    'ovrs_futr_fx_pdno': '해외선물FX상품번호',
    'rcit_dvsn_cd': '접수구분코드',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'trad_stgy_dvsn_cd': '매매전략구분코드',
    'bass_pric_type_cd': '기준가격유형코드',
    'ord_stat_cd': '주문상태코드',
    'fm_ord_qty': 'FM주문수량',
    'fm_ord_pric': 'FM주문가격',
    'fm_stop_ord_pric': 'FMSTOP주문가격',
    'rsvn_dvsn': '예약구분',
    'fm_ccld_qty': 'FM체결수량',
    'fm_ccld_pric': 'FM체결가격',
    'fm_ord_rmn_qty': 'FM주문잔여수량',
    'ord_grp_name': '주문그룹명',
    'erlm_dtl_dtime': '등록상세일시',
    'ccld_dtl_dtime': '체결상세일시',
    'ord_stfno': '주문직원번호',
    'rmks1': '비고1',
    'new_lqd_dvsn_cd': '신규청산구분코드',
    'fm_lqd_lmt_ord_pric': 'FM청산LIMIT주문가격',
    'fm_lqd_stop_pric': 'FM청산STOP가격',
    'ccld_cndt_cd': '체결조건코드',
    'noti_vald_dt': '게시유효일자',
    'acnt_type_cd': '계좌유형코드',
    'fuop_dvsn': '선물옵션구분'
}","[""오늘 내 해외선물옵션 주문 내역 보여줘."", ""지난주에 체결된 내역만 보고 싶어."", ""내가 어제 판 WTI 원유 선물의 평균 체결 가격과 체결수량 알려줘."", ""오늘 주문한 내역의 주문상태코드와 체결상세일시 보여줘."", ""내 계좌의 모든 미체결 주문 내역 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_ccld/inquire_ccld.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_ccld/chk_inquire_ccld.py
overseas_futureoption,주문/계좌,해외선물옵션 미결제내역조회(잔고),REST,GET,/uapi/overseas-futureoption/v1/trading/inquire-unpd,v1_해외선물-005,inquire_unpd,[해외선물옵션] 주문/계좌 해외선물옵션 미결제내역조회(잔고)[v1_해외선물-005] 해외선물옵션 미결제내역조회(잔고) API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
fuop_dvsn (str): 00: 전체 / 01:선물 / 02: 옵션
ctx_area_fk100 (str): 연속조회검색조건100
ctx_area_nk100 (str): 연속조회키100
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외선물옵션 미결제내역조회(잔고) 데이터,"     df = inquire_unpd(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         fuop_dvsn=""00"",
         ctx_area_fk100="""",
         ctx_area_nk100=""""
     )
     print(df)","{
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'ovrs_futr_fx_pdno': '해외선물FX상품번호',
    'prdt_type_cd': '상품유형코드',
    'crcy_cd': '통화코드',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'fm_ustl_qty': 'FM미결제수량',
    'fm_ccld_avg_pric': 'FM체결평균가격',
    'fm_now_pric': 'FM현재가격',
    'fm_evlu_pfls_amt': 'FM평가손익금액',
    'fm_opt_evlu_amt': 'FM옵션평가금액',
    'fm_otp_evlu_pfls_amt': 'FM옵션평가손익금액',
    'fuop_dvsn': '선물옵션구분',
    'ecis_rsvn_ord_yn': '행사예약주문여부',
    'fm_lqd_psbl_qty': 'FM청산가능수량'
}","[""내 해외선물옵션 미결제 약정 내역 보여줘."", ""내가 가진 E-mini S&P500 선물 포지션의 평가손익금액 알려줘."", ""내 미결제 포지션의 청산가능수량 알려줘."", ""내가 보유한 WTI 원유 옵션의 현재가격과 평가손익금액 보여줘."", ""내 계좌의 모든 미결제 내역을 선물/옵션 구분해서 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_unpd/inquire_unpd.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_unpd/chk_inquire_unpd.py
overseas_futureoption,주문/계좌,해외선물옵션 예수금현황,REST,GET,/uapi/overseas-futureoption/v1/trading/inquire-deposit,해외선물-012,inquire_deposit,[해외선물옵션] 주문/계좌 해외선물옵션 예수금현황[해외선물-012] 해외선물옵션 예수금현황 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
crcy_cd (str): TUS: TOT_USD  / TKR: TOT_KRW KRW: 한국  / USD: 미국 EUR: EUR   / HKD: 홍콩 CNY: 중국  / JPY: 일본 VND: 베트남
inqr_dt (str): 조회일자 (YYYYMMDD 형식)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외선물옵션 예수금현황 데이터,"     df = inquire_deposit(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         crcy_cd=""KRW"",
         inqr_dt=""20221214""
     )
     print(df)","{
    'fm_nxdy_dncl_amt': 'FM익일예수금액',
    'fm_tot_asst_evlu_amt': 'FM총자산평가금액',
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'crcy_cd': '통화코드',
    'resp_dt': '응답일자',
    'fm_dnca_rmnd': 'FM예수금잔액',
    'fm_lqd_pfls_amt': 'FM청산손익금액',
    'fm_fee': 'FM수수료',
    'fm_fuop_evlu_pfls_amt': 'FM선물옵션평가손익금액',
    'fm_rcvb_amt': 'FM미수금액',
    'fm_brkg_mgn_amt': 'FM위탁증거금액',
    'fm_mntn_mgn_amt': 'FM유지증거금액',
    'fm_add_mgn_amt': 'FM추가증거금액',
    'fm_risk_rt': 'FM위험율',
    'fm_ord_psbl_amt': 'FM주문가능금액',
    'fm_drwg_psbl_amt': 'FM출금가능금액',
    'fm_echm_rqrm_amt': 'FM환전요청금액',
    'fm_drwg_prar_amt': 'FM출금예정금액',
    'fm_opt_tr_chgs': 'FM옵션거래대금',
    'fm_opt_icld_asst_evlu_amt': 'FM옵션포함자산평가금액',
    'fm_opt_evlu_amt': 'FM옵션평가금액',
    'fm_crcy_sbst_amt': 'FM통화대용금액',
    'fm_crcy_sbst_use_amt': 'FM통화대용사용금액',
    'fm_crcy_sbst_stup_amt': 'FM통화대용설정금액'
}","[""내 해외선물옵션 계좌의 예수금 현황 알려줘."", ""달러 기준 총 자산 평가금액과 주문가능금액 알려줘."", ""어제 기준 내 계좌의 위탁증거금액과 유지증거금액 알려줘."", ""현재 내 계좌의 추가증거금액과 위험율 알려줘."", ""내 계좌의 출금가능금액과 환전요청금액 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_deposit/inquire_deposit.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_deposit/chk_inquire_deposit.py
overseas_futureoption,주문/계좌,해외선물옵션 주문가능조회,REST,GET,/uapi/overseas-futureoption/v1/trading/inquire-psamount,v1_해외선물-006,inquire_psamount,[해외선물옵션] 주문/계좌 해외선물옵션 주문가능조회[v1_해외선물-006] 해외선물옵션 주문가능조회 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ovrs_futr_fx_pdno (str): 해외선물FX상품번호
sll_buy_dvsn_cd (str): 01 : 매도 / 02 : 매수
fm_ord_pric (str): FM주문가격
ecis_rsvn_ord_yn (str): 행사예약주문여부
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외선물옵션 주문가능조회 데이터,"     df = inquire_psamount(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ovrs_futr_fx_pdno=""6AU22"",
         sll_buy_dvsn_cd=""02"",
         fm_ord_pric="""",
         ecis_rsvn_ord_yn=""""
     )
     print(df)","{
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'ovrs_futr_fx_pdno': '해외선물FX상품번호',
    'crcy_cd': '통화코드',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'fm_ustl_qty': 'FM미결제수량',
    'fm_lqd_psbl_qty': 'FM청산가능수량',
    'fm_new_ord_psbl_qty': 'FM신규주문가능수량',
    'fm_tot_ord_psbl_qty': 'FM총주문가능수량',
    'fm_mkpr_tot_ord_psbl_qty': 'FM시장가총주문가능수량'
}","[""WTI 원유 선물 지금 몇 계약까지 살 수 있는지 FM신규주문가능수량 알려줘."", ""E-mini 나스닥100 선물 매도 가능한 최대 수량 알려줘."", ""내가 가진 돈으로 이 선물을 최대한 몇 계약이나 살 수 있는지 FM총주문가능수량 알려줘."", ""E-mini S&P500 선물의 청산가능수량 알려줘."", ""시장가로 주문할 때 WTI 원유 선물을 몇 계약까지 살 수 있는지 FM시장가총주문가능수량 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_psamount/inquire_psamount.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_psamount/chk_inquire_psamount.py
overseas_futureoption,주문/계좌,해외선물옵션 일별 주문내역,REST,GET,/uapi/overseas-futureoption/v1/trading/inquire-daily-order,해외선물-013,inquire_daily_order,[해외선물옵션] 주문/계좌 해외선물옵션 일별 주문내역[해외선물-013] 해외선물옵션 일별 주문내역 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
strt_dt (str): 시작일자 (YYYYMMDD)
end_dt (str): 종료일자 (YYYYMMDD)
fm_pdgr_cd (str): FM상품군코드
ccld_nccs_dvsn (str): 체결미체결구분 (01:전체 / 02:체결 / 03:미체결)
sll_buy_dvsn_cd (str): 매도매수구분코드 (%%전체 / 01:매도 / 02:매수)
fuop_dvsn (str): 선물옵션구분 (00:전체 / 01:선물 / 02:옵션)
ctx_area_fk200 (str): 연속조회검색조건200
ctx_area_nk200 (str): 연속조회키200
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외선물옵션 일별 주문내역 데이터,"     df = inquire_daily_order(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         strt_dt=""20220101"",
         end_dt=""20221214"",
         fm_pdgr_cd="""",
         ccld_nccs_dvsn=""01"",
         sll_buy_dvsn_cd=""%%"",
         fuop_dvsn=""00"",
         ctx_area_fk200="""",
         ctx_area_nk200=""""
     )
     print(df)","{
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'dt': '일자',
    'ord_dt': '주문일자',
    'odno': '주문번호',
    'orgn_ord_dt': '원주문일자',
    'orgn_odno': '원주문번호',
    'ovrs_futr_fx_pdno': '해외선물FX상품번호',
    'rvse_cncl_dvsn_cd': '정정취소구분코드',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'cplx_ord_dvsn_cd': '복합주문구분코드',
    'pric_dvsn_cd': '가격구분코드',
    'rcit_dvsn_cd': '접수구분코드',
    'fm_ord_qty': 'FM주문수량',
    'fm_ord_pric': 'FM주문가격',
    'fm_stop_ord_pric': 'FMSTOP주문가격',
    'ecis_rsvn_ord_yn': '행사예약주문여부',
    'fm_ccld_qty': 'FM체결수량',
    'fm_ccld_pric': 'FM체결가격',
    'fm_ord_rmn_qty': 'FM주문잔여수량',
    'ord_grp_name': '주문그룹명',
    'rcit_dtl_dtime': '접수상세일시',
    'ccld_dtl_dtime': '체결상세일시',
    'ordr_emp_no': '주문자사원번호',
    'rjct_rson_name': '거부사유명',
    'ccld_cndt_cd': '체결조건코드',
    'trad_end_dt': '매매종료일자'
}","[""지난주 내 해외선물옵션 주문 내역 일별로 보여줘."", ""체결된 내역만 보고 싶은데 어떻게 해야해?"", ""내가 지난주에 판 WTI 원유 선물의 주문 번호와 체결가격을 알려줘."", ""지난달 내 모든 주문의 접수상세일시와 체결상세일시 보여줘."", ""선물 주문 내역만 필터링해서 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_daily_order/inquire_daily_order.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_daily_order/chk_inquire_daily_order.py
overseas_futureoption,주문/계좌,해외선물옵션 일별 체결내역,REST,GET,/uapi/overseas-futureoption/v1/trading/inquire-daily-ccld,해외선물-011,inquire_daily_ccld,[해외선물옵션] 주문/계좌 해외선물옵션 일별 체결내역[해외선물-011] 해외선물옵션 일별 체결내역 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
strt_dt (str): 시작일자(YYYYMMDD)
end_dt (str): 종료일자(YYYYMMDD)
fuop_dvsn_cd (str): 00:전체 / 01:선물 / 02:옵션
fm_pdgr_cd (str): 공란(Default)
crcy_cd (str): %%% : 전체 TUS: TOT_USD  / TKR: TOT_KRW KRW: 한국  / USD: 미국 EUR: EUR   / HKD: 홍콩 CNY: 중국  / JPY: 일본 VND: 베트남
fm_item_ftng_yn (str): ""N""(Default)
sll_buy_dvsn_cd (str): %%: 전체 / 01 : 매도 / 02 : 매수
ctx_area_fk200 (str): 연속조회검색조건200
ctx_area_nk200 (str): 연속조회키200
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외선물옵션 일별 체결내역 데이터","     df1, df2 = inquire_daily_ccld(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         strt_dt=""20221010"",
         end_dt=""20221216"",
         fuop_dvsn_cd=""00"",
         fm_pdgr_cd="""",
         crcy_cd=""%%%"",
         fm_item_ftng_yn=""N"",
         sll_buy_dvsn_cd=""%%"",
         ctx_area_fk200="""",
         ctx_area_nk200=""""
     )
     print(df1)
     print(df2)","{
    'fm_tot_ccld_qty': 'FM총체결수량',
    'fm_tot_futr_agrm_amt': 'FM총선물약정금액',
    'fm_tot_opt_agrm_amt': 'FM총옵션약정금액',
    'fm_fee_smtl': 'FM수수료합계',
    'dt': '일자',
    'ccno': '체결번호',
    'ovrs_futr_fx_pdno': '해외선물FX상품번호',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'fm_ccld_qty': 'FM체결수량',
    'fm_ccld_amt': 'FM체결금액',
    'fm_futr_ccld_amt': 'FM선물체결금액',
    'fm_opt_ccld_amt': 'FM옵션체결금액',
    'crcy_cd': '통화코드',
    'fm_fee': 'FM수수료',
    'fm_futr_pure_agrm_amt': 'FM선물순약정금액',
    'fm_opt_pure_agrm_amt': 'FM옵션순약정금액',
    'ccld_dtl_dtime': '체결상세일시',
    'ord_dt': '주문일자',
    'odno': '주문번호',
    'ord_mdia_dvsn_name': '주문매체구분명'
}","[""지난달 내 해외선물옵션 체결 내역 일별로 보여줘."", ""달러로 거래된 내역만 보고 싶은데 어떻게 해야해?"", ""지난달에 내가 거래한 총 수수료와 총 선물약정금액 알려줘."", ""어제 체결된 내역의 주문번호와 체결상세일시 보여줘."", ""선물 체결 내역만 필터링해서 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_daily_ccld/inquire_daily_ccld.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_daily_ccld/chk_inquire_daily_ccld.py
overseas_futureoption,주문/계좌,해외선물옵션 기간계좌손익 일별,REST,GET,/uapi/overseas-futureoption/v1/trading/inquire-period-ccld,해외선물-010,inquire_period_ccld,[해외선물옵션] 주문/계좌 해외선물옵션 기간계좌손익 일별[해외선물-010] 해외선물옵션 기간계좌손익 일별 API를 호출하여 DataFrame으로 반환합니다.,"inqr_term_from_dt (str): 조회기간FROM일자
inqr_term_to_dt (str): 조회기간TO일자
cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
crcy_cd (str): '%%% : 전체 TUS: TOT_USD  / TKR: TOT_KRW KRW: 한국  / USD: 미국 EUR: EUR   / HKD: 홍콩 CNY: 중국  / JPY: 일본'
whol_trsl_yn (str): 전체환산여부
fuop_dvsn (str): 00:전체 / 01:선물 / 02:옵션
ctx_area_fk200 (str): 연속조회검색조건200
ctx_area_nk200 (str): 연속조회키200
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외선물옵션 기간계좌손익 일별 데이터","     df1, df2 = inquire_period_ccld(
         inqr_term_from_dt=""20250601"",
         inqr_term_to_dt=""20250630"",
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         crcy_cd=""%%%"",
         whol_trsl_yn=""N"",
         fuop_dvsn=""00"",
         ctx_area_fk200="""",
         ctx_area_nk200=""""
     )
     print(df1)
     print(df2)","{
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'crcy_cd': '통화코드',
    'fm_buy_qty': 'FM매수수량',
    'fm_sll_qty': 'FM매도수량',
    'fm_lqd_pfls_amt': 'FM청산손익금액',
    'fm_fee': 'FM수수료',
    'fm_net_pfls_amt': 'FM순손익금액',
    'fm_ustl_buy_qty': 'FM미결제매수수량',
    'fm_ustl_sll_qty': 'FM미결제매도수량',
    'fm_ustl_evlu_pfls_amt': 'FM미결제평가손익금액',
    'fm_ustl_evlu_pfls_amt2': 'FM미결제평가손익금액2',
    'fm_ustl_evlu_pfls_icdc_amt': 'FM미결제평가손익증감금액',
    'fm_ustl_agrm_amt': 'FM미결제약정금액',
    'fm_opt_lqd_amt': 'FM옵션청산금액',
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'ovrs_futr_fx_pdno': '해외선물FX상품번호',
    'crcy_cd': '통화코드',
    'fm_buy_qty': 'FM매수수량',
    'fm_sll_qty': 'FM매도수량',
    'fm_lqd_pfls_amt': 'FM청산손익금액',
    'fm_fee': 'FM수수료',
    'fm_net_pfls_amt': 'FM순손익금액',
    'fm_ustl_buy_qty': 'FM미결제매수수량',
    'fm_ustl_sll_qty': 'FM미결제매도수량',
    'fm_ustl_evlu_pfls_amt': 'FM미결제평가손익금액',
    'fm_ustl_evlu_pfls_amt2': 'FM미결제평가손익금액2',
    'fm_ustl_evlu_pfls_icdc_amt': 'FM미결제평가손익증감금액',
    'fm_ccld_avg_pric': 'FM체결평균가격',
    'fm_ustl_agrm_amt': 'FM미결제약정금액',
    'fm_opt_lqd_amt': 'FM옵션청산금액'
}","[""지난달 내 해외선물옵션 계좌의 일별 손익 현황 알려줘."", ""원화 기준으로 기간 계좌 손익을 볼 수 있어?"", ""어제 내 계좌의 미결제평가손익금액과 순손익금액 알려줘."", ""지난주 내 계좌의 총 청산손익금액과 수수료 보여줘."", ""선물 거래 손익만 따로 볼 수 있어?""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_period_ccld/inquire_period_ccld.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_period_ccld/chk_inquire_period_ccld.py
overseas_futureoption,주문/계좌,해외선물옵션 정정취소주문,REST,POST,/uapi/overseas-futureoption/v1/trading/order-rvsecncl,"v1_해외선물-002, 003",order_rvsecncl,"############################################################################################## # [해외선물옵션] 주문/계좌 > 해외선물옵션 정정취소주문[v1_해외선물-002, 003] ############################################################################################## [해외선물옵션] 주문/계좌 해외선물옵션 정정취소주문[v1_해외선물-002, 003] 해외선물옵션 정정취소주문 API를 호출하여 DataFrame으로 반환합니다.","cano (str): 계좌번호 체계(8-2)의 앞 8자리
ord_dv (str): 주문구분 (0:정정, 1:취소)
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
orgn_ord_dt (str): 원 주문 시 출력되는 ORD_DT 값을 입력 (현지거래일)
orgn_odno (str): 정정/취소시 주문번호(ODNO) 8자리를 문자열처럼 ""0""을 포함해서 전송 (원 주문 시 출력된 ODNO 값 활용) (ex. ORGN_ODNO : 00360686)
fm_limit_ord_pric (str): OTFM3002U(해외선물옵션주문정정)만 사용
fm_stop_ord_pric (str): OTFM3002U(해외선물옵션주문정정)만 사용
fm_lqd_lmt_ord_pric (str): OTFM3002U(해외선물옵션주문정정)만 사용
fm_lqd_stop_ord_pric (str): OTFM3002U(해외선물옵션주문정정)만 사용
fm_hdge_ord_scrn_yn (str): N
fm_mkpr_cvsn_yn (str): OTFM3003U(해외선물옵션주문취소)만 사용  ※ FM_MKPR_CVSN_YN 항목에 'Y'로 설정하여 취소주문을 접수할 경우, 주문 취소확인이 들어오면 원장에서 시장가주문을 하나 또 내줌",Optional[pd.DataFrame]: 해외선물옵션 정정취소주문 데이터,"     df = order_rvsecncl(
         cano=trenv.my_acct,
         ord_dv=""0"",
         acnt_prdt_cd=trenv.my_prod,
         orgn_ord_dt=""20250630"",
         orgn_odno=""00360686"",
         fm_limit_ord_pric="""",
         fm_stop_ord_pric="""",
         fm_lqd_lmt_ord_pric="""",
         fm_lqd_stop_ord_pric="""",
         fm_hdge_ord_scrn_yn=""N"",
         fm_mkpr_cvsn_yn=""N""
     )
     print(df)","{
    'ORD_DT': '주문일자',
    'ODNO': '주문번호'
}","[""아까 낸 E-mini S&P500 선물 주문 취소해줘."", ""주문 가격을 정정하고 싶어."", ""오전에 낸 WTI 원유 선물 주문을 취소하고 싶어."", ""E-mini 나스닥100 선물 주문 가격을 15000으로 정정해줘."", ""해외선물옵션 주문 정정하고 새로 받은 주문번호 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/order_rvsecncl/order_rvsecncl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/order_rvsecncl/chk_order_rvsecncl.py
overseas_futureoption,주문/계좌,해외선물옵션 기간계좌거래내역,REST,GET,/uapi/overseas-futureoption/v1/trading/inquire-period-trans,해외선물-014,inquire_period_trans,[해외선물옵션] 주문/계좌 해외선물옵션 기간계좌거래내역[해외선물-014] 해외선물옵션 기간계좌거래내역 API를 호출하여 DataFrame으로 반환합니다.,"inqr_term_from_dt (str): 조회기간FROM일자 (예: '20220101')
inqr_term_to_dt (str): 조회기간TO일자 (예: '20221214')
cano (str): 계좌번호 체계(8-2)의 앞 8자리 (예: '80012345')
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리 (예: '08')
acnt_tr_type_cd (str): 계좌거래유형코드 (1: 전체, 2:입출금 , 3: 결제)
crcy_cd (str): 통화코드 ('%%%': 전체, 'TUS': TOT_USD, 'TKR': TOT_KRW, 'KRW': 한국, 'USD': 미국, 'EUR': EUR, 'HKD': 홍콩, 'CNY': 중국, 'JPY': 일본, 'VND': 베트남)
ctx_area_fk100 (str): 연속조회검색조건100
ctx_area_nk100 (str): 연속조회키100
pwd_chk_yn (str): 비밀번호체크여부
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외선물옵션 기간계좌거래내역 데이터,"     df = inquire_period_trans(
         inqr_term_from_dt=""20220101"",
         inqr_term_to_dt=""20221214"",
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         acnt_tr_type_cd=""%%"",
         crcy_cd=""%%%"",
         ctx_area_fk100="""",
         ctx_area_nk100="""",
         pwd_chk_yn=""""
     )
     print(df)","{
    'bass_dt': '기준일자',
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'fm_ldgr_inog_seq': 'FM원장출납순번',
    'crcy_cd': '통화코드',
    'fm_iofw_amt': 'FM입출금액',
    'fm_fee': 'FM수수료',
    'fm_tax_amt': 'FM세금금액',
    'fm_sttl_amt': 'FM결제금액',
    'fm_bf_dncl_amt': 'FM이전예수금액',
    'fm_dncl_amt': 'FM예수금액',
    'fm_rcvb_occr_amt': 'FM미수발생금액',
    'fm_rcvb_pybk_amt': 'FM미수변제금액',
    'ovdu_int_pybk_amt': '연체이자변제금액',
    'rmks_text': '비고내용'
}","[""지난달 내 해외선물옵션 계좌의 입출금 내역 보여줘."", ""원화 기준으로 거래 내역을 볼 수 있어?"", ""어제 내 계좌에서 출금된 수수료와 세금금액 알려줘."", ""지난주 내 계좌의 결제 내역만 필터링해서 보여줘."", ""최근 한 달간의 입출금액과 예수금액 변동 내역 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_period_trans/inquire_period_trans.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/inquire_period_trans/chk_inquire_period_trans.py
overseas_futureoption,주문/계좌,해외선물옵션 증거금상세,REST,GET,/uapi/overseas-futureoption/v1/trading/margin-detail,해외선물-032,margin_detail,[해외선물옵션] 주문/계좌 해외선물옵션 증거금상세[해외선물-032] 해외선물옵션 증거금상세 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호 (8자리)
acnt_prdt_cd (str): 계좌상품코드 (2자리)
crcy_cd (str): 통화코드 ('TKR', 'TUS', 'USD', 'HKD', 'CNY', 'JPY', 'VND')
inqr_dt (str): 조회일자 (8자리, YYYYMMDD 형식)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외선물옵션 증거금상세 데이터,"     df = margin_detail(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         crcy_cd=""USD"",
         inqr_dt=""20230701""
     )
     print(df)","{
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'crcy_cd': '통화코드',
    'resp_dt': '응답일자',
    'acnt_net_risk_mgna_aply_yn': '계좌순위험증거금적용여부',
    'fm_ord_psbl_amt': 'FM주문가능금액',
    'fm_add_mgn_amt': 'FM추가증거금액',
    'fm_brkg_mgn_amt': 'FM위탁증거금액',
    'fm_excc_brkg_mgn_amt': 'FM정산위탁증거금액',
    'fm_ustl_mgn_amt': 'FM미결제증거금액',
    'fm_mntn_mgn_amt': 'FM유지증거금액',
    'fm_ord_mgn_amt': 'FM주문증거금액',
    'fm_futr_ord_mgn_amt': 'FM선물주문증거금액',
    'fm_opt_buy_ord_amt': 'FM옵션매수주문금액',
    'fm_opt_sll_ord_mgn_amt': 'FM옵션매도주문증거금액',
    'fm_opt_buy_ord_mgn_amt': 'FM옵션매수주문증거금액',
    'fm_ecis_rsvn_mgn_amt': 'FM행사예약증거금액',
    'fm_span_brkg_mgn_amt': 'FMSPAN위탁증거금액',
    'fm_span_pric_altr_mgn_amt': 'FMSPAN가격변동증거금액',
    'fm_span_term_sprd_mgn_amt': 'FMSPAN기간스프레드증거금액',
    'fm_span_buy_opt_min_mgn_amt': 'FMSPAN옵션가격증거금액',
    'fm_span_opt_min_mgn_amt': 'FMSPAN옵션최소증거금액',
    'fm_span_tot_risk_mgn_amt': 'FMSPAN총위험증거금액',
    'fm_span_mntn_mgn_amt': 'FMSPAN유지증거금액',
    'fm_span_mntn_pric_altr_mgn_amt': 'FMSPAN유지가격변동증거금액',
    'fm_span_mntn_term_sprd_mgn_amt': 'FMSPAN유지기간스프레드증거금액',
    'fm_span_mntn_opt_pric_mgn_amt': 'FMSPAN유지옵션가격증거금액',
    'fm_span_mntn_opt_min_mgn_amt': 'FMSPAN유지옵션최소증거금액',
    'fm_span_mntn_tot_risk_mgn_amt': 'FMSPAN유지총위험증거금액',
    'fm_eurx_brkg_mgn_amt': 'FMEUREX위탁증거금액',
    'fm_eurx_pric_altr_mgn_amt': 'FMEUREX가격변동증거금액',
    'fm_eurx_term_sprd_mgn_amt': 'FMEUREX기간스프레드증거금액',
    'fm_eurx_opt_pric_mgn_amt': 'FMEUREX옵션가격증거금액',
    'fm_eurx_buy_opt_min_mgn_amt': 'FMEUREX매수옵션최소증거금액',
    'fm_eurx_tot_risk_mgn_amt': 'FMEUREX총위험증거금액',
    'fm_eurx_mntn_mgn_amt': 'FMEUREX유지증거금액',
    'fm_eurx_mntn_pric_altr_mgn_amt': 'FMEUREX유지가격변동증거금액',
    'fm_eurx_mntn_term_sprd_mgn_amt': 'FMEUREX기간스프레드증거금액',
    'fm_eurx_mntn_opt_pric_mgn_amt': 'FMEUREX유지옵션가격증거금액',
    'fm_eurx_mntn_tot_risk_mgn_amt': 'FMEUREX유지총위험증거금액',
    'fm_gnrl_brkg_mgn_amt': 'FM일반위탁증거금액',
    'fm_futr_ustl_mgn_amt': 'FM선물미결제증거금액',
    'fm_sll_opt_ustl_mgn_amt': 'FM매도옵션미결제증거금액',
    'fm_buy_opt_ustl_mgn_amt': 'FM매수옵션미결제증거금액',
    'fm_sprd_ustl_mgn_amt': 'FM스프레드미결제증거금액',
    'fm_avg_dsct_mgn_amt': 'FMAVG할인증거금액',
    'fm_gnrl_mntn_mgn_amt': 'FM일반유지증거금액',
    'fm_futr_mntn_mgn_amt': 'FM선물유지증거금액',
    'fm_opt_mntn_mgn_amt': 'FM옵션유지증거금액'
}","[""내 해외선물옵션 계좌의 증거금 상세 내역 보여줘."", ""달러 기준 내 계좌의 위탁증거금액과 유지증거금액 알려줘."", ""현재 내 계좌의 추가증거금액과 주문가능금액 알려줘."", ""내 계좌의 SPAN 총위험증거금액과 유지총위험증거금액 보여줘."", ""내 계좌의 EUREX 위탁증거금액과 유지증거금액 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/margin_detail/margin_detail.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/margin_detail/chk_margin_detail.py
overseas_futureoption,주문/계좌,해외선물옵션 주문,REST,POST,/uapi/overseas-futureoption/v1/trading/order,v1_해외선물-001,order,############################################################################################## # [해외선물옵션] 주문/계좌 > 해외선물옵션 주문[v1_해외선물-001] ############################################################################################## [해외선물옵션] 주문/계좌 해외선물옵션 주문[v1_해외선물-001] 해외선물옵션 주문 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ovrs_futr_fx_pdno (str): 해외선물FX상품번호
sll_buy_dvsn_cd (str): 01 : 매도 02 : 매수
fm_lqd_ustl_ccld_dt (str): 빈칸 (hedge청산만 이용)
fm_lqd_ustl_ccno (str): 빈칸 (hedge청산만 이용)
pric_dvsn_cd (str): 1.지정, 2. 시장, 3. STOP, 4 S/L
fm_limit_ord_pric (str): 지정가인 경우 가격 입력 * 시장가, STOP주문인 경우, 빈칸("""") 입력
fm_stop_ord_pric (str): STOP 주문 가격 입력 * 시장가, 지정가인 경우, 빈칸("""") 입력
fm_ord_qty (str): FM주문수량
fm_lqd_lmt_ord_pric (str): 빈칸 (hedge청산만 이용)
fm_lqd_stop_ord_pric (str): 빈칸 (hedge청산만 이용)
ccld_cndt_cd (str): 일반적으로 6 (EOD, 지정가)  GTD인 경우 5, 시장가인 경우만 2
cplx_ord_dvsn_cd (str): 0 (hedge청산만 이용)
ecis_rsvn_ord_yn (str): N
fm_hdge_ord_scrn_yn (str): N",Optional[pd.DataFrame]: 해외선물옵션 주문 데이터,"     df = order(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ovrs_futr_fx_pdno=""6BZ22"",
         sll_buy_dvsn_cd=""02"",
         fm_lqd_ustl_ccld_dt="""",
         fm_lqd_ustl_ccno="""",
         pric_dvsn_cd=""1"",
         fm_limit_ord_pric=""1.17"",
         fm_stop_ord_pric="""",
         fm_ord_qty=""1"",
         fm_lqd_lmt_ord_pric="""",
         fm_lqd_stop_ord_pric="""",
         ccld_cndt_cd=""6"",
         cplx_ord_dvsn_cd=""0"",
         ecis_rsvn_ord_yn=""N"",
         fm_hdge_ord_scrn_yn=""N""
     )
     print(df)","{
    'ORD_DT': '주문일자',
    'ODNO': '주문번호'
}","[""WTI 원유 선물 1계약 매수 주문 넣어줘."", ""E-mini 나스닥100 선물 시장가로 1계약 매도해줘."", ""지정가 주문으로 유로화 선물 1계약을 1.17에 매수해줘."", ""지금 바로 E-mini S&P500 선물 1계약 살게."", ""해외선물옵션 주문하고 주문번호랑 주문일자 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/order/order.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_futureoption/order/chk_order.py
overseas_stock,기본시세,해외주식 현재체결가,REST,GET,/uapi/overseas-price/v1/quotations/price,v1_해외주식-009,price,[해외주식] 기본시세 해외주식 현재체결가[v1_해외주식-009] 해외주식 현재체결가 API를 호출하여 DataFrame으로 반환합니다.,"auth (str): 사용자권한정보
excd (str): 거래소코드 (예: ""NAS"")
symb (str): 종목코드 (예: ""AAPL"")
env_dv (str): 실전모의구분 (real:실전, demo:모의)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외주식 현재체결가 데이터,"     df = price("""", ""NAS"", ""AAPL"")
     print(df)","{
    'rsym': '실시간조회종목코드',
    'zdiv': '소수점자리수',
    'base': '전일종가',
    'pvol': '전일거래량',
    'last': '현재가',
    'sign': '대비기호',
    'diff': '대비',
    'rate': '등락율',
    'tvol': '거래량',
    'tamt': '거래대금',
    'ordy': '매수가능여부'
}","[""애플 주가 현재 얼마야?"", ""테슬라 실시간 체결가 좀 알려줘."", ""오늘 애플 주식 거래량과 거래대금 알려줘."", ""테슬라의 현재가, 대비, 등락율 보여줘."", ""오늘 애플의 시가, 고가, 저가, 현재가 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/price/price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/price/chk_price.py
overseas_stock,기본시세,해외주식 종목/지수/환율기간별시세(일/주/월/년),REST,GET,/uapi/overseas-price/v1/quotations/inquire-daily-chartprice,v1_해외주식-012,inquire_daily_chartprice,[해외주식] 기본시세 해외주식 종목_지수_환율기간별시세(일_주_월_년)[v1_해외주식-012] 해외주식 종목_지수_환율기간별시세(일_주_월_년) API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): N: 해외지수, X 환율, I: 국채, S:금선물
fid_input_iscd (str): 종목코드 ※ 해외주식 마스터 코드 참조  (포럼 > FAQ > 종목정보 다운로드(해외) > 해외지수)  ※ 해당 API로 미국주식 조회 시, 다우30, 나스닥100, S&P500 종목만 조회 가능합니다. 더 많은 미국주식 종목 시세를 이용할 시에는, 해외주식기간별시세 API 사용 부탁드립니다.
fid_input_date_1 (str): 시작일자(YYYYMMDD)
fid_input_date_2 (str): 종료일자(YYYYMMDD)
fid_period_div_code (str): D:일, W:주, M:월, Y:년
env_dv (str): 실전모의구분 (real:실전, demo:모의)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외주식 종목_지수_환율기간별시세(일_주_월_년) 데이터","     df1, df2 = inquire_daily_chartprice(
         fid_cond_mrkt_div_code=""N"",
         fid_input_iscd="".DJI"",
         fid_input_date_1=""20220401"",
         fid_input_date_2=""20220613"",
         fid_period_div_code=""D"",
         env_dv=""real""
     )
     print(df1)
     print(df2)","{
    'ovrs_nmix_prdy_vrss': '전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'prdy_ctrt': '전일 대비율',
    'ovrs_nmix_prdy_clpr': '전일 종가',
    'acml_vol': '누적 거래량',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'ovrs_nmix_prpr': '현재가',
    'stck_shrn_iscd': '단축 종목코드',
    'prdy_vol': '전일 거래량',
    'ovrs_prod_oprc': '시가',
    'ovrs_prod_hgpr': '최고가',
    'ovrs_prod_lwpr': '최저가',
    'stck_bsop_date': '영업 일자',
    'ovrs_nmix_prpr': '현재가',
    'ovrs_nmix_oprc': '시가',
    'ovrs_nmix_hgpr': '최고가',
    'ovrs_nmix_lwpr': '최저가',
    'acml_vol': '누적 거래량',
    'mod_yn': '변경 여부'
}","[""다우존스 지수 일봉 데이터 보여줘."", ""나스닥 지수 주봉 차트가 궁금해."", ""작년 S&P500 지수가 가장 높았을 때와 그때의 누적 거래량 알려줘."", ""나스닥 지수의 전일 대비와 등락율을 일별로 보여줘."", ""올해 월봉 데이터로 다우존스 지수 시가, 고가, 저가, 종가 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_daily_chartprice/inquire_daily_chartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_daily_chartprice/chk_inquire_daily_chartprice.py
overseas_stock,기본시세,해외주식분봉조회,REST,GET,/uapi/overseas-price/v1/quotations/inquire-time-itemchartprice,v1_해외주식-030,inquire_time_itemchartprice,[해외주식] 기본시세 해외주식분봉조회[v1_해외주식-030] 해외주식분봉조회 API를 호출하여 DataFrame으로 반환합니다.,"auth (str): """" 공백으로 입력
excd (str): NYS : 뉴욕 NAS : 나스닥 AMS : 아멕스  HKS : 홍콩 SHS : 상해  SZS : 심천 HSX : 호치민 HNX : 하노이 TSE : 도쿄   ※ 주간거래는 최대 1일치 분봉만 조회 가능 BAY : 뉴욕(주간) BAQ : 나스닥(주간) BAA : 아멕스(주간)
symb (str): 종목코드(ex. TSLA)
nmin (str): 분단위(1: 1분봉, 2: 2분봉, ...)
pinc (str): 0:당일 1:전일포함 ※ 다음조회 시 반드시 ""1""로 입력
next (str): 처음조회 시, """" 공백 입력 다음조회 시, ""1"" 입력
nrec (str): 레코드요청갯수 (최대 120)
fill (str): """" 공백으로 입력
keyb (str): 처음 조회 시, """" 공백 입력 다음 조회 시, 이전 조회 결과의 마지막 분봉 데이터를 이용하여, 1분 전 혹은 n분 전의 시간을 입력  (형식: YYYYMMDDHHMMSS, ex. 20241014140100)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외주식분봉조회 데이터","     df1, df2 = inquire_time_itemchartprice(
         auth="""", excd=""NAS"", symb=""TSLA"", nmin=""5"", pinc=""1"", next=""1"", nrec=""120"", fill="""", keyb=""""
     )
     print(df1)
     print(df2)","{
    'rsym': '실시간종목코드',
    'zdiv': '소수점자리수',
    'stim': '장시작현지시간',
    'etim': '장종료현지시간',
    'sktm': '장시작한국시간',
    'ektm': '장종료한국시간',
    'next': '다음가능여부',
    'more': '추가데이타여부',
    'nrec': '레코드갯수',
    'tymd': '현지영업일자',
    'xymd': '현지기준일자',
    'xhms': '현지기준시간',
    'kymd': '한국기준일자',
    'khms': '한국기준시간',
    'open': '시가',
    'high': '고가',
    'low': '저가',
    'last': '종가',
    'evol': '체결량',
    'eamt': '체결대금'
}","[""테슬라 1분봉 데이터 좀 줘."", ""엔비디아 오늘 주가 흐름을 분봉으로 보고싶어."", ""오늘 오전 10시경 애플 주가와 체결량 알려줘."", ""테슬라의 오늘 시가, 고가, 저가, 종가 분봉으로 보여줘."", ""엔비디아의 오늘 체결대금 분봉으로 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_time_itemchartprice/inquire_time_itemchartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_time_itemchartprice/chk_inquire_time_itemchartprice.py
overseas_stock,기본시세,해외주식 기간별시세,REST,GET,/uapi/overseas-price/v1/quotations/dailyprice,v1_해외주식-010,dailyprice,[해외주식] 기본시세 해외주식 기간별시세[v1_해외주식-010] 해외주식 기간별시세 API를 호출하여 DataFrame으로 반환합니다.,"auth (str): 사용자권한정보 (예: """")
excd (str): 거래소코드 (예: ""NAS"")
symb (str): 종목코드 (예: ""TSLA"")
gubn (str): 일/주/월구분 (예: ""0"")
bymd (str): 조회기준일자(YYYYMMDD) (예: ""20230101"")
modp (str): 수정주가반영여부 (예: ""0"")
env_dv (str): 실전모의구분 (real:실전, demo:모의)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외주식 기간별시세 데이터","     df1, df2 = dailyprice(""auth_token"", ""NAS"", ""TSLA"", ""0"", ""20230101"", ""0"", """")
     print(df1)
     print(df2)","{
    'rsym': '실시간조회종목코드',
    'zdiv': '소수점자리수',
    'nrec': '전일종가',
    'xymd': '일자(YYYYMMDD)',
    'clos': '종가',
    'sign': '대비기호',
    'diff': '대비',
    'rate': '등락율',
    'open': '시가',
    'high': '고가',
    'low': '저가',
    'tvol': '거래량',
    'tamt': '거래대금',
    'pbid': '매수호가',
    'vbid': '매수호가잔량',
    'pask': '매도호가',
    'vask': '매도호가잔량'
}","[""애플 주가 최근 한달간 일별 시세 보여줘."", ""테슬라 주가 주 단위로 보고싶어."", ""지난주 엔비디아 종가와 거래량 알려줘."", ""애플의 일별 시가, 고가, 저가, 종가 데이터 줘."", ""지난달 테슬라의 일별 거래대금 추이 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/dailyprice/dailyprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/dailyprice/chk_dailyprice.py
overseas_stock,기본시세,해외주식 현재가상세,REST,GET,/uapi/overseas-price/v1/quotations/price-detail,v1_해외주식-029,price_detail,[해외주식] 기본시세 해외주식 현재가상세[v1_해외주식-029] 해외주식 현재가상세 API를 호출하여 DataFrame으로 반환합니다.,"auth (str): 사용자권한정보
excd (str): 거래소명 (예: HKS, NYS, NAS, AMS, TSE, SHS, SZS, SHI, SZI, HSX, HNX, BAY, BAQ, BAA)
symb (str): 종목코드
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외주식 현재가상세 데이터,"     df = price_detail(auth=""your_auth_token"", excd=""NAS"", symb=""TSLA"")
     print(df)","{
    'rsym': '실시간조회종목코드',
    'pvol': '전일거래량',
    'open': '시가',
    'high': '고가',
    'low': '저가',
    'last': '현재가',
    'base': '전일종가',
    'tomv': '시가총액',
    'pamt': '전일거래대금',
    'uplp': '상한가',
    'dnlp': '하한가',
    'h52p': '52주최고가',
    'h52d': '52주최고일자',
    'l52p': '52주최저가',
    'l52d': '52주최저일자',
    'perx': 'PER',
    'pbrx': 'PBR',
    'epsx': 'EPS',
    'bpsx': 'BPS',
    'shar': '상장주수',
    'mcap': '자본금',
    'curr': '통화',
    'zdiv': '소수점자리수',
    'vnit': '매매단위',
    't_xprc': '원환산당일가격',
    't_xdif': '원환산당일대비',
    't_xrat': '원환산당일등락',
    'p_xprc': '원환산전일가격',
    'p_xdif': '원환산전일대비',
    'p_xrat': '원환산전일등락',
    't_rate': '당일환율',
    'p_rate': '전일환율',
    't_xsgn': '원환산당일기호',
    'p_xsng': '원환산전일기호',
    'e_ordyn': '거래가능여부',
    'e_hogau': '호가단위',
    'e_icod': '업종(섹터)',
    'e_parp': '액면가',
    'tvol': '거래량',
    'tamt': '거래대금',
    'etyp_nm': 'ETP 분류명'
}","[""애플 주가 상세 정보 좀 보여줘."", ""테슬라 시가총액이랑 PER, PBR 알려줘."", ""엔비디아의 52주 최고가, 최저가와 그 날짜를 알려줘."", ""애플의 EPS, BPS, 상장주수 알려줘."", ""테슬라의 원화환산당일가격과 당일환율 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/price_detail/price_detail.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/price_detail/chk_price_detail.py
overseas_stock,기본시세,해외주식 현재가 1호가,REST,GET,/uapi/overseas-price/v1/quotations/inquire-asking-price,해외주식-033,inquire_asking_price,[해외주식] 기본시세 해외주식 현재가 1호가[해외주식-033] 해외주식 현재가 1호가 API를 호출하여 DataFrame으로 반환합니다.,"auth (str): 사용자권한정보
excd (str): 거래소코드 (예: NYS, NAS, AMS, 등)
symb (str): 종목코드 (예: TSLA)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
dataframe3 (Optional[pd.DataFrame]): 누적 데이터프레임 (output3)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame, pd.DataFrame]: 해외주식 현재가 1호가 데이터","     df1, df2, df3 = inquire_asking_price(auth=""your_auth_token"", excd=""NAS"", symb=""TSLA"")
     print(df1)
     print(df2)
     print(df3)","{
    'rsym': '실시간조회종목코드',
    'zdiv': '소수점자리수',
    'curr': '통화',
    'base': '전일종가',
    'open': '시가',
    'high': '고가',
    'low': '저가',
    'last': '현재가',
    'dymd': '호가일자',
    'dhms': '호가시간',
    'bvol': '매수호가총잔량',
    'avol': '매도호가총잔량',
    'bdvl': '매수호가총잔량대비',
    'advl': '매도호가총잔량대비',
    'code': '종목코드',
    'ropen': '시가율',
    'rhigh': '고가율',
    'rlow': '저가율',
    'rclose': '현재가율',
    'pbid1': '매수호가가격1',
    'pask1': '매도호가가격1',
    'vbid1': '매수호가잔량1',
    'vask1': '매도호가잔량1',
    'dbid1': '매수호가대비1',
    'dask1': '매도호가대비1',
    'vstm': 'VCMStart시간',
    'vetm': 'VCMEnd시간',
    'csbp': 'CAS/VCM기준가',
    'cshi': 'CAS/VCMHighprice',
    'cslo': 'CAS/VCMLowprice',
    'iep': 'IEP',
    'iev': 'IEV'
}","[""애플 현재 호가창 보여줘."", ""테슬라 현재 매수/매도 호가 상황이 궁금해."", ""지금 엔비디아 주식을 사려면 얼마에 주문해야 하는지 매도호가 알려줘."", ""애플의 매수호가총잔량과 매도호가총잔량 보여줘."", ""테슬라의 시가, 고가, 저가, 현재가와 등락률 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_asking_price/inquire_asking_price.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_asking_price/chk_inquire_asking_price.py
overseas_stock,기본시세,해외주식조건검색,REST,GET,/uapi/overseas-price/v1/quotations/inquire-search,v1_해외주식-015,inquire_search,[해외주식] 기본시세 해외주식조건검색[v1_해외주식-015] 해외주식조건검색 API를 호출하여 DataFrame으로 반환합니다.,"auth (str): """" (Null 값 설정)
excd (str): NYS : 뉴욕, NAS : 나스닥,  AMS : 아멕스  HKS : 홍콩, SHS : 상해 , SZS : 심천 HSX : 호치민, HNX : 하노이 TSE : 도쿄
co_yn_pricecur (str): 해당조건 사용시(1), 미사용시 필수항목아님
co_st_pricecur (str): 단위: 각국통화(JPY, USD, HKD, CNY, VND)
co_en_pricecur (str): 단위: 각국통화(JPY, USD, HKD, CNY, VND)
co_yn_rate (str): 해당조건 사용시(1), 미사용시 필수항목아님
co_st_rate (str): %
co_en_rate (str): %
co_yn_valx (str): 해당조건 사용시(1), 미사용시 필수항목아님
co_st_valx (str): 단위: 천
co_en_valx (str): 단위: 천
co_yn_shar (str): 해당조건 사용시(1), 미사용시 필수항목아님
co_st_shar (str): 단위: 천
co_en_shar (str): 단위: 천
co_yn_volume (str): 해당조건 사용시(1), 미사용시 필수항목아님
co_st_volume (str): 단위: 주
co_en_volume (str): 단위: 주
co_yn_amt (str): 해당조건 사용시(1), 미사용시 필수항목아님
co_st_amt (str): 단위: 천
co_en_amt (str): 단위: 천
co_yn_eps (str): 해당조건 사용시(1), 미사용시 필수항목아님
co_st_eps (str):
co_en_eps (str):
co_yn_per (str): 해당조건 사용시(1), 미사용시 필수항목아님
co_st_per (str):
co_en_per (str):
keyb (str): """" 공백 입력
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외주식조건검색 데이터","     df1, df2 = inquire_search(
         auth="""", excd=""NAS"", co_yn_pricecur=""1"", co_st_pricecur=""160"", co_en_pricecur=""161"",
         co_yn_rate="""", co_st_rate="""", co_en_rate="""", co_yn_valx="""", co_st_valx="""", co_en_valx="""",
         co_yn_shar="""", co_st_shar="""", co_en_shar="""", co_yn_volume="""", co_st_volume="""", co_en_volume="""",
         co_yn_amt="""", co_st_amt="""", co_en_amt="""", co_yn_eps="""", co_st_eps="""", co_en_eps="""",
         co_yn_per="""", co_st_per="""", co_en_per="""", keyb=""""
     )
     print(df1)
     print(df2)","{
    'zdiv': '소수점자리수',
    'stat': '거래상태정보',
    'crec': '현재조회종목수',
    'trec': '전체조회종목수',
    'nrec': 'Record Count',
    'rsym': '실시간조회심볼',
    'excd': '거래소코드',
    'symb': '종목코드',
    'last': '현재가',
    'shar': '발행주식',
    'valx': '시가총액',
    'plow': '저가',
    'phigh': '고가',
    'popen': '시가',
    'tvol': '거래량',
    'rate': '등락율',
    'diff': '대비',
    'sign': '기호',
    'avol': '거래대금',
    'eps': 'EPS',
    'per': 'PER',
    'rank': '순위',
    'e_ordyn': '매매가능'
}","[""나스닥에서 현재가가 160달러에서 161달러 사이인 종목 찾아줘."", ""뉴욕거래소에서 PER이 10 미만인 종목 리스트가 궁금해."", ""오늘 시가총액이 가장 큰 나스닥 종목과 그 시가총액 알려줘."", ""뉴욕거래소에서 거래량이 100만주 이상인 종목들의 현재가와 등락률 보여줘."", ""나스닥에서 EPS가 가장 높은 종목 5개 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_search/inquire_search.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_search/chk_inquire_search.py
overseas_stock,기본시세,해외주식 체결추이,REST,GET,/uapi/overseas-price/v1/quotations/inquire-ccnl,해외주식-037,quot_inquire_ccnl,해외주식 체결추이 API입니다.,"excd (str): [필수] 거래소명 (ex. NYS:뉴욕, NAS:나스닥, AMS:아멕스, HKS:홍콩, SHS:상해, SZS:심천, HSX:호치민, HNX:하노이, TSE:도쿄)
tday (str): [필수] 당일전일구분 (ex. 0:전일, 1:당일)
symb (str): [필수] 종목코드 (ex. 해외종목코드)
auth (str): 사용자권한정보
keyb (str): NEXT KEY BUFF
tr_cont (str): 연속거래여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한",pd.DataFrame: 해외주식 체결추이 데이터,"     df = quot_inquire_ccnl(excd=""NAS"", tday=""0"", symb=""TSLA"")
     print(df)","{
    'vpow': '체결강도',
    'evol': '체결량',
    'khms': '한국기준시간',
    'tvol': '거래량',
    'last': '체결가',
    'mtyp': '시장구분',
    'sign': '기호',
    'pbid': '매수호가',
    'diff': '대비',
    'pask': '매도호가',
    'rate': '등락율'
}","[""테슬라 오늘 체결 추이 보여줘."", ""애플 주식 오늘 시간대별로 어떻게 거래됐는지 궁금해."", ""방금 애플 주식이 얼마에 체결됐는지 체결가와 체결량 알려줘."", ""테슬라의 체결강도와 누적 거래량 보여줘."", ""오늘 엔비디아의 시간대별 등락율 추이 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/quot_inquire_ccnl/quot_inquire_ccnl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/quot_inquire_ccnl/chk_quot_inquire_ccnl.py
overseas_stock,기본시세,해외주식 상품기본정보,REST,GET,/uapi/overseas-price/v1/quotations/search-info,v1_해외주식-034,search_info,[해외주식] 기본시세 해외주식 상품기본정보[v1_해외주식-034] 해외주식 상품기본정보 API를 호출하여 DataFrame으로 반환합니다.,"prdt_type_cd (str): 512  미국 나스닥 / 513  미국 뉴욕 / 529  미국 아멕스  515  일본 501  홍콩 / 543  홍콩CNY / 558  홍콩USD 507  베트남 하노이 / 508  베트남 호치민 551  중국 상해A / 552  중국 심천A
pdno (str): 예) AAPL (애플)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외주식 상품기본정보 데이터,"     df = search_info(prdt_type_cd=""512"", pdno=""AAPL"")
     print(df)","{
    'std_pdno': '표준상품번호',
    'prdt_eng_name': '상품영문명',
    'natn_cd': '국가코드',
    'natn_name': '국가명',
    'tr_mket_cd': '거래시장코드',
    'tr_mket_name': '거래시장명',
    'ovrs_excg_cd': '해외거래소코드',
    'ovrs_excg_name': '해외거래소명',
    'tr_crcy_cd': '거래통화코드',
    'ovrs_papr': '해외액면가',
    'crcy_name': '통화명',
    'ovrs_stck_dvsn_cd': '해외주식구분코드',
    'prdt_clsf_cd': '상품분류코드',
    'prdt_clsf_name': '상품분류명',
    'sll_unit_qty': '매도단위수량',
    'buy_unit_qty': '매수단위수량',
    'tr_unit_amt': '거래단위금액',
    'lstg_stck_num': '상장주식수',
    'lstg_dt': '상장일자',
    'ovrs_stck_tr_stop_dvsn_cd': '해외주식거래정지구분코드',
    'lstg_abol_item_yn': '상장폐지종목여부',
    'ovrs_stck_prdt_grp_no': '해외주식상품그룹번호',
    'lstg_yn': '상장여부',
    'tax_levy_yn': '세금징수여부',
    'ovrs_stck_erlm_rosn_cd': '해외주식등록사유코드',
    'ovrs_stck_hist_rght_dvsn_cd': '해외주식이력권리구분코드',
    'chng_bf_pdno': '변경전상품번호',
    'prdt_type_cd_2': '상품유형코드2',
    'ovrs_item_name': '해외종목명',
    'sedol_no': 'SEDOL번호',
    'blbg_tckr_text': '블름버그티커내용',
    'ovrs_stck_etf_risk_drtp_cd': '해외주식ETF위험지표코드',
    'etp_chas_erng_rt_dbnb': 'ETP추적수익율배수',
    'istt_usge_isin_cd': '기관용도ISIN코드',
    'mint_svc_yn': 'MINT서비스여부',
    'mint_svc_yn_chng_dt': 'MINT서비스여부변경일자',
    'prdt_name': '상품명',
    'lei_cd': 'LEI코드',
    'ovrs_stck_stop_rson_cd': '해외주식정지사유코드',
    'lstg_abol_dt': '상장폐지일자',
    'mini_stk_tr_stat_dvsn_cd': '미니스탁거래상태구분코드',
    'mint_frst_svc_erlm_dt': 'MINT최초서비스등록일자',
    'mint_dcpt_trad_psbl_yn': 'MINT소수점매매가능여부',
    'mint_fnum_trad_psbl_yn': 'MINT정수매매가능여부',
    'mint_cblc_cvsn_ipsb_yn': 'MINT잔고전환불가여부',
    'ptp_item_yn': 'PTP종목여부',
    'ptp_item_trfx_exmt_yn': 'PTP종목양도세면제여부',
    'ptp_item_trfx_exmt_strt_dt': 'PTP종목양도세면제시작일자',
    'ptp_item_trfx_exmt_end_dt': 'PTP종목양도세면제종료일자',
    'dtm_tr_psbl_yn': '주간거래가능여부',
    'sdrf_stop_ecls_yn': '급등락정지제외여부',
    'sdrf_stop_ecls_erlm_dt': '급등락정지제외등록일자',
    'memo_text1': '메모내용1',
    'ovrs_now_pric1': '해외현재가격1',
    'last_rcvg_dtime': '최종수신일시'
}","[""애플 주식의 상품 기본 정보 알려줘."", ""테슬라의 영문 상품명이 뭐야?"", ""이 종목의 상장일과 거래통화코드 알려줘."", ""애플의 표준상품번호와 거래시장명 보여줘."", ""테슬라가 PTP 종목인지 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/search_info/search_info.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/search_info/chk_search_info.py
overseas_stock,기본시세,해외주식 업종별시세,REST,GET,/uapi/overseas-price/v1/quotations/industry-theme,해외주식-048,industry_theme,해외주식 업종별시세 API입니다.,"excd (str): [필수] 거래소명 (ex. NYS:뉴욕, NAS:나스닥, AMS:아멕스, HKS:홍콩, SHS:상해, SZS:심천, HSX:호치민, HNX:하노이, TSE:도쿄)
icod (str): [필수] 업종코드
vol_rang (str): [필수] 거래량조건 (ex. 0:전체, 1:1백주이상, 2:1천주이상, 3:1만주이상, 4:10만주이상, 5:100만주이상, 6:1000만주이상)
auth (str): 사용자권한정보
keyb (str): NEXT KEY BUFF
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: (output1 데이터, output2 데이터)","     df1, df2 = industry_theme(excd=""NAS"", icod=""010"", vol_rang=""0"")
     print(df1)
     print(df2)","{
    'zdiv': '소수점자리수',
    'stat': '거래상태정보',
    'crec': '현재조회종목수',
    'trec': '전체조회종목수',
    'nrec': 'RecordCount',
    'rsym': '실시간조회심볼',
    'excd': '거래소코드',
    'symb': '종목코드',
    'name': '종목명',
    'last': '현재가',
    'sign': '기호',
    'diff': '대비',
    'rate': '등락율',
    'tvol': '거래량',
    'vask': '매도잔량',
    'pask': '매도호가',
    'pbid': '매수호가',
    'vbid': '매수잔량',
    'seqn': '순위',
    'ename': '영문종목명',
    'e_ordyn': '매매가능'
}","[""미국 기술주 업종에 속한 종목들 시세 보여줘."", ""홍콩 금융주들 오늘 주가 흐름이 어때?"", ""오늘 나스닥의 반도체 관련주 중에서 가장 많이 오른 종목과 등락률 알려줘."", ""미국 기술주 업종의 종목명, 현재가, 등락률, 거래량 보여줘."", ""홍콩 시장에서 거래량이 10만주 이상인 종목 찾아줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/industry_theme/industry_theme.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/industry_theme/chk_industry_theme.py
overseas_stock,기본시세,해외지수분봉조회,REST,GET,/uapi/overseas-price/v1/quotations/inquire-time-indexchartprice,v1_해외주식-031,inquire_time_indexchartprice,[해외주식] 기본시세 해외지수분봉조회[v1_해외주식-031] 해외지수분봉조회 API를 호출하여 DataFrame으로 반환합니다.,"fid_cond_mrkt_div_code (str): N 해외지수 X 환율 KX 원화환율
fid_input_iscd (str): 종목번호(ex. TSLA)
fid_hour_cls_code (str): 0: 정규장, 1: 시간외
fid_pw_data_incu_yn (str): Y/N
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외지수분봉조회 데이터","     df1, df2 = inquire_time_indexchartprice(
         fid_cond_mrkt_div_code=""N"",
         fid_input_iscd=""SPX"",
         fid_hour_cls_code=""0"",
         fid_pw_data_incu_yn=""Y""
     )
     print(df1)
     print(df2)","{
    'ovrs_nmix_prdy_vrss': '해외 지수 전일 대비',
    'prdy_vrss_sign': '전일 대비 부호',
    'hts_kor_isnm': 'HTS 한글 종목명',
    'prdy_ctrt': '전일 대비율',
    'ovrs_nmix_prdy_clpr': '해외 지수 전일 종가',
    'acml_vol': '누적 거래량',
    'ovrs_nmix_prpr': '해외 지수 현재가',
    'stck_shrn_iscd': '주식 단축 종목코드',
    'ovrs_prod_oprc': '해외 상품 시가2',
    'ovrs_prod_hgpr': '해외 상품 최고가',
    'ovrs_prod_lwpr': '해외 상품 최저가',
    'stck_bsop_date': '주식 영업 일자',
    'stck_cntg_hour': '주식 체결 시간',
    'optn_prpr': '옵션 현재가',
    'optn_oprc': '옵션 시가2',
    'optn_hgpr': '옵션 최고가',
    'optn_lwpr': '옵션 최저가',
    'cntg_vol': '체결 거래량'
}","[""S&P500 지수 30분봉 차트 보여줘."", ""오늘 나스닥 지수 분봉 흐름이 어땠는지 궁금해."", ""오늘 오전 10시에 다우존스 지수와 체결 거래량 알려줘."", ""나스닥 지수의 오늘 시가, 고가, 저가, 현재가 보여줘."", ""오늘 S&P500 지수의 누적 거래량 분봉으로 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_time_indexchartprice/inquire_time_indexchartprice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_time_indexchartprice/chk_inquire_time_indexchartprice.py
overseas_stock,시세분석,해외주식 상승율/하락율,REST,GET,/uapi/overseas-stock/v1/ranking/updown-rate,해외주식-041,updown_rate,해외주식 상승률/하락률 순위를 조회합니다.,"excd (str): [필수] 거래소명 (ex. NYS:뉴욕, NAS:나스닥, AMS:아멕스, HKS:홍콩, SHS:상해, SZS:심천, HSX:호치민, HNX:하노이, TSE:도쿄)
nday (str): [필수] N일자값 (ex. 0:당일, 1:2일, 2:3일, 3:5일, 4:10일, 5:20일전, 6:30일, 7:60일, 8:120일, 9:1년)
gubn (str): [필수] 상승율/하락율 구분 (ex. 0:하락율, 1:상승율)
vol_rang (str): [필수] 거래량조건 (ex. 0:전체, 1:1백주이상, 2:1천주이상, 3:1만주이상, 4:10만주이상, 5:100만주이상, 6:1000만주이상)
auth (str): 사용자권한정보
keyb (str): NEXT KEY BUFF
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: 상승률/하락률 순위 데이터","     df1, df2 = updown_rate(excd=""NYS"", nday=""0"", gubn=""1"", vol_rang=""0"")
     print(df1)
     print(df2)","{
    'zdiv': '소수점자리수',
    'stat': '거래상태정보',
    'crec': '현재조회종목수',
    'trec': '전체조회종목수',
    'nrec': 'RecordCount',
    'rsym': '실시간조회심볼',
    'excd': '거래소코드',
    'symb': '종목코드',
    'name': '종목명',
    'last': '현재가',
    'sign': '기호',
    'diff': '대비',
    'rate': '등락율',
    'tvol': '거래량',
    'pask': '매도호가',
    'pbid': '매수호가',
    'n_base': '기준가격',
    'n_diff': '기준가격대비',
    'n_rate': '기준가격대비율',
    'rank': '순위',
    'ename': '영문종목명',
    'e_ordyn': '매매가능',
    'tamt': '거래대금'
}","[""오늘 나스닥에서 가장 많이 오른 종목 상위 10개 보여줘."", ""뉴욕거래소에서 5일 연속 하락한 종목들이 궁금해."", ""거래량이 10만주 이상인 종목 중에서 상승률 순위와 거래대금 보여줘."", ""오늘 가장 많이 상승한 종목의 등락률과 현재가 알려줘."", ""오늘 나스닥에서 등락률 상위 5개 종목의 영문종목명 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/updown_rate/updown_rate.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/updown_rate/chk_updown_rate.py
overseas_stock,시세분석,해외주식 권리종합,REST,GET,/uapi/overseas-price/v1/quotations/rights-by-ice,해외주식-050,rights_by_ice,"해외주식 권리종합 API입니다. 한국투자 HTS(eFriend Plus) > [7833] 해외주식 권리(ICE제공) 화면의 ""전체"" 탭 기능을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다. ※ 조회기간 기준일 입력시 참고 - 상환: 상환일자, 조기상환: 조기상환일자, 티커변경: 적용일, 그 외: 발표일","ncod (str): [필수] 국가코드 (ex. CN:중국,HK:홍콩,US:미국,JP:일본,VN:베트남)
symb (str): [필수] 종목코드
st_ymd (str): 일자시작일 (ex. 미입력시 3개월전)
ed_ymd (str): 일자종료일 (ex. 미입력시 3개월후)",pd.DataFrame: 해외주식 권리종합 정보,"     df = rights_by_ice(""US"", ""NVDL"")
     print(df)","{
    'anno_dt': 'ICE공시일',
    'ca_title': '권리유형',
    'div_lock_dt': '배당락일',
    'pay_dt': '지급일',
    'record_dt': '기준일',
    'validity_dt': '효력일자',
    'local_end_dt': '현지지시마감일',
    'lock_dt': '권리락일',
    'delist_dt': '상장폐지일',
    'redempt_dt': '상환일자',
    'early_redempt_dt': '조기상환일자',
    'effective_dt': '적용일'
}","[""엔비디아 최근 권리 발생 내역 알려줘."", ""애플의 다음 배당락일과 지급일 알려줘."", ""최근에 액면분할한 미국 주식이 있는지 권리유형과 함께 알려줘."", ""엔비디아의 권리유형, 기준일, 효력일자 알려줘."", ""애플의 최근 배당 관련 공시일과 배당락일 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/rights_by_ice/rights_by_ice.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/rights_by_ice/chk_rights_by_ice.py
overseas_stock,시세분석,해외주식 가격급등락,REST,GET,/uapi/overseas-stock/v1/ranking/price-fluct,해외주식-038,price_fluct,[해외주식] 시세분석 > 해외주식 가격급등락[해외주식-038] 해외주식 가격급등락 API를 호출하여 DataFrame으로 반환합니다.,"excd (str): [필수] 거래소명 (ex. NYS:뉴욕, NAS:나스닥, AMS:아멕스, HKS:홍콩, SHS:상해, SZS:심천, HSX:호치민, HNX:하노이, TSE:도쿄)
gubn (str): [필수] 급등/급락구분 (ex. 0:급락, 1:급등)
mixn (str): [필수] N분전콤보값 (ex. 0:1분전, 1:2분전, 2:3분전, 3:5분전, 4:10분전, 5:15분전, 6:20분전, 7:30분전, 8:60분전, 9:120분전)
vol_rang (str): [필수] 거래량조건 (ex. 0:전체, 1:1백주이상, 2:1천주이상, 3:1만주이상, 4:10만주이상, 5:100만주이상, 6:1000만주이상)
keyb (str): NEXT KEY BUFF
auth (str): 사용자권한정보
tr_cont (str): 연속거래여부
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: 해외주식 가격급등락 데이터 (output1, output2)","     df1, df2 = price_fluct(excd=""NAS"", gubn=""0"", mixn=""0"", vol_rang=""0"")
     print(df1)
     print(df2)","{
    'zdiv': '소수점자리수',
    'stat': '거래상태',
    'nrec': 'RecordCount',
    'rsym': '실시간조회심볼',
    'excd': '거래소코드',
    'symb': '종목코드',
    'knam': '종목명',
    'name': '종목명',
    'last': '현재가',
    'sign': '기호',
    'diff': '대비',
    'rate': '등락율',
    'tvol': '거래량',
    'pask': '매도호가',
    'pbid': '매수호가',
    'n_base': '기준가격',
    'n_diff': '기준가격대비',
    'n_rate': '기준가격대비율',
    'enam': '영문종목명',
    'e_ordyn': '매매가능',
    'tamt': '거래대금',
    'n_last': '기준현재가'
}","[""최근 1분 동안 가장 주가가 많이 오른 나스닥 종목이 뭐야?"", ""뉴욕거래소에서 10분 전보다 5% 이상 급락한 종목 리스트 보여줘."", ""방금 가격이 급등한 종목의 현재가와 등락률 알려줘."", ""1분 전에 비해 가격이 급등한 나스닥 종목과 기준가격대비율 보여줘."", ""거래량이 10만주 이상인 종목 중에서 5분 전 대비 급등한 종목 찾아줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/price_fluct/price_fluct.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/price_fluct/chk_price_fluct.py
overseas_stock,시세분석,해외주식 거래량순위,REST,GET,/uapi/overseas-stock/v1/ranking/trade-vol,해외주식-043,trade_vol,[해외주식] 시세분석 > 해외주식 거래량순위[해외주식-043] 해외주식 거래량순위 API를 호출하여 DataFrame으로 반환합니다.,"excd (str): [필수] 거래소명 (ex. NYS:뉴욕, NAS:나스닥, AMS:아멕스, HKS:홍콩, SHS:상해, SZS:심천, HSX:호치민, HNX:하노이, TSE:도쿄)
nday (str): [필수] N분전콤보값 (ex. 0:당일, 1:2일전, 2:3일전, 3:5일전, 4:10일전, 5:20일전, 6:30일전, 7:60일전, 8:120일전, 9:1년전)
vol_rang (str): [필수] 거래량조건 (ex. 0:전체, 1:1백주이상, 2:1천주이상, 3:1만주이상, 4:10만주이상, 5:100만주이상, 6:1000만주이상)
keyb (str): NEXT KEY BUFF (ex. """")
auth (str): 사용자권한정보 (ex. """")
prc1 (str): 가격 필터 시작 (ex. """")
prc2 (str): 가격 필터 종료 (ex. """")
tr_cont (str): 연속거래여부 (ex. """")
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임1
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임2
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: 해외주식 거래량순위 데이터 (output1, output2)","     df1, df2 = trade_vol(excd=""NYS"", nday=""0"", vol_rang=""0"")
     print(df1)
     print(df2)","{
    'zdiv': '소수점자리수',
    'stat': '거래상태정보',
    'crec': '현재조회종목수',
    'trec': '전체조회종목수',
    'nrec': 'RecordCount',
    'rsym': '실시간조회심볼',
    'excd': '거래소코드',
    'symb': '종목코드',
    'name': '종목명',
    'last': '현재가',
    'sign': '기호',
    'diff': '대비',
    'rate': '등락율',
    'pask': '매도호가',
    'pbid': '매수호가',
    'tvol': '거래량',
    'tamt': '거래대금',
    'a_tvol': '평균거래량',
    'rank': '순위',
    'ename': '영문종목명',
    'e_ordyn': '매매가능'
}","[""오늘 뉴욕거래소에서 거래량 가장 많은 종목 상위 20개 보여줘."", ""최근 5일 평균 거래량이 가장 높은 나스닥 종목이 궁금해."", ""오늘 애플의 거래량과 평균거래량 알려줘."", ""거래량 상위 10개 종목의 현재가와 등락률 보여줘."", ""오늘 나스닥에서 거래대금이 가장 많은 종목 순위 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/trade_vol/trade_vol.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/trade_vol/chk_trade_vol.py
overseas_stock,시세분석,해외주식 기간별권리조회,REST,GET,/uapi/overseas-price/v1/quotations/period-rights,해외주식-052,period_rights,"해외주식 기간별권리조회 API입니다. 한국투자 HTS(eFriend Plus) > [7520] 기간별해외증권권리조회 화면을 API로 개발한 사항으로, 해당 화면을 참고하시면 기능을 이해하기 쉽습니다. ※ 확정여부가 '예정'으로 표시되는 경우는 권리정보가 변경될 수 있으니 참고자료로만 활용하시기 바랍니다.","rght_type_cd (str): [필수] 권리유형코드 (%%:전체, 01:유상, 02:무상, 03:배당, 11:합병,14:액면분할, 15:액면병합, 17:감자, 54:WR청구,61:원리금상환, 71:WR소멸, 74:배당옵션, 75:특별배당, 76:ISINCODE변경, 77:실권주청약)
inqr_dvsn_cd (str): [필수] 조회구분코드 (02:현지기준일, 03:청약시작일, 04:청약종료일)
inqr_strt_dt (str): [필수] 조회시작일자 (20250101)
inqr_end_dt (str): [필수] 조회종료일자 (20250131)
pdno (str): 상품번호
prdt_type_cd (str): 상품유형코드
NK50 (str): 연속조회키50
FK50 (str): 연속조회검색조건50
tr_cont (str): 연속거래여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한",pd.DataFrame: 해외주식 기간별권리조회 데이터,"     df = period_rights(""%%"", ""02"", ""20240417"", ""20240417"")
     print(df)","{
    'bass_dt': '기준일자',
    'rght_type_cd': '권리유형코드',
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'prdt_type_cd': '상품유형코드',
    'std_pdno': '표준상품번호',
    'acpl_bass_dt': '현지기준일자',
    'sbsc_strt_dt': '청약시작일자',
    'sbsc_end_dt': '청약종료일자',
    'cash_alct_rt': '현금배정비율',
    'stck_alct_rt': '주식배정비율',
    'crcy_cd': '통화코드',
    'crcy_cd2': '통화코드2',
    'crcy_cd3': '통화코드3',
    'crcy_cd4': '통화코드4',
    'alct_frcr_unpr': '배정외화단가',
    'stkp_dvdn_frcr_amt2': '주당배당외화금액2',
    'stkp_dvdn_frcr_amt3': '주당배당외화금액3',
    'stkp_dvdn_frcr_amt4': '주당배당외화금액4',
    'dfnt_yn': '확정여부'
}","[""이번 달에 배당락일이 있는 미국 주식 목록 보여줘."", ""최근에 유상증자를 발표한 홍콩 주식이 있는지 궁금해."", ""내가 가진 종목의 현지기준일과 청약종료일 알려줘."", ""지난달 액면분할을 진행한 미국 주식과 주식배정비율 알려줘."", ""최근 배당을 발표한 종목의 현금배정비율 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/period_rights/period_rights.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/period_rights/chk_period_rights.py
overseas_stock,주문/계좌,해외주식 체결기준현재잔고,REST,GET,/uapi/overseas-stock/v1/trading/inquire-present-balance,v1_해외주식-008,inquire_present_balance,[해외주식] 주문/계좌 해외주식 체결기준현재잔고[v1_해외주식-008] 해외주식 체결기준현재잔고 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
wcrc_frcr_dvsn_cd (str): 01 : 원화  02 : 외화
natn_cd (str): 000 전체 840 미국 344 홍콩 156 중국 392 일본 704 베트남
tr_mket_cd (str): [Request body NATN_CD 000 설정] 00 : 전체  [Request body NATN_CD 840 설정] 00 : 전체 01 : 나스닥(NASD) 02 : 뉴욕거래소(NYSE) 03 : 미국(PINK SHEETS) 04 : 미국(OTCBB) 05 : 아멕스(AMEX)  [Request body NATN_CD 156 설정] 00 : 전체 01 : 상해B 02 : 심천B 03 : 상해A 04 : 심천A  [Request body NATN_CD 392 설정] 01 : 일본  [Request body NATN_CD 704 설정] 01 : 하노이거래 02 : 호치민거래소  [Request body NATN_CD 344 설정] 01 : 홍콩 02 : 홍콩CNY 03 : 홍콩USD
inqr_dvsn_cd (str): 00 : 전체  01 : 일반해외주식  02 : 미니스탁
env_dv (str): 실전모의구분 (real:실전, demo:모의)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
dataframe3 (Optional[pd.DataFrame]): 누적 데이터프레임 (output3)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame, pd.DataFrame]: 해외주식 체결기준현재잔고 데이터","     df1, df2, df3 = inquire_present_balance(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         wcrc_frcr_dvsn_cd=""01"",
         natn_cd=""000"",
         tr_mket_cd=""00"",
         inqr_dvsn_cd=""00""
     )
     print(df1)
     print(df2)
     print(df3)","{
    'cblc_qty13': '잔고수량13',
    'thdt_buy_ccld_qty1': '당일매수체결수량1',
    'thdt_sll_ccld_qty1': '당일매도체결수량1',
    'ccld_qty_smtl1': '체결수량합계1',
    'ord_psbl_qty1': '주문가능수량1',
    'frcr_pchs_amt': '외화매입금액',
    'frcr_evlu_amt2': '외화평가금액2',
    'evlu_pfls_amt2': '평가손익금액2',
    'evlu_pfls_rt1': '평가손익율1',
    'pdno': '상품번호',
    'bass_exrt': '기준환율',
    'buy_crcy_cd': '매수통화코드',
    'ovrs_now_pric1': '해외현재가격1',
    'avg_unpr3': '평균단가3',
    'tr_mket_name': '거래시장명',
    'natn_kor_name': '국가한글명',
    'pchs_rmnd_wcrc_amt': '매입잔액원화금액',
    'thdt_buy_ccld_frcr_amt': '당일매수체결외화금액',
    'thdt_sll_ccld_frcr_amt': '당일매도체결외화금액',
    'unit_amt': '단위금액',
    'std_pdno': '표준상품번호',
    'prdt_type_cd': '상품유형코드',
    'loan_rmnd': '대출잔액',
    'loan_dt': '대출일자',
    'loan_expd_dt': '대출만기일자',
    'ovrs_excg_cd': '해외거래소코드',
    'item_lnkg_excg_cd': '종목연동거래소코드',
    'crcy_cd': '통화코드',
    'frcr_buy_amt_smtl': '외화매수금액합계',
    'frcr_sll_amt_smtl': '외화매도금액합계',
    'frcr_dncl_amt_2': '외화예수금액2',
    'frst_bltn_exrt': '최초고시환율',
    'frcr_buy_mgn_amt': '외화매수증거금액',
    'frcr_etc_mgna': '외화기타증거금',
    'frcr_drwg_psbl_amt_1': '외화출금가능금액1',
    'frcr_evlu_amt2': '출금가능원화금액',
    'acpl_cstd_crcy_yn': '현지보관통화여부',
    'nxdy_frcr_drwg_psbl_amt': '익일외화출금가능금액',
    'output3': '응답상세3',
    'pchs_amt_smtl': '매입금액합계',
    'evlu_amt_smtl': '평가금액합계',
    'evlu_pfls_amt_smtl': '평가손익금액합계',
    'dncl_amt': '예수금액',
    'cma_evlu_amt': 'CMA평가금액',
    'tot_dncl_amt': '총예수금액',
    'etc_mgna': '기타증거금',
    'wdrw_psbl_tot_amt': '인출가능총금액',
    'frcr_evlu_tota': '외화평가총액',
    'evlu_erng_rt1': '평가수익율1',
    'pchs_amt_smtl_amt': '매입금액합계금액',
    'evlu_amt_smtl_amt': '평가금액합계금액',
    'tot_evlu_pfls_amt': '총평가손익금액',
    'tot_asst_amt': '총자산금액',
    'buy_mgn_amt': '매수증거금액',
    'mgna_tota': '증거금총액',
    'frcr_use_psbl_amt': '외화사용가능금액',
    'ustl_sll_amt_smtl': '미결제매도금액합계',
    'ustl_buy_amt_smtl': '미결제매수금액합계',
    'tot_frcr_cblc_smtl': '총외화잔고합계',
    'tot_loan_amt': '총대출금액'
}","[""내 해외주식 계좌 잔고를 원화 기준으로 보여줘."", ""내가 가진 미국 주식들의 평가손익금액과 평가손익율 알려줘."", ""내 계좌의 총 평가손익 합계와 총자산금액 알려줘."", ""내가 보유한 테슬라의 주문가능수량과 평균단가 알려줘."", ""내 계좌의 외화예수금액과 출금가능원화금액 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_present_balance/inquire_present_balance.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_present_balance/chk_inquire_present_balance.py
overseas_stock,주문/계좌,해외주식 잔고,REST,GET,/uapi/overseas-stock/v1/trading/inquire-balance,v1_해외주식-006,inquire_balance,[해외주식] 주문/계좌 해외주식 잔고[v1_해외주식-006] 해외주식 잔고 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ovrs_excg_cd (str): [모의] NASD : 나스닥 NYSE : 뉴욕  AMEX : 아멕스  [실전] NASD : 미국전체 NAS : 나스닥 NYSE : 뉴욕  AMEX : 아멕스  [모의/실전 공통] SEHK : 홍콩 SHAA : 중국상해 SZAA : 중국심천 TKSE : 일본 HASE : 베트남 하노이 VNSE : 베트남 호치민
tr_crcy_cd (str): USD : 미국달러 HKD : 홍콩달러 CNY : 중국위안화 JPY : 일본엔화 VND : 베트남동
FK200 (str): 공란 : 최초 조회시 이전 조회 Output CTX_AREA_FK200값 : 다음페이지 조회시(2번째부터)
NK200 (str): 공란 : 최초 조회시 이전 조회 Output CTX_AREA_NK200값 : 다음페이지 조회시(2번째부터)
env_dv (str): 실전모의구분 (real:실전, demo:모의)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외주식 잔고 데이터","     df1, df2 = inquire_balance(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ovrs_excg_cd=""NASD"",
         tr_crcy_cd=""USD"",
         FK200="""",
         NK200=""""
     )
     print(df1)
     print(df2)","{
    'cano': '종합계좌번호',
    'acnt_prdt_cd': '계좌상품코드',
    'prdt_type_cd': '상품유형코드',
    'ovrs_pdno': '해외상품번호',
    'frcr_evlu_pfls_amt': '외화평가손익금액',
    'evlu_pfls_rt': '평가손익율',
    'pchs_avg_pric': '매입평균가격',
    'ovrs_cblc_qty': '해외잔고수량',
    'ord_psbl_qty': '주문가능수량',
    'frcr_pchs_amt1': '외화매입금액1',
    'ovrs_stck_evlu_amt': '해외주식평가금액',
    'now_pric2': '현재가격2',
    'tr_crcy_cd': '거래통화코드',
    'ovrs_excg_cd': '해외거래소코드',
    'loan_type_cd': '대출유형코드',
    'loan_dt': '대출일자',
    'expd_dt': '만기일자',
    'frcr_pchs_amt1': '외화매입금액1',
    'ovrs_rlzt_pfls_amt': '해외실현손익금액',
    'ovrs_tot_pfls': '해외총손익',
    'rlzt_erng_rt': '실현수익율',
    'tot_evlu_pfls_amt': '총평가손익금액',
    'tot_pftrt': '총수익률',
    'frcr_buy_amt_smtl1': '외화매수금액합계1',
    'ovrs_rlzt_pfls_amt2': '해외실현손익금액2',
    'frcr_buy_amt_smtl2': '외화매수금액합계2'
}","[""내 해외주식 계좌 잔고 보여줘."", ""내가 가진 미국 주식들 수익률 좀 확인하고 싶어."", ""내 계좌의 총평가손익금액과 총수익률 알려줘."", ""내가 보유한 애플의 평가손익율과 실현수익율 보여줘."", ""내 계좌의 외화매입금액과 해외실현손익금액 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_balance/inquire_balance.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_balance/chk_inquire_balance.py
overseas_stock,주문/계좌,해외주식 미체결내역,REST,GET,/uapi/overseas-stock/v1/trading/inquire-nccs,v1_해외주식-005,inquire_nccs,[해외주식] 주문/계좌 해외주식 미체결내역[v1_해외주식-005] 해외주식 미체결내역 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ovrs_excg_cd (str): NASD : 나스닥 NYSE : 뉴욕  AMEX : 아멕스 SEHK : 홍콩 SHAA : 중국상해 SZAA : 중국심천 TKSE : 일본 HASE : 베트남 하노이 VNSE : 베트남 호치민  * NASD 인 경우만 미국전체로 조회되며 나머지 거래소 코드는 해당 거래소만 조회됨 * 공백 입력 시 다음조회가 불가능하므로, 반드시 거래소코드 입력해야 함
sort_sqn (str): DS : 정순 그외 : 역순  [header tr_id: TTTS3018R] """"(공란)
FK200 (str): 공란 : 최초 조회시 이전 조회 Output CTX_AREA_FK200값 : 다음페이지 조회시(2번째부터)
NK200 (str): 공란 : 최초 조회시 이전 조회 Output CTX_AREA_NK200값 : 다음페이지 조회시(2번째부터)
env_dv (str): 실전모의구분 (real:실전, demo:모의)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외주식 미체결내역 데이터,"     df = inquire_nccs(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ovrs_excg_cd=""NYSE"",
         sort_sqn=""DS"",
         FK200="""",
         NK200=""""
     )
     print(df)","{
    'ord_dt': '주문일자',
    'ord_gno_brno': '주문채번지점번호',
    'odno': '주문번호',
    'orgn_odno': '원주문번호',
    'pdno': '상품번호',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'rvse_cncl_dvsn_cd': '정정취소구분코드',
    'rjct_rson': '거부사유',
    'ord_tmd': '주문시각',
    'tr_crcy_cd': '거래통화코드',
    'natn_cd': '국가코드',
    'ft_ord_qty': 'FT주문수량',
    'ft_ccld_qty': 'FT체결수량',
    'nccs_qty': '미체결수량',
    'ft_ord_unpr3': 'FT주문단가3',
    'ft_ccld_unpr3': 'FT체결단가3',
    'ft_ccld_amt3': 'FT체결금액3',
    'ovrs_excg_cd': '해외거래소코드',
    'loan_type_cd': '대출유형코드',
    'loan_dt': '대출일자',
    'usa_amk_exts_rqst_yn': '미국애프터마켓연장신청여부',
}","[""내 해외주식 미체결 내역 보여줘."", ""어제 주문한 애플 주식 아직 체결 안됐는지 확인해줘."", ""내 미체결 주문들의 주문수량과 미체결수량 보여줘."", ""아직 체결 안된 내 테슬라 주문의 주문번호와 주문시각 알려줘."", ""내 계좌의 모든 미체결 내역을 거래소별로 정렬해서 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_nccs/inquire_nccs.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_nccs/chk_inquire_nccs.py
overseas_stock,주문/계좌,해외주식 주문체결내역,REST,GET,/uapi/overseas-stock/v1/trading/inquire-ccnl,v1_해외주식-007,inquire_ccnl,[해외주식] 주문/계좌 해외주식 주문체결내역[v1_해외주식-007] 해외주식 주문체결내역 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
pdno (str): 전종목일 경우 ""%"" 입력 ※ 모의투자계좌의 경우 """"(전체 조회)만 가능
ord_strt_dt (str): YYYYMMDD 형식 (현지시각 기준)
ord_end_dt (str): YYYYMMDD 형식 (현지시각 기준)
sll_buy_dvsn (str): 00 : 전체  01 : 매도  02 : 매수 ※ 모의투자계좌의 경우 ""00""(전체 조회)만 가능
ccld_nccs_dvsn (str): 00 : 전체  01 : 체결  02 : 미체결 ※ 모의투자계좌의 경우 ""00""(전체 조회)만 가능
ovrs_excg_cd (str): 전종목일 경우 ""%"" 입력 NASD : 미국시장 전체(나스닥, 뉴욕, 아멕스) NYSE : 뉴욕 AMEX : 아멕스 SEHK : 홍콩  SHAA : 중국상해 SZAA : 중국심천 TKSE : 일본 HASE : 베트남 하노이 VNSE : 베트남 호치민 ※ 모의투자계좌의 경우 """"(전체 조회)만 가능
sort_sqn (str): DS : 정순 AS : 역순  ※ 모의투자계좌의 경우 정렬순서 사용불가(Default : DS(정순))
ord_dt (str): """" (Null 값 설정)
ord_gno_brno (str): """" (Null 값 설정)
odno (str): """" (Null 값 설정) ※ 주문번호로 검색 불가능합니다. 반드시 """"(Null 값 설정) 바랍니다.
NK200 (str): 공란 : 최초 조회시 이전 조회 Output CTX_AREA_NK200값 : 다음페이지 조회시(2번째부터)
FK200 (str): 공란 : 최초 조회시 이전 조회 Output CTX_AREA_FK200값 : 다음페이지 조회시(2번째부터)
env_dv (str): 실전모의구분 (real:실전, demo:모의)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외주식 주문체결내역 데이터,"     df = inquire_ccnl(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         pdno="""",
         ord_strt_dt=""20250601"",
         ord_end_dt=""20250630"",
         sll_buy_dvsn=""00"",
         ccld_nccs_dvsn=""00"",
         ovrs_excg_cd=""%"",
         sort_sqn=""DS"",
         ord_dt="""",
         ord_gno_brno=""02111"",
         odno="""",
         NK200="""",
         FK200=""""
     )
     print(df)","{
    'ord_dt': '주문일자',
    'ord_gno_brno': '주문채번지점번호',
    'odno': '주문번호',
    'orgn_odno': '원주문번호',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'sll_buy_dvsn_cd_name': '매도매수구분코드명',
    'rvse_cncl_dvsn': '정정취소구분',
    'rvse_cncl_dvsn_name': '정정취소구분명',
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'ft_ord_qty': 'FT주문수량',
    'ft_ord_unpr3': 'FT주문단가3',
    'ft_ccld_qty': 'FT체결수량',
    'ft_ccld_unpr3': 'FT체결단가3',
    'ft_ccld_amt3': 'FT체결금액3',
    'nccs_qty': '미체결수량',
    'prcs_stat_name': '처리상태명',
    'rjct_rson': '거부사유',
    'rjct_rson_name': '거부사유명',
    'ord_tmd': '주문시각',
    'tr_mket_name': '거래시장명',
    'tr_crcy_cd': '거래통화코드',
    'tr_natn': '거래국가',
    'ovrs_excg_cd': '해외거래소코드',
    'tr_natn_name': '거래국가명',
    'dmst_ord_dt': '국내주문일자',
    'thco_ord_tmd': '당사주문시각',
    'loan_type_cd': '대출유형코드',
    'loan_dt': '대출일자',
    'mdia_dvsn_name': '매체구분명',
    'usa_amk_exts_rqst_yn': '미국애프터마켓연장신청여부',
    'splt_buy_attr_name': '분할매수/매도속성명'
}","[""지난주 내 해외주식 주문 체결 내역 보여줘."", ""체결된 내역만 조회하고 싶어."", ""내가 어제 판 애플 주식의 평균 체결 단가와 총 체결금액 알려줘."", ""지난달 내 모든 주문의 처리상태명과 체결수량 보여줘."", ""미국 주식 거래 내역만 필터링해서 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_ccnl/inquire_ccnl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_ccnl/chk_inquire_ccnl.py
overseas_stock,주문/계좌,해외주식 매수가능금액조회,REST,GET,/uapi/overseas-stock/v1/trading/inquire-psamount,v1_해외주식-014,inquire_psamount,[해외주식] 주문/계좌 해외주식 매수가능금액조회[v1_해외주식-014] 해외주식 매수가능금액조회 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ovrs_excg_cd (str): NASD : 나스닥 / NYSE : 뉴욕 / AMEX : 아멕스 SEHK : 홍콩 / SHAA : 중국상해 / SZAA : 중국심천 TKSE : 일본 / HASE : 하노이거래소 / VNSE : 호치민거래소
ovrs_ord_unpr (str): 해외주문단가 (23.8) 정수부분 23자리, 소수부분 8자리
item_cd (str): 종목코드
env_dv (str): 실전모의구분 (real:실전, demo:모의)
tr_cont (str): 연속 거래 여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외주식 매수가능금액조회 데이터,"     df = inquire_psamount(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ovrs_excg_cd=""NASD"",
         ovrs_ord_unpr=""1.4"",
         item_cd=""QQQ""
     )
     print(df)","{
    'tr_crcy_cd': '거래통화코드',
    'ord_psbl_frcr_amt': '주문가능외화금액',
    'sll_ruse_psbl_amt': '매도재사용가능금액',
    'ovrs_ord_psbl_amt': '해외주문가능금액',
    'max_ord_psbl_qty': '최대주문가능수량',
    'echm_af_ord_psbl_amt': '환전이후주문가능금액',
    'echm_af_ord_psbl_qty': '환전이후주문가능수량',
    'ord_psbl_qty': '주문가능수량',
    'exrt': '환율',
    'frcr_ord_psbl_amt1': '외화주문가능금액1',
    'ovrs_max_ord_psbl_qty': '해외최대주문가능수량'
}","[""내 계좌로 테슬라 주식 몇 주까지 살 수 있는지 최대주문가능수량 알려줘."", ""환전 안하고 원화로 애플 주식 최대 몇 주 매수 가능한지 알려줘."", ""지금 가진 돈으로 엔비디아를 최대한 몇 주 살 수 있는지 주문가능수량 알려줘."", ""내 계좌의 주문가능외화금액과 매도재사용가능금액 보여줘."", ""환전했을 경우 주문가능금액과 주문가능수량 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_psamount/inquire_psamount.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_psamount/chk_inquire_psamount.py
overseas_stock,주문/계좌,해외증거금 통화별조회,REST,GET,/uapi/overseas-stock/v1/trading/foreign-margin,해외주식-035,foreign_margin,[해외주식] 주문/계좌 해외증거금 통화별조회[해외주식-035] 해외증거금 통화별조회 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호 (필수)
acnt_prdt_cd (str): 계좌상품코드 (필수)
tr_cont (str): 연속 거래 여부 (기본값: """")
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)",Optional[pd.DataFrame]: 해외증거금 통화별조회 데이터,"     df = foreign_margin(""12345678"", ""01"")
     print(df)","{
    'natn_name': '국가명',
    'frcr_dncl_amt1': '외화예수금액',
    'ustl_buy_amt': '미결제매수금액',
    'ustl_sll_amt': '미결제매도금액',
    'frcr_rcvb_amt': '외화미수금액',
    'frcr_mgn_amt': '외화증거금액',
    'frcr_gnrl_ord_psbl_amt': '외화일반주문가능금액',
    'frcr_ord_psbl_amt1': '외화주문가능금액',
    'itgr_ord_psbl_amt': '통합주문가능금액',
    'bass_exrt': '기준환율'
}","[""내 계좌의 통화별 증거금 현황 보여줘."", ""달러로 주문 가능한 금액이 얼마 남았는지 외화일반주문가능금액 알려줘."", ""내 계좌의 기준 환율과 외화미수금액 알려줘."", ""내 계좌의 통화별 외화예수금액과 미결제매수/매도금액 보여줘."", ""통합주문가능금액을 통화별로 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/foreign_margin/foreign_margin.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/foreign_margin/chk_foreign_margin.py
overseas_stock,주문/계좌,해외주식 주문,REST,POST,/uapi/overseas-stock/v1/trading/order,v1_해외주식-001,order,[해외주식] 주문/계좌 해외주식 주문[v1_해외주식-001] 해외주식 주문 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ovrs_excg_cd (str): NASD : 나스닥 NYSE : 뉴욕 AMEX : 아멕스 SEHK : 홍콩 SHAA : 중국상해 SZAA : 중국심천 TKSE : 일본 HASE : 베트남 하노이 VNSE : 베트남 호치민
pdno (str): 종목코드
ord_qty (str): 주문수량 (해외거래소 별 최소 주문수량 및 주문단위 확인 필요)
ovrs_ord_unpr (str): 1주당 가격 * 시장가의 경우 1주당 가격을 공란으로 비우지 않음 ""0""으로 입력
ord_dv (str): 주문구분 (buy: 매수, sell: 매도)
ctac_tlno (str):
mgco_aptm_odno (str):
ord_svr_dvsn_cd (str): ""0""(Default)
ord_dvsn (str): [Header tr_id TTTT1002U(미국 매수 주문)] 00 : 지정가 32 : LOO(장개시지정가) 34 : LOC(장마감지정가) * 모의투자 VTTT1002U(미국 매수 주문)로는 00:지정가만 가능  [Header tr_id TTTT1006U(미국 매도 주문)] 00 : 지정가 31 : MOO(장개시시장가) 32 : LOO(장개시지정가) 33 : MOC(장마감시장가) 34 : LOC(장마감지정가) * 모의투자 VTTT1006U(미국 매도 주문)로는 00:지정가만 가능  [Header tr_id TTTS1001U(홍콩 매도 주문)] 00 : 지정가 50 : 단주지정가 * 모의투자 VTTS1001U(홍콩 매도 주문)로는 00:지정가만 가능  [그외 tr_id] 제거
env_dv (str): 실전모의구분 (real:실전, demo:모의)",Optional[pd.DataFrame]: 해외주식 주문 데이터,"     df = order(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ovrs_excg_cd=""NASD"",
         pdno=""AAPL"",
         ord_qty=""1"",
         ovrs_ord_unpr=""145.00"",
         ord_dv=""buy"",
         ctac_tlno="""",
         mgco_aptm_odno="""",
         ord_svr_dvsn_cd=""0"",
         ord_dvsn=""00"",
         env_dv=""real""
     )
     print(df)","{
    'KRX_FWDG_ORD_ORGNO': '한국거래소전송주문조직번호',
    'ODNO': '주문번호',
    'ORD_TMD': '주문시각'
}","[""애플 주식 10주 매수 주문 넣어줘."", ""테슬라 시장가로 5주 매도해줘."", ""LOO(장개시지정가)로 엔비디아 1주 매수 주문 넣어줘."", ""지금 바로 애플 1주 살게."", ""해외주식 주문하고 나서 주문번호랑 주문시각 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/order/order.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/order/chk_order.py
overseas_stock,주문/계좌,해외주식 정정취소주문,REST,POST,/uapi/overseas-stock/v1/trading/order-rvsecncl,v1_해외주식-003,order_rvsecncl,[해외주식] 주문/계좌 해외주식 정정취소주문[v1_해외주식-003] 해외주식 정정취소주문 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ovrs_excg_cd (str): NASD : 나스닥  NYSE : 뉴욕  AMEX : 아멕스 SEHK : 홍콩 SHAA : 중국상해 SZAA : 중국심천 TKSE : 일본 HASE : 베트남 하노이 VNSE : 베트남 호치민
pdno (str): 상품번호
orgn_odno (str): 정정 또는 취소할 원주문번호 (해외주식_주문 API ouput ODNO  or 해외주식 미체결내역 API output ODNO 참고)
rvse_cncl_dvsn_cd (str): 01 : 정정  02 : 취소
ord_qty (str): 주문수량
ovrs_ord_unpr (str): 취소주문 시, ""0"" 입력
mgco_aptm_odno (str): 운용사지정주문번호
ord_svr_dvsn_cd (str): ""0""(Default)
env_dv (str): 실전모의구분 (real:실전, demo:모의)",Optional[pd.DataFrame]: 해외주식 정정취소주문 데이터,"     df = order_rvsecncl(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ovrs_excg_cd=""NYSE"",
         pdno=""BA"",
         orgn_odno=""30135009"",
         rvse_cncl_dvsn_cd=""01"",
         ord_qty=""1"",
         ovrs_ord_unpr=""226.00"",
         mgco_aptm_odno="""",
         ord_svr_dvsn_cd=""0"",
         env_dv=""real""
     )
     print(df)","{
    'KRX_FWDG_ORD_ORGNO': '한국거래소전송주문조직번호',
    'ODNO': '주문번호',
    'ORD_TMD': '주문시각'
}","[""아까 낸 애플 주식 주문 가격 좀 수정해줘."", ""테슬라 매수 주문 취소할게."", ""오전에 낸 엔비디아 주문을 전량 취소하고 싶어."", ""애플 매수 주문 가격을 150달러로 정정해줘."", ""해외주식 주문 정정하고 새로 받은 주문번호와 주문시각 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/order_rvsecncl/order_rvsecncl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/order_rvsecncl/chk_order_rvsecncl.py
overseas_stock,주문/계좌,해외주식 일별거래내역,REST,GET,/uapi/overseas-stock/v1/trading/inquire-period-trans,해외주식-063,inquire_period_trans,[해외주식] 주문/계좌 해외주식 일별거래내역[해외주식-063] 해외주식 일별거래내역 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호
acnt_prdt_cd (str): 계좌상품코드
erlm_strt_dt (str): 등록시작일자 (예: 20240420)
erlm_end_dt (str): 등록종료일자 (예: 20240520)
ovrs_excg_cd (str): 해외거래소코드
pdno (str): 상품번호
sll_buy_dvsn_cd (str): 매도매수구분코드 (00: 전체, 01: 매도, 02: 매수)
loan_dvsn_cd (str): 대출구분코드
FK100 (str): 연속조회검색조건100
NK100 (str): 연속조회키100
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외주식 일별거래내역 데이터","     df1, df2 = inquire_period_trans(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         erlm_strt_dt=""20240420"",
         erlm_end_dt=""20240520"",
         ovrs_excg_cd=""NAS"",
         pdno="""",
         sll_buy_dvsn_cd=""00"",
         loan_dvsn_cd="""",
         FK100="""",
         NK100=""""
     )
     print(df1)
     print(df2)","{
    'trad_dt': '매매일자',
    'sttl_dt': '결제일자',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'sll_buy_dvsn_name': '',
    'pdno': '상품번호',
    'ovrs_item_name': '',
    'ccld_qty': '체결수량',
    'amt_unit_ccld_qty': '금액단위체결수량',
    'ft_ccld_unpr2': 'FT체결단가2',
    'ovrs_stck_ccld_unpr': '해외주식체결단가',
    'tr_frcr_amt2': '거래외화금액2',
    'tr_amt': '거래금액',
    'frcr_excc_amt_1': '외화정산금액1',
    'wcrc_excc_amt': '원화정산금액',
    'dmst_frcr_fee1': '국내외화수수료1',
    'frcr_fee1': '외화수수료1',
    'dmst_wcrc_fee': '국내원화수수료',
    'ovrs_wcrc_fee': '해외원화수수료',
    'crcy_cd': '통화코드',
    'std_pdno': '표준상품번호',
    'erlm_exrt': '등록환율',
    'loan_dvsn_cd': '대출구분코드',
    'loan_dvsn_name': '',
    'frcr_buy_amt_smtl': '외화매수금액합계',
    'frcr_sll_amt_smtl': '외화매도금액합계',
    'dmst_fee_smtl': '국내수수료합계',
    'ovrs_fee_smtl': '해외수수료합계'
}","[""지난달 내 해외주식 거래내역 일별로 보여줘."", ""미국 주식 매도 내역만 필터링해서 보고 싶어."", ""내가 지난주에 거래한 총 수수료와 정산금액 알려줘."", ""지난달 내가 매수한 애플 주식의 체결수량과 체결단가 보여줘."", ""내 계좌의 외화매수금액합계와 외화매도금액합계 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_period_trans/inquire_period_trans.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_period_trans/chk_inquire_period_trans.py
overseas_stock,주문/계좌,해외주식 결제기준잔고,REST,GET,/uapi/overseas-stock/v1/trading/inquire-paymt-stdr-balance,해외주식-064,inquire_paymt_stdr_balance,[해외주식] 주문/계좌 해외주식 결제기준잔고[해외주식-064] 해외주식 결제기준잔고 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 종합계좌번호
acnt_prdt_cd (str): 계좌상품코드
bass_dt (str): 기준일자
wcrc_frcr_dvsn_cd (str): 원화외화구분코드 (01: 원화기준, 02: 외화기준)
inqr_dvsn_cd (str): 조회구분코드 (00: 전체, 01: 일반, 02: 미니스탁)
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
dataframe3 (Optional[pd.DataFrame]): 누적 데이터프레임 (output3)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame, pd.DataFrame]: 해외주식 결제기준잔고 데이터","     df1, df2, df3 = inquire_paymt_stdr_balance(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         bass_dt=""20230630"",
         wcrc_frcr_dvsn_cd=""01"",
         inqr_dvsn_cd=""00""
     )
     print(df1)
     print(df2)","{
    'pdno': '상품번호',
    'prdt_name': '상품명',
    'cblc_qty13': '잔고수량13',
    'ord_psbl_qty1': '주문가능수량1',
    'avg_unpr3': '평균단가3',
    'ovrs_now_pric1': '해외현재가격1',
    'frcr_pchs_amt': '외화매입금액',
    'frcr_evlu_amt2': '외화평가금액2',
    'evlu_pfls_amt2': '평가손익금액2',
    'bass_exrt': '기준환율',
    'oprt_dtl_dtime': '조작상세일시',
    'buy_crcy_cd': '매수통화코드',
    'thdt_sll_ccld_qty1': '당일매도체결수량1',
    'thdt_buy_ccld_qty1': '당일매수체결수량1',
    'evlu_pfls_rt1': '평가손익율1',
    'tr_mket_name': '거래시장명',
    'natn_kor_name': '국가한글명',
    'std_pdno': '표준상품번호',
    'mgge_qty': '담보수량',
    'loan_rmnd': '대출잔액',
    'prdt_type_cd': '상품유형코드',
    'ovrs_excg_cd': '해외거래소코드',
    'scts_dvsn_name': '유가증권구분명',
    'ldng_cblc_qty': '대여잔고수량',
    'crcy_cd': '통화코드',
    'crcy_cd_name': '통화코드명',
    'frcr_dncl_amt_2': '외화예수금액2',
    'frst_bltn_exrt': '최초고시환율',
    'frcr_evlu_amt2': '외화평가금액2',
    'pchs_amt_smtl_amt': '매입금액합계금액',
    'tot_evlu_pfls_amt': '총평가손익금액',
    'evlu_erng_rt1': '평가수익율1',
    'tot_dncl_amt': '총예수금액',
    'wcrc_evlu_amt_smtl': '원화평가금액합계',
    'tot_asst_amt2': '총자산금액2',
    'frcr_cblc_wcrc_evlu_amt_smtl': '외화잔고원화평가금액합계',
    'tot_loan_amt': '총대출금액',
    'tot_ldng_evlu_amt': '총대여평가금액'
}","[""어제 날짜 기준으로 내 해외주식 잔고 보여줘."", ""원화 기준으로 내 해외주식 포트폴리오 현황이 궁금해."", ""내 계좌의 총 자산 금액과 총평가손익금액 알려줘."", ""내가 보유한 테슬라의 평가손익율과 평균단가 보여줘."", ""내 계좌의 통화별 외화예수금액 보여줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_paymt_stdr_balance/inquire_paymt_stdr_balance.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_paymt_stdr_balance/chk_inquire_paymt_stdr_balance.py
overseas_stock,주문/계좌,해외주식 미국주간주문,REST,POST,/uapi/overseas-stock/v1/trading/daytime-order,v1_해외주식-026,daytime_order,[해외주식] 주문/계좌 해외주식 미국주간주문[v1_해외주식-026] 해외주식 미국주간주문 API를 호출하여 DataFrame으로 반환합니다.,"order_dv (str): 주문구분 buy(매수) / sell(매도)
cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ovrs_excg_cd (str): NASD:나스닥 / NYSE:뉴욕 / AMEX:아멕스
pdno (str): 종목코드
ord_qty (str): 해외거래소 별 최소 주문수량 및 주문단위 확인 필요
ovrs_ord_unpr (str): 소수점 포함, 1주당 가격 * 시장가의 경우 1주당 가격을 공란으로 비우지 않음 ""0""으로 입력
ctac_tlno (str): "" ""
mgco_aptm_odno (str): "" ""
ord_svr_dvsn_cd (str): ""0""
ord_dvsn (str): [미국 매수/매도 주문]  00 : 지정가  * 주간거래는 지정가만 가능",Optional[pd.DataFrame]: 해외주식 미국주간주문 데이터,"     df = daytime_order(
         order_dv=""buy"",
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ovrs_excg_cd=""NASD"",
         pdno=""AAPL"",
         ord_qty=""10"",
         ovrs_ord_unpr=""150.00"",
         ctac_tlno=""01012345678"",
         mgco_aptm_odno="""",
         ord_svr_dvsn_cd=""0"",
         ord_dvsn=""00""
     )
     print(df)","{
    'KRX_FWDG_ORD_ORGNO': '한국거래소전송주문조직번호',
    'ODNO': '주문번호',
    'ORD_TMD': '주문시각'
}","[""애플 주식 주간거래로 10주 매수 주문 넣어줘."", ""테슬라 주간거래 시장에서 5주 매도하고 싶어."", ""지금 바로 엔비디아 1주 주간거래로 지정가 900달러에 살게."", ""애플 주간거래로 1주 매수 주문해줘."", ""미국주간주문하고 주문번호랑 주문시각 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/daytime_order/daytime_order.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/daytime_order/chk_daytime_order.py
overseas_stock,주문/계좌,해외주식 미국주간정정취소,REST,POST,/uapi/overseas-stock/v1/trading/daytime-order-rvsecncl,v1_해외주식-027,daytime_order_rvsecncl,[해외주식] 주문/계좌 해외주식 미국주간정정취소[v1_해외주식-027] 해외주식 미국주간정정취소 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ovrs_excg_cd (str): NASD:나스닥 / NYSE:뉴욕 / AMEX:아멕스
pdno (str): 종목코드
orgn_odno (str): 정정 또는 취소할 원주문번호
rvse_cncl_dvsn_cd (str): 01 : 정정, 02 : 취소
ord_qty (str): 주문수량
ovrs_ord_unpr (str): 소수점 포함, 1주당 가격
ctac_tlno (str): 연락전화번호
mgco_aptm_odno (str): 운용사지정주문번호
ord_svr_dvsn_cd (str): 주문서버구분코드",Optional[pd.DataFrame]: 해외주식 미국주간정정취소 데이터,"     df = daytime_order_rvsecncl(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ovrs_excg_cd=""NASD"",
         pdno=""AAPL"",
         orgn_odno=""1234567890"",
         rvse_cncl_dvsn_cd=""01"",
         ord_qty=""100"",
         ovrs_ord_unpr=""150.00"",
         ctac_tlno=""01012345678"",
         mgco_aptm_odno=""000000000001"",
         ord_svr_dvsn_cd=""0""
     )
     print(df)","{
    'Output1': '응답상세',
    'KRX_FWDG_ORD_ORGNO': '한국거래소전송주문조직번호',
    'ODNO': '주문번호',
    'ORD_TMD': '주문시각'
}","[""아까 넣은 애플 주간거래 주문 취소해줘."", ""테슬라 주간거래 주문 가격을 수정하고 싶어."", ""오전에 낸 엔비디아 주간거래 주문을 취소하고 싶어."", ""애플 주간거래 주문 가격을 150달러로 정정해줘."", ""미국주간정정취소하고 새로 받은 주문번호와 주문시각 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/daytime_order_rvsecncl/daytime_order_rvsecncl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/daytime_order_rvsecncl/chk_daytime_order_rvsecncl.py
overseas_stock,주문/계좌,해외주식 기간손익,REST,GET,/uapi/overseas-stock/v1/trading/inquire-period-profit,v1_해외주식-032,inquire_period_profit,[해외주식] 주문/계좌 해외주식 기간손익[v1_해외주식-032] 해외주식 기간손익 API를 호출하여 DataFrame으로 반환합니다.,"cano (str): 계좌번호 체계(8-2)의 앞 8자리
acnt_prdt_cd (str): 계좌번호 체계(8-2)의 뒤 2자리
ovrs_excg_cd (str): 공란 : 전체,  NASD : 미국, SEHK : 홍콩, SHAA : 중국, TKSE : 일본, HASE : 베트남
natn_cd (str): 공란(Default)
crcy_cd (str): 공란 : 전체 USD : 미국달러, HKD : 홍콩달러, CNY : 중국위안화,  JPY : 일본엔화, VND : 베트남동
pdno (str): 공란 : 전체
inqr_strt_dt (str): YYYYMMDD
inqr_end_dt (str): YYYYMMDD
wcrc_frcr_dvsn_cd (str): 01 : 외화, 02 : 원화
FK200 (str): 연속조회검색조건200
NK200 (str): 연속조회키200
dataframe1 (Optional[pd.DataFrame]): 누적 데이터프레임 (output1)
dataframe2 (Optional[pd.DataFrame]): 누적 데이터프레임 (output2)
tr_cont (str): 연속 거래 여부
depth (int): 현재 재귀 깊이
max_depth (int): 최대 재귀 깊이 (기본값: 10)","Tuple[pd.DataFrame, pd.DataFrame]: 해외주식 기간손익 데이터","     df1, df2 = inquire_period_profit(
         cano=trenv.my_acct,
         acnt_prdt_cd=trenv.my_prod,
         ovrs_excg_cd=""NASD"",
         natn_cd="""",
         crcy_cd=""USD"",
         pdno="""",
         inqr_strt_dt=""20230101"",
         inqr_end_dt=""20231231"",
         wcrc_frcr_dvsn_cd=""01"",
         FK200="""",
         NK200=""""
     )
     print(df1)
     print(df2)","{
    'trad_day': '매매일',
    'ovrs_pdno': '해외상품번호',
    'slcl_qty': '매도청산수량',
    'pchs_avg_pric': '매입평균가격',
    'frcr_pchs_amt1': '외화매입금액1',
    'avg_sll_unpr': '평균매도단가',
    'frcr_sll_amt_smtl1': '외화매도금액합계1',
    'stck_sll_tlex': '주식매도제비용',
    'ovrs_rlzt_pfls_amt': '해외실현손익금액',
    'pftrt': '수익률',
    'exrt': '환율',
    'ovrs_excg_cd': '해외거래소코드',
    'frst_bltn_exrt': '최초고시환율',
    'stck_sll_amt_smtl': '주식매도금액합계',
    'stck_buy_amt_smtl': '주식매수금액합계',
    'smtl_fee1': '합계수수료1',
    'excc_dfrm_amt': '정산지급금액',
    'ovrs_rlzt_pfls_tot_amt': '해외실현손익총금액',
    'tot_pftrt': '총수익률',
    'bass_dt': '기준일자',
    'exrt': '환율'
}","[""올해 내 해외주식 매매 손익 종목별로 보여줘."", ""작년에 내가 애플 주식으로 얼마 벌었는지 해외실현손익금액 알려줘."", ""원화 기준으로 내 해외주식 기간 손익 보여줘."", ""어제 내가 판 테슬라의 실현 손익과 수익률 알려줘."", ""이번 달 나의 총실현손익과 총수익률 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_period_profit/inquire_period_profit.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_period_profit/chk_inquire_period_profit.py
overseas_stock,주문/계좌,해외주식 예약주문접수,REST,POST,/uapi/overseas-stock/v1/trading/order-resv,v1_해외주식-002,order_resv,"미국거래소 운영시간 외 미국주식을 예약 매매하기 위한 API입니다. * 해외주식 서비스 신청 후 이용 가능합니다. (아래 링크 3번 해외증권 거래신청 참고) https://securities.koreainvestment.com/main/bond/research/_static/TF03ca010001.jsp ※ POST API의 경우 BODY값의 key값들을 대문자로 작성하셔야 합니다. (EX. ""CANO"" : ""12345678"", ""ACNT_PRDT_CD"": ""01"",...) * 아래 각 국가의 시장별 예약주문 접수 가능 시간을 확인하시길 바랍니다. 미국 예약주문 접수시간 1) 10:00 ~ 23:20 / 10:00 ~ 22:20 (서머타임 시) 2) 주문제한 : 16:30 ~ 16:45 경까지 (사유 : 시스템 정산작업시간) 3) 23:30 정규장으로 주문 전송 (서머타임 시 22:30 정규장 주문 전송) 4) 미국 거래소 운영시간(한국시간 기준) : 23:30 ~ 06:00 (썸머타임 적용 시 22:30 ~ 05:00) 홍콩 예약주문 접수시간 1) 09:00 ~ 10:20 접수, 10:30 주문전송 2) 10:40 ~ 13:50 접수, 14:00 주문전송 중국 예약주문 접수시간 1) 09:00 ~ 10:20 접수, 10:30 주문전송 2) 10:40 ~ 13:50 접수, 14:00 주문전송 일본 예약주문 접수시간 1) 09:10 ~ 12:20 까지 접수, 12:30 주문전송 베트남 예약주문 접수시간 1) 09:00 ~ 11:00 까지 접수, 11:15 주문전송 2) 11:20 ~ 14:50 까지 접수, 15:00 주문전송 * 예약주문 유의사항 1) 예약주문 유효기간 : 당일 - 미국장 마감 후, 미체결주문은 자동취소 - 미국휴장 시, 익 영업일로 이전 (미국예약주문화면에서 취소 가능) 2) 증거금 및 잔고보유 : 체크 안함 3) 주문전송 불가사유 - 매수증거금 부족: 수수료 포함 매수금액부족, 환전, 시세이용료 출금, 인출에 의한 증거금 부족 - 기타 매수증거금 부족, 매도가능수량 부족, 주권변경 등 권리발생으로 인한 주문불가사유 발생 4) 지정가주문만 가능 * 단 미국 예약매도주문(TTTT3016U)의 경우, MOO(장개시시장가)로 주문 접수 가능","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
ord_dv (str): [필수] 매도매수구분 (ex. usBuy:미국매수, usSell:미국매도, asia:아시아)
cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 01)
pdno (str): [필수] 상품번호
ovrs_excg_cd (str): [필수] 해외거래소코드 (ex. NASD:나스닥, NYSE:뉴욕, AMEX:아멕스, SEHK:홍콩, SHAA:상해, SZAA:심천, TKSE:일본, HASE:하노이, VNSE:호치민)
ft_ord_qty (str): [필수] FT주문수량
ft_ord_unpr3 (str): [필수] FT주문단가3
sll_buy_dvsn_cd (Optional[str]): 매도매수구분코드 (ex. 아시아인경우만 사용, 01:매도,02:매수)
rvse_cncl_dvsn_cd (Optional[str]): 정정취소구분코드 (ex. 아시아인경우만 사용, 00:매도/매수)
prdt_type_cd (Optional[str]): 상품유형코드 (ex. 아시아인경우만 사용)
ord_svr_dvsn_cd (Optional[str]): 주문서버구분코드 (ex. 0)
rsvn_ord_rcit_dt (Optional[str]): 예약주문접수일자 (ex. 아시아인경우만 사용)
ord_dvsn (Optional[str]): 주문구분 (ex. 미국 매수/매도인 경우만 사용)
ovrs_rsvn_odno (Optional[str]): 해외예약주문번호 (ex. 아이사인 경우만 사용)
algo_ord_tmd_dvsn_cd (Optional[str]): 알고리즘주문시간구분코드 (ex. TWAP, VWAP 주문에서만 사용, 02로 고정)",pd.DataFrame: 해외주식 예약주문접수 결과 데이터,"     df = order_resv(env_dv=""real"", ord_dv=""usBuy"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, pdno=""TSLA"", ovrs_excg_cd=""NASD"", ft_ord_qty=""1"", ft_ord_unpr3=""900"")
     print(df)","{
    'ODNO': '한국거래소전송주문조직번호',
    'RSVN_ORD_RCIT_DT': '예약주문접수일자',
    'OVRS_RSVN_ODNO': '해외예약주문번호'
}","[""내일 아침에 애플 10주 시장가로 매수 예약해줘."", ""테슬라 5주를 지정가로 매도 예약하고 싶어."", ""미국 장 시작 전에 MOO(장개시시장가)로 애플 1주 매도 예약 걸어줘."", ""내일 장 시작할 때 바로 주문이 나가게 예약할 수 있어?"", ""해외주식 예약주문 접수하고 해외예약주문번호 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/order_resv/order_resv.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/order_resv/chk_order_resv.py
overseas_stock,주문/계좌,해외주식 예약주문조회,REST,GET,/uapi/overseas-stock/v1/trading/order-resv-list,v1_해외주식-013,order_resv_list,해외주식 예약주문 조회 API입니다. ※ 모의투자는 사용 불가합니다. * 해외주식 서비스 신청 후 이용 가능합니다. (아래 링크 3번 해외증권 거래신청 참고) https://securities.koreainvestment.com/main/bond/research/_static/TF03ca010001.jsp,"nat_dv (str): [필수] 국가구분코드 (ex. us:미국, asia:아시아)
cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 01)
inqr_strt_dt (str): [필수] 조회시작일자 (ex. 20250101)
inqr_end_dt (str): [필수] 조회종료일자 (ex. 20251231)
inqr_dvsn_cd (str): [필수] 조회구분코드 (ex. 00:전체, 01:일반해외주식, 02:미니스탁)
ovrs_excg_cd (str): [필수] 해외거래소코드 (ex. NASD:나스닥, NYSE:뉴욕, AMEX:아멕스, SEHK:홍콩, SHAA:상해, SZAA:심천, TKSE:일본, HASE:하노이, VNSE:호치민)
prdt_type_cd (str): 상품유형코드
FK200 (str): 연속조회검색조건200
NK200 (str): 연속조회키200
tr_cont (str): 연속거래여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한",pd.DataFrame: 해외주식 예약주문조회 데이터,"     df = order_resv_list(nat_dv=""us"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, inqr_strt_dt=""20250101"", inqr_end_dt=""20251231"", inqr_dvsn_cd=""00"", ovrs_excg_cd=""NASD"")
     print(df)","{
    'cncl_yn': '취소여부',
    'rsvn_ord_rcit_dt': '예약주문접수일자',
    'ovrs_rsvn_odno': '해외예약주문번호',
    'ord_dt': '주문일자',
    'ord_gno_brno': '주문채번지점번호',
    'odno': '주문번호',
    'sll_buy_dvsn_cd': '매도매수구분코드',
    'sll_buy_dvsn_name': '매도매수구분명',
    'ovrs_rsvn_ord_stat_cd': '해외예약주문상태코드',
    'ovrs_rsvn_ord_stat_cd_name': '해외예약주문상태코드명',
    'pdno': '상품번호',
    'prdt_type_cd': '상품유형코드',
    'prdt_name': '상품명',
    'ord_rcit_tmd': '주문접수시각',
    'ord_fwdg_tmd': '주문전송시각',
    'tr_dvsn_name': '거래구분명',
    'ovrs_excg_cd': '해외거래소코드',
    'tr_mket_name': '거래시장명',
    'ord_stfno': '주문직원번호',
    'ft_ord_qty': 'FT주문수량',
    'ft_ord_unpr3': 'FT주문단가3',
    'ft_ccld_qty': 'FT체결수량',
    'nprc_rson_text': '미처리사유내용',
    'splt_buy_attr_name': '분할매수속성명'
}","[""내가 예약한 해외주식 주문들 내역 좀 보여줘."", ""취소했던 예약 주문 기록도 볼 수 있어?"", ""어제 예약한 주문이 왜 처리 안됐는지 미처리사유내용 알려줘."", ""지난달에 예약했던 모든 주문의 해외예약주문상태코드명 보여줘."", ""예약주문 내역에서 주문수량과 체결수량 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/order_resv_list/order_resv_list.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/order_resv_list/chk_order_resv_list.py
overseas_stock,주문/계좌,해외주식 지정가체결내역조회,REST,GET,/uapi/overseas-stock/v1/trading/inquire-algo-ccnl,해외주식-070,inquire_algo_ccnl,"해외주식 TWAP, VWAP 주문에 대한 체결내역 조회 API로 지정가 주문번호조회 API를 수행 후 조회해야합니다","cano (str): [필수] 계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 01)
ord_dt (str): 주문일자
ord_gno_brno (str): 주문채번지점번호
odno (str): 주문번호 (ex. 지정가주문번호 TTTC6058R에서 조회된 주문번호 입력)
ttlz_icld_yn (str): 집계포함여부
NK200 (str): 연속조회키200
FK200 (str): 연속조회조건200
tr_cont (str): 연속거래여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
dataframe3 (Optional[pd.DataFrame]): 누적 데이터프레임3
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한","Tuple[pd.DataFrame, pd.DataFrame]: (output, output3) 체결내역 데이터","     result, result3 = inquire_algo_ccnl(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod)
     print(result)
     print(result3)","{
    'CCLD_SEQ': '체결순번',
    'CCLD_BTWN': '체결시간',
    'PDNO': '상품번호',
    'ITEM_NAME': '종목명',
    'FT_CCLD_QTY': 'FT체결수량',
    'FT_CCLD_UNPR3': 'FT체결단가',
    'FT_CCLD_AMT3': 'FT체결금액',
    'ODNO': '주문번호',
    'TRAD_DVSN_NAME': '매매구분명',
    'FT_ORD_QTY': 'FT주문수량',
    'FT_ORD_UNPR3': 'FT주문단가',
    'ORD_TMD': '주문시각',
    'SPLT_BUY_ATTR_NAME': '분할매수속성명',
    'TR_CRCY': '거래통화',
    'CCLD_CNT': '체결건수'
}","[""어제 내가 낸 TWAP 주문 체결 내역 상세히 보여줘."", ""VWAP으로 주문한 내역이 어떻게 분할 체결됐는지 궁금해."", ""어제 낸 분할매수 주문의 평균 체결 단가와 총 체결금액 알려줘."", ""내 TWAP 주문의 체결시간과 체결수량, 체결단가 보여줘."", ""어제 낸 지정가 주문의 체결건수 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_algo_ccnl/inquire_algo_ccnl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/inquire_algo_ccnl/chk_inquire_algo_ccnl.py
overseas_stock,주문/계좌,해외주식 예약주문접수취소,REST,POST,/uapi/overseas-stock/v1/trading/order-resv-ccnl,v1_해외주식-004,order_resv_ccnl,"접수된 미국주식 예약주문을 취소하기 위한 API입니다. (해외주식 예약주문접수 시 Return 받은 ODNO를 참고하여 API를 호출하세요.) * 해외주식 서비스 신청 후 이용 가능합니다. (아래 링크 3번 해외증권 거래신청 참고) https://securities.koreainvestment.com/main/bond/research/_static/TF03ca010001.jsp ※ POST API의 경우 BODY값의 key값들을 대문자로 작성하셔야 합니다. (EX. ""CANO"" : ""12345678"", ""ACNT_PRDT_CD"": ""01"",...)","env_dv (str): [필수] 실전모의구분 (ex. real:실전, demo:모의)
nat_dv (str): [필수] 국가구분 (ex. us:미국)
cano (str): [필수] 종합계좌번호 (ex. 12345678)
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 01)
rsvn_ord_rcit_dt (str): [필수] 해외주문접수일자
ovrs_rsvn_odno (str): [필수] 해외예약주문번호 (ex. 해외주식_예약주문접수 API Output ODNO(주문번호) 참고)",pd.DataFrame: 해외주식 예약주문접수취소 결과 데이터,"     df = order_resv_ccnl(env_dv=""real"", nat_dv=""us"", cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, rsvn_ord_rcit_dt=""20220810"", ovrs_rsvn_odno=""0030008244"")
     print(df)","{
    'OVRS_RSVN_ODNO': '해외예약주문번호'
}","[""아까 예약한 애플 주식 주문 취소해줘."", ""테슬라 예약 주문을 취소하고 싶어."", ""오전에 예약한 엔비디아 주문을 취소하고 싶어."", ""어제 예약한 애플 주문 취소해줘."", ""해외주식 예약주문 취소하고 해외예약주문번호 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/order_resv_ccnl/order_resv_ccnl.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/order_resv_ccnl/chk_order_resv_ccnl.py
overseas_stock,주문/계좌,해외주식 지정가주문번호조회,REST,GET,/uapi/overseas-stock/v1/trading/algo-ordno,해외주식-071,algo_ordno,"TWAP, VWAP 주문에 대한 주문번호를 조회하는 API","cano (str): [필수] 종합계좌번호
acnt_prdt_cd (str): [필수] 계좌상품코드 (ex. 01)
trad_dt (str): [필수] 거래일자
FK200 (str): 연속조회검색조건200
NK200 (str): 연속조회키200
tr_cont (str): 연속거래여부
dataframe (Optional[pd.DataFrame]): 누적 데이터프레임
depth (int): 내부 재귀깊이 (자동관리)
max_depth (int): 최대 재귀 횟수 제한",pd.DataFrame: 해외주식 지정가주문번호 데이터,"     df = algo_ordno(cano=trenv.my_acct, acnt_prdt_cd=trenv.my_prod, trad_dt=""20250619"")
     print(df)","{
    'ODNO': '주문번호',
    'TRAD_DVSN_NAME': '매매구분명',
    'PDNO': '상품번호',
    'ITEM_NAME': '종목명',
    'FT_ORD_QTY': 'FT주문수량',
    'FT_ORD_UNPR3': 'FT주문단가',
    'SPLT_BUY_ATTR_NAME': '분할매수속성명',
    'FT_CCLD_QTY': 'FT체결수량',
    'ORD_GNO_BRNO': '주문채번지점번호'
}","[""어제 내가 낸 VWAP 주문의 주문번호가 뭐야?"", ""오늘 낸 TWAP 주문이 여러 개로 나뉘어서 들어갔는지 확인하고 싶어."", ""어제 낸 분할매수 주문의 총 주문수량과 체결수량 알려줘."", ""내 VWAP 주문의 주문번호와 주문시각 보여줘."", ""오늘 낸 지정가 주문들의 종목명과 주문수량 알려줘.""]",https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/algo_ordno/algo_ordno.py,https://github.com/koreainvestment/open-trading-api/tree/main/examples_llm/overseas_stock/algo_ordno/chk_algo_ordno.py
